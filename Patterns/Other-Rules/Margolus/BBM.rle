# Billiard Ball Machine - from Cellular Automata Machines.
#
# A rule by Edward Fredkin. Signals and logic gates are simulated by
# 'billiard balls' that bounce off walls and each other. 
#
# E. Fredkin, T. Toffoli, "Conservative logic", International Journal of 
# Theoretical Physics, 21:3-4, 219-253 (1982)
#
# MCell Margolus specification: MS,D0;8;4;3;2;5;9;7;1;6;10;11;12;13;14;15
# (see: http://psoup.math.wisc.edu/mcell/rullex_marg.html )
#
# Rule table produced by Scripts/Python/Margolus/make-Margolus.py, which
# can convert any MCell Margolus specification into a rule table.
#
# At the time of writing, Golly does not support the Margolus neighborhood,
# so we are emulating it by using some extra states. Configurations must
# have the correct pattern of states to work correctly - you can use the
# scripts import.py and export.py in Scripts/Python/Margolus for easier
# drawing.
#
# cell states:
# 0 : background (never changes)
# 1 :  o  (a cell is present, this isn't a top-left)
# 2 :  .  (a cell isn't present, this isn't a top-left)
# 3 : [o] (a cell is present, this is a top-left)
# 4 : [.] (a cell isn't present, this is a top-left)
#
x = 88, y = 74, rule = BBM
88A$CACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACAC
ACACACACACACACACACACACA$2A84B2A$CADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDBDBDBDBDBDBDBCA$2A84B2A$CADBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDBDBDBDB
DBDBDBDBCA$2A84B2A$CADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBCA$2A37B2A45B2A$CADBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
CA$2A84B2A$CADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBCA$2A84B2A$CADBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBCA$2A84B2A$CA
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBCA$2A84B2A$CADBDBDBDBDBDACACACACACACACACACACACACACACAC
ACACACACACACACACACACACACACACACACBDBDBDBDBDBCA$2A11B62A11B2A$CADBDBDBD
BDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDB
DBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CA
DBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD
BDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A
11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBD
BDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B
2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBC
A$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBD
BDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDB
DBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADB
DBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD
ACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B
2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A
58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$
2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBD
ACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDB
DBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDACBDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDB
DBDBDBDACBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDAC
BDBDBDBDBDBCA$2A11B2A58B2A11B2A$CADBDBDBDBDBDACBDBDBDBDBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDACBDBDBDBDBDBCA$2A11B2A53BA4B2A
11B2A$CADBDBDBDBDBDACACACACACACACACACACACACACACACACACACACACACACACACAC
ACACACACACACBDBDBDBDBDBCA$2A11B62A11B2A$CADBDBDBDBDBDBDBDBDBDBDBDBDBD
BDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBCA$2A84B2A$C
ADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBCA$2A84B2A$CADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBCA$2A84B2A$CADBDBDBDBDBDB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD
BDBCA$88A$CACACACACACACACACACACACACACACACACACACACACACACACACACACACACAC
ACACACACACACACACACACACACACACA!

# Makefile for building Mac OS 10.3.9 PPC version of Golly using wxWidgets.
# 
# WARNING: It assumes you've built wxWidgets using these steps:
# - Edit include/wx/mac/setup.h and set wxUSE_UNICODE to 1.
# - Open src/wxWindows.xcodeproj.
# - Select Project > Set Active Target > static.
# - Select Project > Set Active Build Configuration > Deployment.
# - Hit the Build button.
# - Open Terminal and run "ranlib src/build/Deployment/libwx_mac_static.a".
# 
# In the lines below, change WX_DIR to where you installed wxWidgets,
# and change WX_RELEASE to match your wxWidgets version.

WX_RELEASE = 2.8
WX_DIR = /HD/wxWidgets/wxMac-2.8.4
WXINC_DIR = $(WX_DIR)/src/build/include

APP_NAME = Golly
APP_VERSION = 2.1b3

# for Perl script support
PERL_INCLUDE = `/usr/bin/perl -MExtUtils::Embed -e ccopts`
PERL_LINK = `/usr/bin/perl -MExtUtils::Embed -e ldopts`

# for Python script support
PYTHON_INCLUDE = -I`/usr/bin/python -c "import distutils.sysconfig; print distutils.sysconfig.get_python_inc()"`
# following python command doesn't generate correct info on OS 10.4
# PYTHON_LINK = `/usr/bin/python -c "import distutils.sysconfig; print distutils.sysconfig.get_config_var('LINKFORSHARED')"`
PYTHON_LINK = -u __dummy -u _PyMac_Error -framework System -framework CoreServices \
   -framework Foundation -F/System/Library/Frameworks -framework Python

# for building source and binary distributions:
RELEASENAME = golly-$(APP_VERSION)
SHAREDFILES = Help Patterns Scripts Rules README LICENSE
SRCFILES = BUILD TODO CHANGES makefile-gtk makefile-x11 makefile-mac makefile-win \
   bitmaps golly.rc *.ico appicon.xpm Info.plist.in *.icns *.h *.cpp

# Variables:

###CXXC = g++
CXXC = MACOSX_DEPLOYMENT_TARGET=10.3 NEXT_ROOT=/Developer/SDKs/MacOSX10.4u.sdk /usr/bin/g++-3.3

CXXFLAGS = -x c++ -arch ppc -pipe -Wno-trigraphs -fpascal-strings -fasm-blocks \
   -DNO_GCC_PRAGMA -D__WXMAC__ -DwxUSE_BASE=1 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES \
   -D__WXMAC_XCODE__=1 -DWX_PRECOMP=1 -DMACOS_CLASSIC -fmessage-length=0 -mtune=G4 \
   -Wno-invalid-offsetof -Wmost -Wno-four-char-constants -Wno-unknown-pragmas -mdynamic-no-pic \
   -I${WX_DIR}/include -I${WXINC_DIR} \
   -DMAC_OS_X_VERSION_MIN_REQUIRED=1030 -fconstant-cfstrings -D__CONSTANT_CFSTRINGS__ \
   -isystem /Developer/SDKs/MacOSX10.4u.sdk/usr/include/gcc/darwin/3.3 \
   -I/Developer/SDKs/MacOSX10.4u.sdk/usr/include/gcc/darwin/3.3/c++ \
   -I/Developer/SDKs/MacOSX10.4u.sdk/usr/include/gcc/darwin/3.3/c++/ppc-darwin \
   -isystem /Developer/SDKs/MacOSX10.4u.sdk/usr/include \
   -I${WX_DIR}/src/mac/carbon/morefilex -I/Developer/Headers/FlatCarbon \
   -DVERSION=$(APP_VERSION) -DZLIB -O5 -Wall -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor \
   -fno-strict-aliasing -fno-common

# for bgolly
CXXBASE = -arch ppc \
   -isystem /Developer/SDKs/MacOSX10.4u.sdk/usr/include/gcc/darwin/3.3 \
   -I/Developer/SDKs/MacOSX10.4u.sdk/usr/include/gcc/darwin/3.3/c++ \
   -I/Developer/SDKs/MacOSX10.4u.sdk/usr/include/gcc/darwin/3.3/c++/ppc-darwin \
   -isystem /Developer/SDKs/MacOSX10.4u.sdk/usr/include \
   -DVERSION=$(APP_VERSION) -DZLIB -O5 -Wall -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor \
   -fno-strict-aliasing -fno-common
LDBASE = -arch ppc \
   -L/Developer/SDKs/MacOSX10.4u.sdk/usr/lib/gcc/darwin/3.3 \
   -mmacosx-version-min=10.3 -lz \
   -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk

OBJDIR = ObjMacPPC
BASEH = bigint.h ghashbase.h hlifealgo.h jvnalgo.h lifealgo.h lifepoll.h \
   liferender.h liferules.h platform.h qlifealgo.h readpattern.h \
   util.h viewport.h writepattern.h ruletreealgo.h generationsalgo.h ruletable_algo.h
BASEOBJ = $(OBJDIR)/bigint.o $(OBJDIR)/lifealgo.o $(OBJDIR)/hlifealgo.o \
   $(OBJDIR)/hlifedraw.o $(OBJDIR)/qlifealgo.o $(OBJDIR)/qlifedraw.o \
   $(OBJDIR)/jvnalgo.o $(OBJDIR)/ruletreealgo.o \
   $(OBJDIR)/ruletable_algo.o \
   $(OBJDIR)/ghashbase.o $(OBJDIR)/ghashdraw.o $(OBJDIR)/readpattern.o \
   $(OBJDIR)/writepattern.o $(OBJDIR)/liferules.o $(OBJDIR)/util.o \
   $(OBJDIR)/liferender.o $(OBJDIR)/viewport.o $(OBJDIR)/lifepoll.o \
   $(OBJDIR)/generationsalgo.o
WXH = wxalgos.h wxedit.h wxgolly.h wxhelp.h wxinfo.h wxlayer.h wxmain.h \
   wxperl.h wxprefs.h wxpython.h wxrender.h wxrule.h wxscript.h wxselect.h wxstatus.h \
   wxundo.h wxutils.h wxview.h
WXOBJ = $(OBJDIR)/wxutils.o $(OBJDIR)/wxprefs.o $(OBJDIR)/wxalgos.o $(OBJDIR)/wxrule.o \
   $(OBJDIR)/wxinfo.o $(OBJDIR)/wxhelp.o $(OBJDIR)/wxstatus.o $(OBJDIR)/wxview.o \
   $(OBJDIR)/wxrender.o $(OBJDIR)/wxscript.o $(OBJDIR)/wxperl.o $(OBJDIR)/wxpython.o \
   $(OBJDIR)/wxfile.o $(OBJDIR)/wxedit.o $(OBJDIR)/wxcontrol.o $(OBJDIR)/wxundo.o \
   $(OBJDIR)/wxselect.o $(OBJDIR)/wxlayer.o $(OBJDIR)/wxmain.o $(OBJDIR)/wxgolly.o

LIBDIRNAME = $(WX_DIR)/src/build/Deployment

# Targets:

all: $(OBJDIR) app.bin app_bundle bgolly RuleTableToTree

$(BASEOBJ): $(BASEH)
$(WXOBJ): $(BASEH) $(WXH) *.xpm bitmaps/*.xpm

$(OBJDIR):
	mkdir -p $(OBJDIR)

clean: 
	rm -f $(OBJDIR)/*.o bgolly RuleTableToTree
	rm -rf $(APP_NAME).app

bgolly: $(BASEOBJ) $(OBJDIR)/bgolly.o
	$(CXXC) $(CXXBASE) -o bgolly $(BASEOBJ) $(OBJDIR)/bgolly.o $(LDBASE)

RuleTableToTree: $(BASEOBJ) $(OBJDIR)/RuleTableToTree.o
	$(CXXC) $(CXXBASE) -o RuleTableToTree $(BASEOBJ) $(OBJDIR)/RuleTableToTree.o $(LDBASE)

$(OBJDIR)/bgolly.o: bgolly.cpp
	$(CXXC) $(CXXBASE) -c -o $@ bgolly.cpp

$(OBJDIR)/RuleTableToTree.o: RuleTableToTree.cpp
	$(CXXC) $(CXXBASE) -c -o $@ RuleTableToTree.cpp

# Note that -headerpad_max_install_names is used so we can run
# install_name_tool below to change Perl lib path to a longer path.

app.bin: $(BASEOBJ) $(WXOBJ)
	$(CXXC) -o $@ $(BASEOBJ) $(WXOBJ) \
   -headerpad_max_install_names \
   -arch ppc -L/Developer/SDKs/MacOSX10.4u.sdk/usr/lib/gcc/darwin/3.3 \
   -L$(LIBDIRNAME) -lwx_mac_static \
   -framework Carbon -framework System -framework AGL -framework IOKit \
   -framework WebKit -framework AppKit -framework QuickTime -framework Cocoa \
   $(PERL_LINK) $(PYTHON_LINK) \
   -prebind -mmacosx-version-min=10.3 -lz -lpthread -liconv \
   -Wl,-dead_strip -Wl,-S \
   -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk

$(APP_NAME).app/Contents/PkgInfo: app.bin Info.plist.in \
app.icns file-mc.icns file-rle.icns
	mkdir -p $(APP_NAME).app/Contents
	mkdir -p $(APP_NAME).app/Contents/MacOS
	mkdir -p $(APP_NAME).app/Contents/Resources
	
	sed -e "s/VERSION/$(APP_VERSION)/" \
	Info.plist.in >$(APP_NAME).app/Contents/Info.plist
	
	echo -n "APPLGoLy" >$(APP_NAME).app/Contents/PkgInfo
	
	mv -f app.bin $(APP_NAME).app/Contents/MacOS/$(APP_NAME)
	
	install_name_tool -change /System/Library/Perl/lib/5.8/libperl.dylib \
	/System/Library/Perl/5.8.1/darwin-thread-multi-2level/CORE/libperl.dylib \
	$(APP_NAME).app/Contents/MacOS/$(APP_NAME)
	
	cp -f *.icns $(APP_NAME).app/Contents/Resources

app_bundle: $(APP_NAME).app/Contents/PkgInfo

$(OBJDIR)/bigint.o: bigint.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ bigint.cpp

$(OBJDIR)/lifealgo.o: lifealgo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ lifealgo.cpp

$(OBJDIR)/hlifealgo.o: hlifealgo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ hlifealgo.cpp

$(OBJDIR)/hlifedraw.o: hlifedraw.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ hlifedraw.cpp

$(OBJDIR)/qlifealgo.o: qlifealgo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ qlifealgo.cpp

$(OBJDIR)/qlifedraw.o: qlifedraw.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ qlifedraw.cpp

$(OBJDIR)/jvnalgo.o: jvnalgo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ jvnalgo.cpp

$(OBJDIR)/ruletable_algo.o: ruletable_algo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ ruletable_algo.cpp

$(OBJDIR)/ruletreealgo.o: ruletreealgo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ ruletreealgo.cpp

$(OBJDIR)/generationsalgo.o: generationsalgo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ generationsalgo.cpp

$(OBJDIR)/ghashbase.o: ghashbase.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ ghashbase.cpp

$(OBJDIR)/ghashdraw.o: ghashdraw.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ ghashdraw.cpp

$(OBJDIR)/liferules.o: liferules.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ liferules.cpp

$(OBJDIR)/liferender.o: liferender.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ liferender.cpp

$(OBJDIR)/readpattern.o: readpattern.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ readpattern.cpp

$(OBJDIR)/writepattern.o: writepattern.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ writepattern.cpp

$(OBJDIR)/util.o: util.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ util.cpp

$(OBJDIR)/viewport.o: viewport.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ viewport.cpp

$(OBJDIR)/lifepoll.o: lifepoll.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ lifepoll.cpp

$(OBJDIR)/wxutils.o: wxutils.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxutils.cpp

$(OBJDIR)/wxprefs.o: wxprefs.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxprefs.cpp

$(OBJDIR)/wxalgos.o: wxalgos.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxalgos.cpp

$(OBJDIR)/wxrule.o: wxrule.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxrule.cpp

$(OBJDIR)/wxinfo.o: wxinfo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxinfo.cpp

$(OBJDIR)/wxhelp.o: wxhelp.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxhelp.cpp

$(OBJDIR)/wxstatus.o: wxstatus.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxstatus.cpp

$(OBJDIR)/wxview.o: wxview.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxview.cpp

$(OBJDIR)/wxrender.o: wxrender.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxrender.cpp

$(OBJDIR)/wxperl.o: wxperl.cpp
	$(CXXC) $(CXXFLAGS) $(PERL_INCLUDE) -c -o $@ wxperl.cpp

$(OBJDIR)/wxpython.o: wxpython.cpp
	$(CXXC) $(CXXFLAGS) $(PYTHON_INCLUDE) -c -o $@ wxpython.cpp

$(OBJDIR)/wxscript.o: wxscript.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxscript.cpp

$(OBJDIR)/wxfile.o: wxfile.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxfile.cpp

$(OBJDIR)/wxedit.o: wxedit.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxedit.cpp

$(OBJDIR)/wxselect.o: wxselect.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxselect.cpp

$(OBJDIR)/wxcontrol.o: wxcontrol.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxcontrol.cpp

$(OBJDIR)/wxundo.o: wxundo.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxundo.cpp

$(OBJDIR)/wxlayer.o: wxlayer.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxlayer.cpp

$(OBJDIR)/wxmain.o: wxmain.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxmain.cpp

$(OBJDIR)/wxgolly.o: wxgolly.cpp
	$(CXXC) $(CXXFLAGS) -c -o $@ wxgolly.cpp

srcdist:
	-rm -rf $(RELEASENAME)-src
	mkdir $(RELEASENAME)-src
	cp -rp $(SRCFILES) $(SHAREDFILES) $(RELEASENAME)-src
	find $(RELEASENAME)-src -name CVS | xargs rm -rf
	tar -cf - ./$(RELEASENAME)-src | gzip > $(RELEASENAME)-src.tar.gz

bindist: all
	-rm -rf $(RELEASENAME)-mac1039
	mkdir $(RELEASENAME)-mac1039
	cp -rp $(APP_NAME).app bgolly RuleTableToTree $(SHAREDFILES) $(RELEASENAME)-mac1039
	find $(RELEASENAME)-mac1039 -name CVS | xargs rm -rf
	/Developer/Tools/SetFile -c ttxt -t TEXT $(RELEASENAME)-mac1039/README
	/Developer/Tools/SetFile -c ttxt -t TEXT $(RELEASENAME)-mac1039/LICENSE
	echo Now create zip archive of $(RELEASENAME)-mac1039
###tar -cf - ./$(RELEASENAME)-mac1039 | gzip > $(RELEASENAME)-mac1039.tar.gz

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<title>Life Lexicon (I)</title>
<meta name="author" content="Stephen A. Silver">
<meta name="description" content="Part of Stephen Silver's Life Lexicon.">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<link href="lifelex.css" rel="stylesheet" type="text/css">
<link rel="begin" type="text/html" href="lex.htm" title="Life Lexicon">
<base target="_top">
</head>
<body bgcolor="#FFFFCE">

<center><A HREF="lex.htm">Introduction</A> | <A HREF="lex_bib.htm">Bibliography</A></center></center>
<hr>
<center>
<font size=-1><b>
<A HREF="lex_1.htm">1-9</A> |
<A HREF="lex_a.htm">A</A> |
<A HREF="lex_b.htm">B</A> |
<A HREF="lex_c.htm">C</A> |
<A HREF="lex_d.htm">D</A> |
<A HREF="lex_e.htm">E</A> |
<A HREF="lex_f.htm">F</A> |
<A HREF="lex_g.htm">G</A> |
<A HREF="lex_h.htm">H</A> |
<A HREF="lex_i.htm">I</A> |
<A HREF="lex_j.htm">J</A> |
<A HREF="lex_k.htm">K</A> |
<A HREF="lex_l.htm">L</A> |
<A HREF="lex_m.htm">M</A> |
<A HREF="lex_n.htm">N</A> |
<A HREF="lex_o.htm">O</A> |
<A HREF="lex_p.htm">P</A> |
<A HREF="lex_q.htm">Q</A> |
<A HREF="lex_r.htm">R</A> |
<A HREF="lex_s.htm">S</A> |
<A HREF="lex_t.htm">T</A> |
<A HREF="lex_u.htm">U</A> |
<A HREF="lex_v.htm">V</A> |
<A HREF="lex_w.htm">W</A> |
<A HREF="lex_x.htm">X</A> |
<A HREF="lex_y.htm">Y</A> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
<p><a name=iheptomino>:</a><b>I-heptomino</b> Name given by Conway to the following <a href="lex_h.htm#heptomino">heptomino</a>. After
one generation this is the same as the <a href="lex_h.htm#hheptomino">H-heptomino</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO..
.O..
.OO.
..OO
</a></pre></td></tr></table></center>
<p><a name=img>:</a><b>IMG</b> = <a href="#intermittingglidergun">intermitting glider gun</a>
<p><a name=immigration>:</a><b>Immigration</b> A form of <a href="lex_c.htm#colorizedlife">colorized Life</a> in which there are two types
of ON cell, a newly-born cell taking the type of the majority of its
three <a href="lex_p.htm#parentcells">parent cells</a> and surviving cells remaining of the same type
as in the previous generation.
<p><a name=inductioncoil>:</a><b>induction coil</b> Any object used to stabilize an edge (or edges)
without touching. The tubs used in the <a href="lex_g.htm#graycounter">Gray counter</a> are examples,
as are the blocks and snakes used in the <a href="lex_h.htm#hertzoscillator">Hertz oscillator</a> and the
heptomino at the bottom of the <a href="lex_m.htm#mathematician">mathematician</a>.
<p><a name=inductor>:</a><b>inductor</b> Any <a href="lex_o.htm#oscillator">oscillator</a> with a row of dead cells down the middle
and whose two halves are mirror images of one another, both halves
being required for the oscillator to work. The classic examples are
the <a href="lex_p.htm#pulsar">pulsar</a> and the <a href="lex_t.htm#tumbler">tumbler</a>. If still lifes are considered as
p1 oscillators then there are numerous simple examples such as
<a href="lex_t.htm#tableontable">table on table</a>, <a href="lex_d.htm#deadsparkcoil">dead spark coil</a> and <a href="lex_c.htm#cismirroredrbee">cis-mirrored R-bee</a>.
Some spaceships, such as the <a href="lex_b.htm#brain">brain</a>, the <a href="lex_s.htm#snail">snail</a> and the <a href="lex_s.htm#spider">spider</a>
use the same principle.
<p><a name=infinitegliderhotel>:</a><b>infinite glider hotel</b> A pattern by David Bell, named after Hilbert's
"infinite hotel" scenario in which a hotel with an infinite number of
rooms has room for more guests even if it is already full, simply by
shuffling the old guests around.
<p>In this pattern, two pairs of <a href="lex_c.htm#cordership">Corderships</a> moving at <i>c</i>/12 are
pulling apart such that there is an ever-lengthening <a href="lex_g.htm#glider">glider</a> track
between them. Every 128 generations another glider is injected into
the glider track, joining the gliders already circulating there.
The number of gliders in the track therefore increases without limit.
<p>The tricky part of this construction is that even though all
the previously injected gliders are repeatedly flying through the
injection point, that point is guaranteed to be empty when it is
time for the next glider to be injected.
<p><a name=infinitegrowth>:</a><b>infinite growth</b> Growth of a finite pattern such that the
<a href="lex_p.htm#population">population</a> tends to infinity, or at least is unbounded.
Sometimes the term is used for growth of something other than
population (for example, length), but here we will only consider
infinite population growth. The first known pattern with infinite
growth in this sense was the <a href="lex_g.htm#gosperglidergun">Gosper glider gun</a>.
<p>An interesting question is: What is the minimum population of a
pattern that exhibits infinite growth? In 1971 Charles Corderman
found that a <a href="lex_s.htm#switchengine">switch engine</a> could be stabilized by a <a href="lex_p.htm#preblock">pre-block</a>
in a number of different ways, giving 11-cell patterns with
infinite growth. This record stood for more than quarter of a
century until Paul Callahan found, in November 1997, two 10-cell
patterns with infinite growth. The following month he found the
one shown below, which is much neater, being a single <a href="lex_c.htm#cluster">cluster</a>.
This produces a stabilized switch engine of the block-laying type.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
......O.
....O.OO
....O.O.
....O...
..O.....
O.O.....
</a></pre></td></tr></table></center>
Nick Gotts and Paul Callahan have also shown that there is no
infinite growth pattern with fewer than 10 cells, so that the
question has now been answered.
<p>Also of interest is the following pattern (again found by
Callahan), which is the only 5x5 pattern with infinite growth.
This too emits a block-laying switch engine.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOO.O
O....
...OO
.OO.O
O.O.O
</a></pre></td></tr></table></center>
<p>Following a conjecture of Nick Gotts, Stephen Silver produced, in
May 1998, a pattern of width 1 which exhibits infinite growth. This
pattern was very large (12470x1 in the first version, reduced to
5447x1 the following day). In October 1998 Paul Callahan did an
exhaustive search, finding the smallest example, the 39x1 pattern
shown below. This produces two block-laying switch engines,
stability being achieved at generation 1483.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOOOOOOO.OOOOO...OOO......OOOOOOO.OOOOO
</a></pre></td></tr></table></center>
<p>Although the simplest infinite growth patterns grow at a rate that
is (asymptotically) linear, many other types of growth rate are
possible, quadratic growth (see <a href="lex_b.htm#breeder">breeder</a>) being the fastest. Dean
Hickerson has found many patterns with unusual growth rates, such as
<a href="lex_s.htm#sawtooth">sawtooths</a> and a <a href="lex_c.htm#cabertosser">caber tosser</a>.
<p>See also <a href="lex_f.htm#fermatprimecalculator">Fermat prime calculator</a>.
<p><a name=initials>:</a><b>initials</b> = <a href="lex_m.htm#monogram">monogram</a>
<p><a name=inlineinverter>:</a><b>inline inverter</b> The following reaction in which a p30 <a href="lex_g.htm#gun">gun</a> can be
used to invert the presence or absence of gliders in a p30 stream,
with the output glider stream being in the same direction as the
input glider stream.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
................O...................
.................O..................
...............OOO..................
....................................
.......................O.O..........
.....................O...O..........
.............O.......O..............
............OOOO....O....O........OO
...........OO.O.O....O............OO
OO........OOO.O..O...O...O..........
OO.........OO.O.O......O.O..........
............OOOO....................
.............O......................
</a></pre></td></tr></table></center>
<p><a name=integral>:</a><b>integral</b> = <a href="#integralsign">integral sign</a>
<p><a name=integralsign>:</a><b>integral sign</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...OO
..O.O
..O..
O.O..
OO...
</a></pre></td></tr></table></center>
<p><a name=intentionless>:</a><b>intentionless</b> = <a href="lex_e.htm#elevener">elevener</a>
<p><a name=interchange>:</a><b>interchange</b> (p2) A common formation of six blinkers.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OOO....OOO..
..............
O............O
O............O
O............O
..............
..OOO....OOO..
</a></pre></td></tr></table></center>
<p><a name=intermittingglidergun>:</a><b>intermitting glider gun</b> Despite the name, an intermitting glider gun
(IMG) is more often an <a href="lex_o.htm#oscillator">oscillator</a> than a <a href="lex_g.htm#gun">gun</a>. There are two
basic types. A type 1 IMG consists of two guns firing at one another
in such a way that each gun is temporarily disabled on being hit
by a glider from the other gun. A type 2 IMG consists of a single
gun firing at a 180-degree glider <a href="lex_r.htm#reflector">reflector</a> in such a way that
returning gliders temporarily disable the gun.
<p>Both types of IMG can be used to make glider guns of periods that
are multiples of the base period. This is done by firing another
gun across the two-way intermittent glider stream of the IMG in such
a way that gliders only occasionally escape.
<p><a name=island>:</a><b>island</b> The individual <a href="lex_p.htm#polyplet">polyplets</a> of which a <a href="lex_s.htm#stable">stable</a> pattern
consists are sometimes called islands. So, for example, a <a href="lex_b.htm#boat">boat</a>
has only one island, while an <a href="lex_a.htm#aircraftcarrier">aircraft carrier</a> has two, a
<a href="lex_h.htm#honeyfarm">honey farm</a> has four and the standard form of the <a href="lex_e.htm#eater3">eater3</a> has five.
<p><a name=iwona>:</a><b>Iwona</b> (stabilizes at time 28786) The following <a href="lex_m.htm#methuselah">methuselah</a> found
by Andrzej Okrasinski in August 2004.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..............OOO...
....................
....................
....................
....................
....................
..O.................
...OO...............
...O..............O.
..................O.
..................O.
...................O
..................OO
.......OO...........
........O...........
....................
....................
....................
....................
OO..................
.O..................
</a></pre></td></tr></table></center>
<hr>
<center>
<font size=-1><b>
<a href="lex_1.htm">1-9</a> |
<a href="lex_a.htm">A</a> |
<a href="lex_b.htm">B</a> |
<a href="lex_c.htm">C</a> |
<a href="lex_d.htm">D</a> |
<a href="lex_e.htm">E</a> |
<a href="lex_f.htm">F</a> |
<a href="lex_g.htm">G</a> |
<a href="lex_h.htm">H</a> |
<a href="lex_i.htm">I</a> |
<a href="lex_j.htm">J</a> |
<a href="lex_k.htm">K</a> |
<a href="lex_l.htm">L</a> |
<a href="lex_m.htm">M</a> |
<a href="lex_n.htm">N</a> |
<a href="lex_o.htm">O</a> |
<a href="lex_p.htm">P</a> |
<a href="lex_q.htm">Q</a> |
<a href="lex_r.htm">R</a> |
<a href="lex_s.htm">S</a> |
<a href="lex_t.htm">T</a> |
<a href="lex_u.htm">U</a> |
<a href="lex_v.htm">V</a> |
<a href="lex_w.htm">W</a> |
<a href="lex_x.htm">X</a> |
<a href="lex_y.htm">Y</a> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
</body>

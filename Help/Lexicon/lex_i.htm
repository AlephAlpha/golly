<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<title>Life Lexicon (I)</title>
<meta name="author" content="Stephen A. Silver">
<meta name="description" content="Part of Stephen Silver's Life Lexicon.">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<link href="lifelex.css" rel="stylesheet" type="text/css">
<link rel="begin" type="text/html" href="lex.htm" title="Life Lexicon">
<base target="_top">
</head>
<body bgcolor="#FFFFCE">

<center><A HREF="lex.htm">Introduction</A> | <A HREF="lex_bib.htm">Bibliography</A></center></center>
<hr>
<center>
<font size=-1><b>
<A HREF="lex_1.htm">1-9</A> |
<A HREF="lex_a.htm">A</A> |
<A HREF="lex_b.htm">B</A> |
<A HREF="lex_c.htm">C</A> |
<A HREF="lex_d.htm">D</A> |
<A HREF="lex_e.htm">E</A> |
<A HREF="lex_f.htm">F</A> |
<A HREF="lex_g.htm">G</A> |
<A HREF="lex_h.htm">H</A> |
<A HREF="lex_i.htm">I</A> |
<A HREF="lex_j.htm">J</A> |
<A HREF="lex_k.htm">K</A> |
<A HREF="lex_l.htm">L</A> |
<A HREF="lex_m.htm">M</A> |
<A HREF="lex_n.htm">N</A> |
<A HREF="lex_o.htm">O</A> |
<A HREF="lex_p.htm">P</A> |
<A HREF="lex_q.htm">Q</A> |
<A HREF="lex_r.htm">R</A> |
<A HREF="lex_s.htm">S</A> |
<A HREF="lex_t.htm">T</A> |
<A HREF="lex_u.htm">U</A> |
<A HREF="lex_v.htm">V</A> |
<A HREF="lex_w.htm">W</A> |
<A HREF="lex_x.htm">X</A> |
<A HREF="lex_y.htm">Y</A> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
<p><a name=iheptomino>:</a><b>I-heptomino</b> Name given by Conway to the following <a href="lex_h.htm#heptomino">heptomino</a>. After
one generation this is the same as the <a href="lex_h.htm#hheptomino">H-heptomino</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO..
.O..
.OO.
..OO
</a></pre></td></tr></table></center>
<p><a name=img>:</a><b>IMG</b> = <a href="#intermittingglidergun">intermitting glider gun</a>
<p><a name=immigration>:</a><b>Immigration</b> A form of <a href="lex_c.htm#colourisedlife">colourised Life</a> in which there are two types
of ON cell, a newly-born cell taking the type of the majority of its
three <a href="lex_p.htm#parentcells">parent cells</a> and surviving cells remaining of the same type
as in the previous generation.
<p><a name=independentconduit>:</a><b>independent conduit</b> A <a href="lex_h.htm#herschelconduit">Herschel conduit</a> in which the input Herschel
produces its <a href="lex_f.htm#firstnaturalglider">first natural glider</a>. Compare <a href="lex_d.htm#dependentconduit">dependent conduit</a>.
<p><a name=inductioncoil>:</a><b>induction coil</b> Any object used to stabilize an edge (or edges)
without touching. The tubs used in the <a href="lex_g.htm#graycounter">Gray counter</a> are examples,
as are the blocks and snakes used in the <a href="lex_h.htm#hertzoscillator">Hertz oscillator</a> and the
heptomino at the bottom of the <a href="lex_m.htm#mathematician">mathematician</a>.
<p><a name=inductor>:</a><b>inductor</b> Any <a href="lex_o.htm#oscillator">oscillator</a> with a row of dead cells down the middle
and whose two halves are mirror images of one another, both halves
being required for the oscillator to work. The classic examples are
the <a href="lex_p.htm#pulsar">pulsar</a> and the <a href="lex_t.htm#tumbler">tumbler</a>. If still lifes are considered as p1
oscillators then there are numerous simple examples that include this
kind of central <a href="lex_g.htm#gutter">gutter</a>, such as <a href="lex_t.htm#tableontable">table on table</a>, <a href="lex_d.htm#deadsparkcoil">dead spark coil</a>
and <a href="lex_c.htm#cismirroredrbee">cis-mirrored R-bee</a>. Some spaceships, such as the <a href="lex_b.htm#brain">brain</a>, the
<a href="lex_s.htm#snail">snail</a> and the <a href="lex_s.htm#spider">spider</a>, use the same principle.
<p><a name=infinitegliderhotel>:</a><b>infinite glider hotel</b> A pattern by David Bell, named after Hilbert's
"infinite hotel" scenario in which a hotel with an infinite number of
rooms has room for more guests even if it is already full, simply by
shuffling the old guests around.
<p>In this pattern, two pairs of <a href="lex_c.htm#cordership">Corderships</a> moving at <i>c</i>/12 are
pulling apart such that there is an ever-lengthening <a href="lex_g.htm#glider">glider</a> track
between them. Every 128 generations another glider is <a href="#inject">injected</a>
into the glider track (see <a href="lex_l.htm#lwssgliderbounce">LWSS-glider bounce</a>), joining the gliders
already circulating there. The number of gliders in the track
therefore increases without limit.
<p>The tricky part of this construction is that even though all the
previously injected gliders are repeatedly flying through the
injection point, that point is guaranteed to be empty when it is time
for the next glider to be injected.
<p><a name=infinitegrowth>:</a><b>infinite growth</b> Growth of a finite pattern such that the <a href="lex_p.htm#population">population</a>
tends to infinity, or at least is unbounded. Sometimes the term is
used for growth of something other than population (for example,
length), but here we will only consider infinite population growth.
The first known pattern with infinite growth in this sense was the
<a href="lex_g.htm#gosperglidergun">Gosper glider gun</a>, created in a response to a $50 prize challenge
by John Conway. Martin Gardner's October 1970 article described the
challenge as "Conway conjectures that no pattern can grow without
limit", but Conway later explained that he had always expected that
this would be disproved. The original purpose in investigating CA
rules including B3/S23 was to show that a very simple two-state rule
could support a <a href="lex_u.htm#universalcomputer">universal computer</a> and/or <a href="lex_u.htm#universalconstructor">universal constructor</a>.
If all finite patterns could be proven to be bounded, neither of
these would be possible.
<p>An interesting question is: What is the minimum population of a
pattern that exhibits infinite growth? In 1971 Charles Corderman
found that a <a href="lex_s.htm#switchengine">switch engine</a> could be stabilized by a <a href="lex_p.htm#preblock">pre-block</a> in
a number of different ways, giving 11-cell patterns with infinite
growth. This record stood for more than quarter of a century until
Paul Callahan found, in November 1997, two 10-cell patterns with
infinite growth. The following month he found the one shown below,
which is much neater, being a single <a href="lex_c.htm#cluster">cluster</a>. This produces a
stabilized switch engine of the block-laying type.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
......O.
....O.OO
....O.O.
....O...
..O.....
O.O.....
</a></pre></td></tr></table></center>
Nick Gotts and Paul Callahan showed in October 1997 that there is no
infinite growth pattern with fewer than 10 cells, so that question
has now been answered.
<p>In October 2014, Michael Simkin discovered a three-glider collision
that produces a glider-producing <a href="lex_s.htm#stabilizedswitchengine">stabilized switch engine</a> and thus
produces infinite growth from the smallest possible number of gliders
(since all 71 <a href="lex_1.htm#a-2glidercollision">2-glider collisions</a> have a finite limit population).
<p>Also of interest is the following pattern (again found by
Callahan), which is the only 5x5 pattern with infinite growth. This
too emits a block-laying switch engine.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOO.O
O....
...OO
.OO.O
O.O.O
</a></pre></td></tr></table></center>
<p>Following a conjecture of Nick Gotts, Stephen Silver produced, in
May 1998, a pattern of width 1 which exhibits infinite growth. This
pattern was very large (12470x1 in the first version, reduced to
5447x1 the following day). In October 1998 Paul Callahan did an
exhaustive search, finding the smallest example, the 39x1 pattern
shown below. This produces two block-laying switch engines,
stability being achieved at generation 1483.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOOOOOOO.OOOOO...OOO......OOOOOOO.OOOOO
</a></pre></td></tr></table></center>
Larger patterns have since been constructed that display
<a href="lex_q.htm#quadraticgrowth">quadratic growth</a>.
<p>Although the simplest infinite growth patterns grow at a rate that
is (asymptotically) linear, many other types of growth rate are
possible, <a href="lex_q.htm#quadraticgrowth">quadratic growth</a> (see also <a href="lex_b.htm#breeder">breeder</a>) being the fastest.
Dean Hickerson has found many patterns with unusual growth rates,
such as <a href="lex_s.htm#sawtooth">sawtooths</a> and a <a href="lex_c.htm#cabertosser">caber tosser</a>. Another pattern with
superlinear but non-quadratic growth is <a href="lex_g.htm#gottsdots">Gotts dots</a>.
<p>See also <a href="lex_f.htm#fermatprimecalculator">Fermat prime calculator</a>.
<p><a name=initials>:</a><b>initials</b> = <a href="lex_m.htm#monogram">monogram</a>
<p><a name=inject>:</a><b>inject</b> A reaction in which a hole in a regular spaceship stream is
filled partially or fully by adding a new spaceship of the same type
without affecting the existing spaceships in the stream. Depending
on the period of the stream, different mechanisms can be used. For
adding a spaceship to an existing multi-lane <a href="lex_c.htm#convoy">convoy</a>, see
<a href="#inserter">inserter</a>.
<p>For large period glider streams, simple reactions such as
<a href="lex_l.htm#lwsslwssbounce">LWSS-LWSS bounce</a> and <a href="lex_l.htm#lwssgliderbounce">LWSS-glider bounce</a> suffice. If <a href="lex_h.htm#herschel">Herschel</a>
technology is used, a large number of <a href="lex_e.htm#edgeshooter">edge shooters</a> and
<a href="lex_t.htm#transparent">transparent</a> conduits are known. Simple examples include the <a href="lex_n.htm#nw31">NW31</a>
<a href="lex_h.htm#herscheltoglider">Herschel-to-glider</a> <a href="lex_c.htm#converter">converter</a> and the <a href="lex_f.htm#fx119inserter">Fx119 inserter</a>.
<p>Shown below is an injector found by Dave Buckingham that can fill a
hole in a p15 glider stream:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..O.O..................
...OO..................
...O.................O.
....................O..
....................OOO
.......................
.......................
..........O............
...........OO..........
..........OO...........
.......................
.OO....................
O.O..OO................
..O.OO.................
......O................
.......................
.......................
.......................
.....OO................
......OO...............
.....O.................
</a></pre></td></tr></table></center>
For very low-period glider streams, a <a href="lex_g.htm#gig">GIG</a> is a much more efficient
insertion method, in the sense that fewer <a href="lex_s.htm#synchronized">synchronized</a> <a href="lex_s.htm#signal">signals</a>
are needed. However, it has been shown that colliding gliders can
complete an insertion even into a single-glider gap in a period-14
stream.
<p><a name=inlineinverter>:</a><b>inline inverter</b> The following reaction in which a p30 <a href="lex_g.htm#gun">gun</a> can be
used to invert the presence or absence of gliders in a p30 stream,
with the output glider stream being in the same direction as the
input glider stream.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
................O...................
.................O..................
...............OOO..................
....................................
.......................O.O..........
.....................O...O..........
.............O.......O..............
............OOOO....O....O........OO
...........OO.O.O....O............OO
OO........OOO.O..O...O...O..........
OO.........OO.O.O......O.O..........
............OOOO....................
.............O......................
</a></pre></td></tr></table></center>
<p><a name=inserter>:</a><b>inserter</b> A mechanism that can add another spaceship into a stream or
convoy of other spaceships without affecting the existing spaceships.
For examples see <a href="lex_f.htm#fx119inserter">Fx119 inserter</a>, <a href="lex_t.htm#tee">tee</a>, <a href="lex_g.htm#gig">GIG</a>, <a href="lex_c.htm#clockinsertion">clock insertion</a>
and <a href="#inject">inject</a>.
<p><a name=integral>:</a><b>integral</b> = <a href="#integralsign">integral sign</a>
<p><a name=integralsign>:</a><b>integral sign</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...OO
..O.O
..O..
O.O..
OO...
</a></pre></td></tr></table></center>
<p><a name=intentionless>:</a><b>intentionless</b> = <a href="lex_e.htm#elevener">elevener</a>
<p><a name=interchange>:</a><b>interchange</b> (p2) A common formation of six blinkers.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OOO....OOO..
..............
O............O
O............O
O............O
..............
..OOO....OOO..
</a></pre></td></tr></table></center>
<p><a name=intermediatetarget>:</a><b>intermediate target</b> A temporary product of a partial <a href="lex_s.htm#slowsalvo">slow salvo</a>,
<a href="lex_e.htm#elbowoperation">elbow operation</a>, or <a href="lex_g.htm#glidersynthesis">glider synthesis</a>. An intermediate target is
a useful step toward a desired outcome, but will not appear in the
final construction.
<p><a name=intermittentstream>:</a><b>intermittent stream</b> A <a href="lex_s.htm#stream">stream</a> of spaceships which is based on a
periodic stream, but which can contain holes where some of the
spaceships are not present. There is a base period for the
intermittent stream such that if a spaceship arrives at a specific
location, then it always does so at a generation which is a multiple
of the base period. For example, the output from a period 30 glider
gun where every third glider is deleted is an intermittent stream. A
<a href="lex_p.htm#pseudorandomglidergenerator">pseudo-random glider generator</a> can produce a complicated
intermittent stream with no obvious pattern.
<p>Intermittent streams can be used to transmit <a href="lex_s.htm#signal">signals</a>, where holes
in the stream can also convey information. For example, the stream
can be processed by an <a href="#inverter">inverter</a> having the same period.
<p><a name=intermittingglidergun>:</a><b>intermitting glider gun</b> Despite the name, an intermitting glider gun
(IMG) is more often an <a href="lex_o.htm#oscillator">oscillator</a> than a <a href="lex_g.htm#gun">gun</a>. There are two
basic types. A type 1 IMG consists of two guns firing at one another
in such a way that each gun is temporarily disabled on being hit by a
glider from the other gun. A type 2 IMG consists of a single gun
firing at a 180-degree glider <a href="lex_r.htm#reflector">reflector</a> in such a way that
returning gliders temporarily disable the gun.
<p>Both types of IMG can be used to make glider guns of periods that
are multiples of the base period. This is done by firing another gun
across the two-way <a href="#intermittentstream">intermittent stream</a> of gliders in the IMG in
such a way that gliders only occasionally escape.
<p><a name=inverter>:</a><b>inverter</b> A device which can be used to invert the presence or absence
of spaceships in an <a href="#intermittentstream">intermittent stream</a> of spaceships. The device
must be a gun whose period matches the base period of the stream,
since if there are no input spaceships then the device must produce
spaceships as the result of the inversion. Typically the spaceships
are gliders, and the inverter is made from a glider gun. Inverters
provide a way to produce a NOT logic operation on a stream.
<p>There are several ways to produce an inverter. The simplest method
is to simply hit the output of a gun with the input stream to delete
its spaceships, producing an output stream that is always turned 90
degrees from the input stream. An example is the northernmost p30
gun in the <a href="lex_g.htm#gliderduplicator">glider duplicator</a> example pattern. For one way to
produce an inverted output stream which is not turned, see
<a href="#inlineinverter">inline inverter</a>.
<p><a name=invertingreflector>:</a><b>inverting reflector</b> See <a href="#inverter">inverter</a>.
<p><a name=island>:</a><b>island</b> The individual <a href="lex_p.htm#polyplet">polyplets</a> of which a <a href="lex_s.htm#stable">stable</a> pattern
consists are sometimes called islands. So, for example, a <a href="lex_b.htm#boat">boat</a> has
only one island, while an <a href="lex_a.htm#aircraftcarrier">aircraft carrier</a> has two, a <a href="lex_h.htm#honeyfarm">honey farm</a>
has four and the standard form of the <a href="lex_e.htm#eater3">eater3</a> has five.
<p><a name=iwona>:</a><b>Iwona</b> (stabilizes at time 28786) The following <a href="lex_m.htm#methuselah">methuselah</a> found by
Andrzej Okrasinski in August 2004.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..............OOO...
....................
....................
....................
....................
....................
..O.................
...OO...............
...O..............O.
..................O.
..................O.
...................O
..................OO
.......OO...........
........O...........
....................
....................
....................
....................
OO..................
.O..................
</a></pre></td></tr></table></center>
It has a final population of 3091 and covers an area of 413 by 364
cells, not counting the 47 gliders it produces. Its <a href="lex_a.htm#ash">ash</a> consists
of typical stable objects and blinkers, along with the relatively
rare <a href="lex_p.htm#paperclip">paperclip</a>.
<hr>
<center>
<font size=-1><b>
<a href="lex_1.htm">1-9</a> |
<a href="lex_a.htm">A</a> |
<a href="lex_b.htm">B</a> |
<a href="lex_c.htm">C</a> |
<a href="lex_d.htm">D</a> |
<a href="lex_e.htm">E</a> |
<a href="lex_f.htm">F</a> |
<a href="lex_g.htm">G</a> |
<a href="lex_h.htm">H</a> |
<a href="lex_i.htm">I</a> |
<a href="lex_j.htm">J</a> |
<a href="lex_k.htm">K</a> |
<a href="lex_l.htm">L</a> |
<a href="lex_m.htm">M</a> |
<a href="lex_n.htm">N</a> |
<a href="lex_o.htm">O</a> |
<a href="lex_p.htm">P</a> |
<a href="lex_q.htm">Q</a> |
<a href="lex_r.htm">R</a> |
<a href="lex_s.htm">S</a> |
<a href="lex_t.htm">T</a> |
<a href="lex_u.htm">U</a> |
<a href="lex_v.htm">V</a> |
<a href="lex_w.htm">W</a> |
<a href="lex_x.htm">X</a> |
<a href="lex_y.htm">Y</a> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
</body>

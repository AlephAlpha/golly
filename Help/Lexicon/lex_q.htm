<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<title>Life Lexicon (Q)</title>
<meta name="author" content="Stephen A. Silver">
<meta name="description" content="Part of Stephen Silver's Life Lexicon.">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<link href="lifelex.css" rel="stylesheet" type="text/css">
<link rel="begin" type="text/html" href="lex.htm" title="Life Lexicon">
<base target="_top">
</head>
<body bgcolor="#FFFFCE">

<center><A HREF="lex.htm">Introduction</A> | <A HREF="lex_bib.htm">Bibliography</A></center></center>
<hr>
<center>
<font size=-1><b>
<A HREF="lex_1.htm">1-9</A> |
<A HREF="lex_a.htm">A</A> |
<A HREF="lex_b.htm">B</A> |
<A HREF="lex_c.htm">C</A> |
<A HREF="lex_d.htm">D</A> |
<A HREF="lex_e.htm">E</A> |
<A HREF="lex_f.htm">F</A> |
<A HREF="lex_g.htm">G</A> |
<A HREF="lex_h.htm">H</A> |
<A HREF="lex_i.htm">I</A> |
<A HREF="lex_j.htm">J</A> |
<A HREF="lex_k.htm">K</A> |
<A HREF="lex_l.htm">L</A> |
<A HREF="lex_m.htm">M</A> |
<A HREF="lex_n.htm">N</A> |
<A HREF="lex_o.htm">O</A> |
<A HREF="lex_p.htm">P</A> |
<A HREF="lex_q.htm">Q</A> |
<A HREF="lex_r.htm">R</A> |
<A HREF="lex_s.htm">S</A> |
<A HREF="lex_t.htm">T</A> |
<A HREF="lex_u.htm">U</A> |
<A HREF="lex_v.htm">V</A> |
<A HREF="lex_w.htm">W</A> |
<A HREF="lex_x.htm">X</A> |
<A HREF="lex_y.htm">Y</A> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
<p><a name=q>:</a><b>Q</b> = <a href="#quetzal">Quetzal</a>
<p><a name=qd>:</a><b>qd</b> Abbreviation for <a href="#quarterdiagonal">quarter diagonal</a>.
<p><a name=qpentomino>:</a><b>Q-pentomino</b> Conway's name for the following <a href="lex_p.htm#pentomino">pentomino</a>, a
<a href="lex_t.htm#trafficlight">traffic light</a> <a href="lex_p.htm#predecessor">predecessor</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOOO
...O
</a></pre></td></tr></table></center>
<p><a name=quad>:</a><b>quad</b> (p2) Found by Robert Kraus, April 1971. Of all <a href="lex_o.htm#oscillator">oscillators</a>
that fit in a 6x6 box this is the only <a href="lex_f.htm#flipper">flipper</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO..OO
O..O.O
.O....
....O.
O.O..O
OO..OO
</a></pre></td></tr></table></center>
<p><a name=quadlife>:</a><b>QuadLife</b> A form of <a href="lex_c.htm#colourisedlife">colourised Life</a> in which there are four types of
ON cell. A newly-born cell takes the type of the majority of its
three <a href="lex_p.htm#parentcells">parent cells</a>, or the remaining type if its parent cells are
all of different types. In areas where there are only two types of
ON cell QuadLife reduces to <a href="lex_i.htm#immigration">Immigration</a>.
<p><a name=quadpole>:</a><b>quadpole</b> (p2) The <a href="lex_b.htm#barberpole">barberpole</a> of length 4.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO.....
O.O....
.......
..O.O..
.......
....O.O
.....OO
</a></pre></td></tr></table></center>
<p><a name=quadpseudo>:</a><b>quad pseudo</b> A <a href="lex_s.htm#stilllife">still life</a> that can be broken down into four <a href="lex_s.htm#stable">stable</a>
pieces but not into two or three. This term may refer to the
following 34-bit pattern, found by Gabriel Nivasch in July 2001, or
any similar pattern with the same property.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
........OO.
...OO.O..O.
...O.OO.O..
........OO.
...O.OO...O
.OOO.OO.OO.
O.......O..
.OOO.OO.O..
...O.O.O...
</a></pre></td></tr></table></center>
<p>As a consequence of the Four-Colour Theorem, there can be no
analogous objects requiring decomposition into five or more pieces.
By convention, patterns like this and the <a href="lex_t.htm#triplepseudo">triple pseudo</a> are
considered to be <a href="lex_p.htm#pseudostilllife">pseudo still lifes</a>, not <a href="lex_s.htm#strictstilllife">strict still lifes</a>. As
of June 2018, it has been shown that no quad pseudo patterns exist
with 32 or fewer bits, but a 33-bit pattern with this property may
theoretically still be found.
<p><a name=quadraticfilter>:</a><b>quadratic filter</b> A <a href="lex_t.htm#toolkit">toolkit</a> developed by Dean Hickerson and Gabriel
Nivasch in 2006, enabling the construction of patterns with
asymptotic population growth matching an infinite number of different
sublinear functions - namely, O(<i>t</i><sup><i>(</i></sup>1/2<sup><i>n</i></sup>)) for any chosen <i>n</i>. See
also <a href="lex_e.htm#exponentialfilter">exponential filter</a>, <a href="lex_r.htm#recursivefilter">recursive filter</a>.
<p><a name=quadraticgrowth>:</a><b>quadratic growth</b> The fastest possible asymptotic rate of population
growth for any Life pattern - O(<i>t</i><sup>2</sup>) in big-O notation, where <i>t</i> is
the number of ticks. The first quadratic-growth pattern found was
Bill Gosper's 1971 <a href="lex_b.htm#breeder">breeder</a>. Many other types of breeders and
<a href="lex_s.htm#spacefiller">spacefillers</a> have been constructed since.
<p>In April 2011, Stephen Silver gave an example of a one-cell-thick
pattern over a million cells long that exhibited quadratic growth.
In October 2015, Chris Cain constructed a one-cell-thick pattern with
a reduced bounding box of 2596x1, improving on a series of previous
longer results. The smallest known quadratic growth pattern by
initial population is the 23-cell <a href="lex_s.htm#switchenginepingpong">switch-engine ping-pong</a> by
Michael Simkin.
<p>There are an infinite number of possible growth rates between
linear and quadratic growth. See <a href="lex_s.htm#superlineargrowth">superlinear growth</a>.
<p><a name=quadraticreplicator>:</a><b>quadratic replicator</b> A pattern that fills all or part of the Life
plane by making copies of itself in a nonlinear way. Small quadratic
replicators are known in other Life-like rules, but as of July 2018
no example has been found or constructed in Conway's Life.
<p><a name=quadraticsawtooth>:</a><b>quadratic sawtooth</b> Any <a href="lex_s.htm#sawtooth">sawtooth</a> pattern with a quadratic envelope,
or specifically a pattern assembled by Martin Grant in May 2015,
consisting of two <a href="lex_c.htm#cabertosser">caber tossers</a> with period multipliers for timing
which activate and deactivate two toggleable rake guns (see
<a href="lex_t.htm#toggleablegun">toggleable gun</a>). The gliders emitted by those rakes annihilate on
the diagonal while the rakes are eaten by 2<i>c</i>/5 ships. All the rakes
and gliders are destroyed before the next cycle. See also
<a href="lex_o.htm#osqrtlogt">Osqrtlogt</a>.
<p><a name=quadrisnark>:</a><b>quadri-Snark</b> A period-multiplying <a href="lex_c.htm#colourpreserving">colour-preserving</a> <a href="lex_s.htm#signal">signal</a>
<a href="lex_c.htm#conduit">conduit</a> found by Tanner Jacobi in October 2017, producing one
output <a href="lex_g.htm#glider">glider</a> for every four input gliders. It is made by
replacing one of the eaters in a <a href="lex_t.htm#tremisnark">tremi-Snark</a> with a <a href="lex_c.htm#catalyst">catalyst</a>
found using <a href="lex_b.htm#bellman">Bellman</a>. The catalyst causes the formation of a <a href="lex_t.htm#tub">tub</a>
which then requires an additional glider to delete. However, this
adds 5 ticks to the repeat time, so that it becomes 48. If period
quadrupling is needed with a <a href="lex_c.htm#colourchanging">colour-changing</a> reaction, a
<a href="lex_c.htm#cpsemisnark">CP semi-Snark</a> and a <a href="lex_c.htm#ccsemisnark">CC semi-Snark</a> can be used in series, or a
period-multiplying <a href="lex_h.htm#herschelconduit">Herschel conduit</a> can be connected to a <a href="lex_s.htm#syringe">syringe</a>
and an appropriately chosen Herschel-to-glider <a href="lex_c.htm#converter">converter</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O.......................................................
..O......................................................
OOO......................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.............O...........................................
..............O..........................................
............OOO..........................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................................................
.........................O...............................
..........................O..............................
........................OOO..............OO..............
..........................................O..............
........................................O.....OO.........
........................................OO.....O.........
...............................................O.OO......
........................................OO..OO.O..O......
........................................OO...O.OO........
.............................................O...........
............................................OO...........
...................................................OO....
.....................................O.............O.O...
......................................O..............O...
....................................OOO..............O.OO
...........................................OO.....OO.O.O.
...........................................OO.....OO.O.O.
.....................................................O.OO
..................................OO..............OOOO..O
.................................O.O..............O...OO.
.................................O..................OO...
................................OO...................O...
...................................................O.....
...................................................OO....
</a></pre></td></tr></table></center>
<p><a name=quapole>:</a><b>quapole</b> = <a href="#quadpole">quadpole</a>
<p><a name=quarter>:</a><b>quarter</b> (<i>c</i>/4 diagonally, p4) The following <a href="lex_s.htm#spaceship">spaceship</a>, found by
Jason Summers in September 2000. The name is due to the 25-cell
minimum population. This is the smallest known <a href="lex_c.htm#c4spaceship">c/4 spaceship</a> other
than the <a href="lex_g.htm#glider">glider</a>. This spaceship can also be used to make the
smallest known <a href="lex_t.htm#tubstretcher">tubstretcher</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
........OO...
.......OO....
.........O...
...........OO
..........O..
.............
.........O..O
.OO.....OO...
OO.....O.....
..O....O.O...
....OO..O....
....OO.......
</a></pre></td></tr></table></center>
<p><a name=quarterdiagonal>:</a><b>quarter diagonal</b> A unit of measurement sometimes used for diagonal
distances, especially for <a href="lex_s.htm#slowsalvo">slow salvo</a> glider <a href="lex_l.htm#lane">lanes</a>. One advantage
of measurement in quarter diagonals is that gliders travel diagonally
at 1qd/tick, so that the same integer value can serve as either a
time or a diagonal distance measurement.
<p><a name=quasar>:</a><b>quasar</b> (p3) Found by Robert Wainwright, August 1971. This is related
to the <a href="lex_p.htm#pulsar">pulsar</a>, and is just the smallest of an extensible series of
p3 oscillators built using pulsar quadrants which are shifted with
respect to each other.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..........OOO...OOO..........
.............................
........O....O.O....O........
........O....O.O....O........
........O....O.O....O........
..........OOO...OOO..........
.............................
........OOO.......OOO........
..OOO..O....O...O....O..OOO..
.......O....O...O....O.......
O....O.O....O...O....O.O....O
O....O.................O....O
O....O..OOO.......OOO..O....O
..OOO...................OOO..
.............................
..OOO...................OOO..
O....O..OOO.......OOO..O....O
O....O.................O....O
O....O.O....O...O....O.O....O
.......O....O...O....O.......
..OOO..O....O...O....O..OOO..
........OOO.......OOO........
.............................
..........OOO...OOO..........
........O....O.O....O........
........O....O.O....O........
........O....O.O....O........
.............................
..........OOO...OOO..........
</a></pre></td></tr></table></center>
Here is the next oscillator in the series.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..................OOO...OOO..................
.............................................
................O....O.O....O................
................O....O.O....O................
................O....O.O....O................
..................OOO...OOO..................
.............................................
................OOO.......OOO................
..........OOO..O....O...O....O..OOO..........
...............O....O...O....O...............
........O....O.O....O...O....O.O....O........
........O....O.................O....O........
........O....O..OOO.......OOO..O....O........
..........OOO...................OOO..........
.............................................
........OOO.......................OOO........
..OOO..O....O...................O....O..OOO..
.......O....O...................O....O.......
O....O.O....O...................O....O.O....O
O....O.................................O....O
O....O..OOO.......................OOO..O....O
..OOO...................................OOO..
.............................................
..OOO...................................OOO..
O....O..OOO.......................OOO..O....O
O....O.................................O....O
O....O.O....O...................O....O.O....O
.......O....O...................O....O.......
..OOO..O....O...................O....O..OOO..
........OOO.......................OOO........
.............................................
..........OOO...................OOO..........
........O....O..OOO.......OOO..O....O........
........O....O.................O....O........
........O....O.O....O...O....O.O....O........
...............O....O...O....O...............
..........OOO..O....O...O....O..OOO..........
................OOO.......OOO................
.............................................
..................OOO...OOO..................
................O....O.O....O................
................O....O.O....O................
................O....O.O....O................
.............................................
..................OOO...OOO..................
</a></pre></td></tr></table></center>
<p><a name=quasistilllife>:</a><b>quasi still life</b> A <a href="lex_s.htm#stable">stable</a> <a href="lex_c.htm#constellation">constellation</a> where the individual
<a href="lex_s.htm#stilllife">still lifes</a> share dead cells, so the neighborhoods of those dead
cells are changed, but all cells that used to remain dead from
under-population still do so. Under Life rules, this occurs when
objects are diagonally adjacent (e.g., two <a href="lex_b.htm#block">blocks</a> sharing a single
diagonal neighbor) or when single protruding cells in two objects
such as <a href="lex_t.htm#tub">tubs</a> share multiple neighbors. The term is due to Mark
Niemiec.
<pre>
  ----------------
  Bits       Count
  ----------------
   8             6
   9            13
  10            57
  11           141
  12           465
  13          1224
  14          3956
  15         11599
  16         36538
  17        107415
  18        327250
  19        972040
  20       2957488
  21       8879327
  22      26943317
  ----------------
</pre>
<p>As the number of bits increases, the quasi still life count goes up
exponentially by approximately O(3.04<sup><i>n</i></sup>), slightly more than a factor
of three. By comparison, the rate for <a href="lex_s.htm#strictstilllife">strict still lifes</a> is about
O(2.46<sup><i>n</i></sup>) while for <a href="lex_p.htm#pseudostilllife">pseudo still lifes</a> it's around O(2.56<sup><i>n</i></sup>).
<p><a name=queenbee>:</a><b>queen bee</b> See <a href="#queenbeeshuttle">queen bee shuttle</a>.
<p><a name=queenbeeshuttle>:</a><b>queen bee shuttle</b> (p30) Found by Bill Gosper in 1970. There are a
number of ways to stabilize the ends. Gosper originally stabilized
shuttles against one another in a square of eight shuttles. Two
simpler methods are shown here; for a third see <a href="lex_b.htm#buckaroo">buckaroo</a>. The queen
bee shuttle is the basis of all known <a href="lex_t.htm#true">true</a> p30 <a href="lex_g.htm#gun">guns</a> (see
<a href="lex_g.htm#gosperglidergun">Gosper glider gun</a>).
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.........O............
.......O.O............
......O.O.............
OO...O..O.............
OO....O.O.............
.......O.O........OO..
.........O........O.O.
....................O.
....................OO
</a></pre></td></tr></table></center>
<p><a name=queenbeeshuttlepair>:</a><b>queen bee shuttle pair</b> Any arrangement of two <a href="#queenbeeshuttle">queen bee shuttles</a>
such that the two <a href="lex_b.htm#beehive">beehives</a> created between them are consumed in
some way. There are many ways that the two shuttles can be placed,
either head-to-head, or else at right angles. The most well-known
and useful arrangement results in the <a href="lex_g.htm#gosperglidergun">Gosper glider gun</a>.
<p>Other arrangements don't create any lasting output, but create
large <a href="lex_s.htm#spark">sparks</a> which can perturb objects (especially gliders) in
various ways. For example, one arrangement of a queen bee shuttle
pair was used in the original <a href="lex_u.htm#unitlifecell">unit Life cell</a> as a <a href="lex_m.htm#memorycell">memory cell</a>.
Here an input glider is converted into a block, which remains until
it is deleted by a glider on a right-angled path.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.......................O.
......................O..
......................OOO
.........................
.............O...........
............O.O..........
............OO.O.........
............OO.OO........
............OO.O.........
..OO........O.O..........
.O.O.........O....OOO....
.O................OOO....
OO...............O...O...
................O.....O..
.................O...O...
..................OOO....
.........................
.........................
.........................
.........................
.........................
.........................
.........................
................OO.......
.................O.......
..............OOO........
..............O..........
</a></pre></td></tr></table></center>
See <a href="lex_p.htm#p690gun">p690 gun</a> and <a href="lex_m.htm#metamorphosisii">metamorphosis II</a> for two more examples.
<p><a name=quetzal>:</a><b>Quetzal</b> Any Herschel track-based gun with a period below 62, which is
the lowest period with a stable glider-emitting conduit. This was
Dieter Leithner's name for the <a href="lex_t.htm#true">true</a> p54 glider gun he built in
January 1998 - a short form of <a href="#quetzalcoatlus">Quetzalcoatlus</a>, which expresses the
fact that the gun was a very large <a href="lex_h.htm#herschelloop">Herschel loop</a> that was not an
<a href="lex_e.htm#emu">emu</a>. Shortly afterwards Leithner also built a p56 Quetzal using a
mechanism found by Noam Elkies for this purpose. In October 1998
Stephen Silver constructed a p55 Quetzal using Elkies' p5 <a href="lex_r.htm#reflector">reflector</a>
of the previous month. Quetzals of periods 57-61 have since been
constructed.
<p>Some of the more recent Quetzals are not Herschel loops, but are
instead short Herschel tracks firing several glider streams all but
one of which is reflected back to the beginning of the track to
create a new Herschel. Noam Elkies first had the idea of doing this
for the p55 case, and Stephen Silver constructed the resulting gun
shortly after building the original (much larger) p55 Quetzal. Jason
Summers later built a p54 version, which is more complicated because
the evenness of the period makes the timing problems considerably
more difficult.
<p><a name=quetzalcoatlus>:</a><b>Quetzalcoatlus</b> A giant flying dinosaur after which Dieter Leithner
named his p54 gun. Usually abbreviated to <a href="#quetzal">Quetzal</a>, or simply Q (as
in Q54, Q55, Q56, Q-gun, etc.).
<p><a name=quilt>:</a><b>quilt</b> = <a href="lex_s.htm#squaredance">squaredance</a>
<hr>
<center>
<font size=-1><b>
<a href="lex_1.htm">1-9</a> |
<a href="lex_a.htm">A</a> |
<a href="lex_b.htm">B</a> |
<a href="lex_c.htm">C</a> |
<a href="lex_d.htm">D</a> |
<a href="lex_e.htm">E</a> |
<a href="lex_f.htm">F</a> |
<a href="lex_g.htm">G</a> |
<a href="lex_h.htm">H</a> |
<a href="lex_i.htm">I</a> |
<a href="lex_j.htm">J</a> |
<a href="lex_k.htm">K</a> |
<a href="lex_l.htm">L</a> |
<a href="lex_m.htm">M</a> |
<a href="lex_n.htm">N</a> |
<a href="lex_o.htm">O</a> |
<a href="lex_p.htm">P</a> |
<a href="lex_q.htm">Q</a> |
<a href="lex_r.htm">R</a> |
<a href="lex_s.htm">S</a> |
<a href="lex_t.htm">T</a> |
<a href="lex_u.htm">U</a> |
<a href="lex_v.htm">V</a> |
<a href="lex_w.htm">W</a> |
<a href="lex_x.htm">X</a> |
<a href="lex_y.htm">Y</a> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
</body>

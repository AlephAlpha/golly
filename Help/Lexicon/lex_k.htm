<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<title>Life Lexicon (K)</title>
<meta name="author" content="Stephen A. Silver">
<meta name="description" content="Part of Stephen Silver's Life Lexicon.">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<link href="lifelex.css" rel="stylesheet" type="text/css">
<link rel="begin" type="text/html" href="lex.htm" title="Life Lexicon">
<base target="_top">
</head>
<body bgcolor="#FFFFCE">

<center><A HREF="lex.htm">Introduction</A> | <A HREF="lex_bib.htm">Bibliography</A></center></center>
<hr>
<center>
<font size=-1><b>
<A HREF="lex_1.htm">1-9</A> |
<A HREF="lex_a.htm">A</A> |
<A HREF="lex_b.htm">B</A> |
<A HREF="lex_c.htm">C</A> |
<A HREF="lex_d.htm">D</A> |
<A HREF="lex_e.htm">E</A> |
<A HREF="lex_f.htm">F</A> |
<A HREF="lex_g.htm">G</A> |
<A HREF="lex_h.htm">H</A> |
<A HREF="lex_i.htm">I</A> |
<A HREF="lex_j.htm">J</A> |
<A HREF="lex_k.htm">K</A> |
<A HREF="lex_l.htm">L</A> |
<A HREF="lex_m.htm">M</A> |
<A HREF="lex_n.htm">N</A> |
<A HREF="lex_o.htm">O</A> |
<A HREF="lex_p.htm">P</A> |
<A HREF="lex_q.htm">Q</A> |
<A HREF="lex_r.htm">R</A> |
<A HREF="lex_s.htm">S</A> |
<A HREF="lex_t.htm">T</A> |
<A HREF="lex_u.htm">U</A> |
<A HREF="lex_v.htm">V</A> |
<A HREF="lex_w.htm">W</A> |
<A HREF="lex_x.htm">X</A> |
<A HREF="lex_y.htm">Y</A> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
<p><a name=karelsp15>:</a><b>Karel's p15</b> (p15) An <a href="lex_o.htm#oscillator">oscillator</a> discovered by Karel Suhajda on
December 11, 2002. It consists of a period 15 rotor supported by the
domino spark of a pentadecathlon. It provides accessible sparks that
can be used to perturb reactions or thin signal <a href="lex_s.htm#stream">streams</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..O....O..
..OOOOOO..
..O....O..
..........
..........
..........
..OOOOOO..
.O......O.
O........O
.O......O.
..OOOOOO..
</a></pre></td></tr></table></center>
<p><a name=keeper>:</a><b>keeper</b> A type of <a href="lex_f.htm#factory">factory</a> <a href="lex_c.htm#circuit">circuit</a> that always results in the
presence of an object in the output location, whether or not the
object was previously present. In many cases it is easy to construct
examples by connecting multiple circuits to shoot down an object with
a <a href="lex_g.htm#glider">glider</a>, then rebuild the object again later. The smallest keeper
circuits accomplish the same thing more directly with a lucky
preliminary <a href="lex_s.htm#spark">spark</a> from the active reaction, which removes the
existing object (if any) just before the construction occurs. Below
is a useful block keeper with a <a href="lex_h.htm#herschel">Herschel</a> input.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
................O..............................
................OOO.....OO.....................
...................O....OO.....................
..................OO...........................
...............................................
...............................................
...............................................
...............................................
...............................................
................................OO.............
...............................O.O.............
................................O..............
...............................................
...............................................
.......OO......................................
........O......................................
........O.O....................................
.........OO....................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
.........O...................................OO
.........O.O.................................OO
.........OOO...................................
...........O...................................
...............................................
...............................................
..........................OO...................
..........................OO...................
..OO...........................................
...O...........................................
OOO.........OO.................................
O...........OO.................................
</a></pre></td></tr></table></center>
<p><a name=keys>:</a><b>keys</b> See <a href="lex_s.htm#shortkeys">short keys</a>, <a href="lex_b.htm#bentkeys">bent keys</a> and <a href="lex_o.htm#oddkeys">odd keys</a>.
<p><a name=kickback>:</a><b>kickback</b> = <a href="#kickbackreaction">kickback reaction</a> or <a href="lex_1.htm#a-180degreekickback">180-degree kickback</a>.
<p><a name=kickbackreaction>:</a><b>kickback reaction</b> The following collision of two <a href="lex_g.htm#glider">gliders</a> whose
product is a single glider travelling in the opposite direction to
one of the original gliders. This is important in the proof of the
existence of a <a href="lex_u.htm#universalconstructor">universal constructor</a>, and in Bill Gosper's
<a href="lex_t.htm#totalaperiodic">total aperiodic</a>, as well as a number of other constructions.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....O..
......OO
.OO..OO.
O.O.....
..O.....
</a></pre></td></tr></table></center>
See also <a href="lex_1.htm#a-180degreekickback">180-degree kickback</a>.
<p><a name=kidney>:</a><b>kidney</b> A Gosperism for <a href="lex_c.htm#century">century</a>. See also <a href="lex_d.htm#diuresis">diuresis</a>.
<p><a name=killertoads>:</a><b>killer toads</b> A pair of <a href="lex_t.htm#toad">toads</a> acting together so that they can eat
things. Here, for example, are some killer toads eating an <a href="lex_h.htm#hwss">HWSS</a>.
Similarly they can eat a <a href="lex_m.htm#mwss">MWSS</a> (but not a <a href="lex_l.htm#lwss">LWSS</a>). For another
example see <a href="lex_t.htm#twirlingttetsonsii">twirling T-tetsons II</a>. See also <a href="lex_c.htm#candlefrobra">candlefrobra</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO.......OOO
O....O....OOO.
......O.......
O.....O.......
.OOOOOO.......
..........OOO.
...........OOO
</a></pre></td></tr></table></center>
<p><a name=kleinbottle>:</a><b>Klein bottle</b> As an alternative to a <a href="lex_t.htm#torus">torus</a>, it's possible to make a
finite Life universe in the form of a Klein bottle. The simplest way
to do this is to use an <i>m</i> x <i>n</i> rectangle with the top edge joined to
the bottom edge (as for a torus) and the left edge twisted and joined
to the right.
<p><a name=knightship>:</a><b>knightship</b> Any <a href="lex_s.htm#spaceship">spaceship</a> of type (2<i>m</i>,<i>m</i>)/<i>n</i> - that is, a spaceship of
any speed that moves obliquely in a (2,1) direction. The first
Conway's Life knightship was a variant of Andrew Wade's <a href="lex_g.htm#gemini">Gemini</a>
spaceship, constructed in May 2010. The next was an even slower
knightship based on the <a href="lex_h.htm#halfbakeryreaction">half-bakery reaction</a>.
<p>A knightship must be asymmetric and its period must be at least 6.
This is barely within the range of current <a href="lex_s.htm#searchprogram">search programs</a>, as
proven by the discovery on March 6, 2018 of an <a href="lex_e.htm#elementary">elementary</a>
knightship, <a href="lex_s.htm#sirrobin">Sir Robin</a>, by Adam P. Goucher and Tomas Rokicki.
<p>By analogy with the corresponding fairy chess pieces, spaceships of
types (3<i>m</i>,<i>m</i>)/<i>n</i>, (3<i>m</i>,2<i>m</i>)/<i>n</i> and (4<i>m</i>,<i>m</i>)/<i>n</i> would presumably be called
camelships, zebraships and giraffeships, respectively. Such
spaceships do exist (see <a href="lex_u.htm#universalconstructor">universal constructor</a>) but small
elementary versions are even more difficult to search for. Any of
these ship types could be constructed by trivially modifying a Gemini
spaceship, or less trivially by reprogramming one of the more recent
small <a href="lex_g.htm#geminoid">Geminoid</a> <a href="lex_c.htm#constructionarm">construction arms</a>, but as of July 2018 a camelship
Gemini is the only example that has been explicitly built.
<p>Alternatively, the term "knightship" is regularly used to refer to
any <a href="lex_o.htm#oblique">oblique</a> spaceship, such as the original <a href="lex_g.htm#gemini">Gemini</a> or the
<a href="lex_w.htm#waterbear">waterbear</a>.
<p><a name=koksgalaxy>:</a><b>Kok's galaxy</b> (p8) An <a href="lex_o.htm#oscillator">oscillator</a> found by Jan Kok in 1971, currently
serving as the icon for <a href="lex_g.htm#golly">Golly</a>. See <a href="lex_c.htm#converter">converter</a> for a use of this
<a href="lex_s.htm#sparker">sparker</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOOOOO.OO
OOOOOO.OO
.......OO
OO.....OO
OO.....OO
OO.....OO
OO.......
OO.OOOOOO
OO.OOOOOO
</a></pre></td></tr></table></center>
<hr>
<center>
<font size=-1><b>
<a href="lex_1.htm">1-9</a> |
<a href="lex_a.htm">A</a> |
<a href="lex_b.htm">B</a> |
<a href="lex_c.htm">C</a> |
<a href="lex_d.htm">D</a> |
<a href="lex_e.htm">E</a> |
<a href="lex_f.htm">F</a> |
<a href="lex_g.htm">G</a> |
<a href="lex_h.htm">H</a> |
<a href="lex_i.htm">I</a> |
<a href="lex_j.htm">J</a> |
<a href="lex_k.htm">K</a> |
<a href="lex_l.htm">L</a> |
<a href="lex_m.htm">M</a> |
<a href="lex_n.htm">N</a> |
<a href="lex_o.htm">O</a> |
<a href="lex_p.htm">P</a> |
<a href="lex_q.htm">Q</a> |
<a href="lex_r.htm">R</a> |
<a href="lex_s.htm">S</a> |
<a href="lex_t.htm">T</a> |
<a href="lex_u.htm">U</a> |
<a href="lex_v.htm">V</a> |
<a href="lex_w.htm">W</a> |
<a href="lex_x.htm">X</a> |
<a href="lex_y.htm">Y</a> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
</body>

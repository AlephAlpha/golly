<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<title>Life Lexicon (S)</title>
<meta name="author" content="Stephen A. Silver">
<meta name="description" content="Part of Stephen Silver's Life Lexicon.">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<link href="lifelex.css" rel="stylesheet" type="text/css">
<link rel="begin" type="text/html" href="lex.htm" title="Life Lexicon">
<base target="_top">
</head>
<body bgcolor="#FFFFCE">

<center><A HREF="lex.htm">Introduction</A> | <A HREF="lex_bib.htm">Bibliography</A></center></center>
<hr>
<center>
<font size=-1><b>
<A HREF="lex_1.htm">1-9</A> |
<A HREF="lex_a.htm">A</A> |
<A HREF="lex_b.htm">B</A> |
<A HREF="lex_c.htm">C</A> |
<A HREF="lex_d.htm">D</A> |
<A HREF="lex_e.htm">E</A> |
<A HREF="lex_f.htm">F</A> |
<A HREF="lex_g.htm">G</A> |
<A HREF="lex_h.htm">H</A> |
<A HREF="lex_i.htm">I</A> |
<A HREF="lex_j.htm">J</A> |
<A HREF="lex_k.htm">K</A> |
<A HREF="lex_l.htm">L</A> |
<A HREF="lex_m.htm">M</A> |
<A HREF="lex_n.htm">N</A> |
<A HREF="lex_o.htm">O</A> |
<A HREF="lex_p.htm">P</A> |
<A HREF="lex_q.htm">Q</A> |
<A HREF="lex_r.htm">R</A> |
<A HREF="lex_s.htm">S</A> |
<A HREF="lex_t.htm">T</A> |
<A HREF="lex_u.htm">U</A> |
<A HREF="lex_v.htm">V</A> |
<A HREF="lex_w.htm">W</A> |
<A HREF="lex_x.htm">X</A> |
<A HREF="lex_y.htm">Y</A> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
<p><a name=s>:</a><b>S</b> Usually means <a href="lex_b.htm#bigs">big S</a>, but may sometimes mean <a href="lex_p.htm#paperclip">paperclip</a>.
<p><a name=sailboat>:</a><b>sailboat</b> (p16) A <a href="lex_b.htm#boat">boat</a> <a href="lex_h.htm#hassle">hassled</a> by a <a href="lex_k.htm#koksgalaxy">Kok's galaxy</a>, a <a href="lex_f.htm#figure8">figure-8</a>
and two <a href="lex_e.htm#eater3">eater3s</a>. Found by Robert Wainwright in June 1984.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
........O...........O........
.......O.O.........O.O.......
........O...........O........
.............................
......OOOOO.......OOOOO......
.....O....O.......O....O.....
....O..O.............O..O....
.O..O.OO.............OO.O..O.
O.O.O.....O.......O.....O.O.O
.O..O....O.O.....O.O....O..O.
....OO..O..O.....O..O..OO....
.........OO.......OO.........
.............OO..............
.............O.O.............
........O..O..O..............
.......O.....................
.....OO..........OOO.........
..O......OO.O....OOO.........
.....O...O..O....OOO.........
.....OOO.O...O......OOO......
..O...........O.....OOO......
...O...O.OOO........OOO......
....O..O...O.................
....O.OO......O..............
..........OO.................
.........O...................
.....O..O....................
</a></pre></td></tr></table></center>
<p><a name=salvo>:</a><b>salvo</b> A collection of spaceships, usually gliders, all traveling in
the same direction. Any valid glider construction <a href="lex_r.htm#recipe">recipe</a> can be
partitioned into no more than four salvos. Compare <a href="lex_f.htm#flotilla">flotilla</a>.
<p><a name=sawtooth>:</a><b>sawtooth</b> Any finite pattern whose <a href="lex_p.htm#population">population</a> grows without bound
but does not tend to infinity. (In other words, the population
reaches new heights infinitely often, but also infinitely often
returns to some fixed value.) Conway's preferred plural is
"sawteeth".
<p>The first sawtooth was constructed by Dean Hickerson in April 1991.
The current smallest known sawtooth was found by a conwaylife.com
forum user with the online handle 'thunk'. It has a bounding box of
74x60, and is the smallest known sawtooth in terms of its minimum
repeating population of 177 cells. The following variant has a higher
repeating population of 195 and an optimized bounding box of 62x56:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....................................................OO.O.....
.....................................................O.OO.....
..............................................................
...........OO.................................................
...........OO.................................................
..............................................................
..............................................................
..............OO............................OO.......OO.....OO
....OO........OO.....................................OO.....OO
.....O.....................................O.O................
....O......OO............................O..............OO....
....OO.....OO........................OO.O.OO............OO....
......................................O.OO....................
.......................................O......................
..............................................................
.................................OO...........................
........OO.......................OO...........................
........O.O...................................................
........O....................OO.....OO........................
.............................OO.....OO........................
..............................................................
..............................................................
..............................................................
.....................OOO......................................
.....................O..O.....................................
.....................O.OO.....................................
..............................................................
..............................................................
..............................................................
....................OO............O.........O.................
....................O..O..........O.O.....OOO.................
..OOOO...............OOO..........OO.....O....................
OO....OO.................................OO...................
OO.....O......................................................
..OO.O.O..............OO......................................
.......O..............OO......................................
...O...O..........................O....O......................
...O....O.......................OO.....O......................
.....OOO...O.....................OO...O.O.....................
.....OO....O.........................OO.OO....................
...........OO.......................O.....O...................
.............O.........................O......................
.............OOO....................OO...OO...................
..............................................................
..............................................................
................O.....................O.......................
...............O.OOOOO................O.......................
..............OO.....O...............O........................
..............OO...O..O.......................................
......................O.......................................
................OO.O..O................OO.....................
...................O..O................OO.....................
....................OO........................................
....................OO.....O....O.............................
.........................OO.OOOO.OO...........................
...........................O....O.............................
</a></pre></td></tr></table></center>
Moving sawtooth patterns combining a fast <a href="lex_p.htm#puffer">puffer</a> with a slower
<a href="#spaceship">spaceship</a> have also been constructed. See also <a href="lex_t.htm#tractorbeam">tractor beam</a>.
<p><a name=sbm>:</a><b>SBM</b> = <a href="#slidingblockmemory">sliding block memory</a>
<p><a name=schickengine>:</a><b>Schick engine</b> (<i>c</i>/2 orthogonally, p12) This <a href="#spaceship">spaceship</a>, found by Paul
Schick in 1972, produces a large <a href="#spark">spark</a> (the 15 live cells at the
rear in the <a href="lex_p.htm#phase">phase</a> shown below) which can be <a href="lex_p.htm#perturb">perturbed</a> by other
<i>c</i>/2 spaceships to form a variety of <a href="lex_p.htm#puffer">puffers</a>. The diagram below
shows the smallest form of the Schick engine, using two <a href="lex_l.htm#lwss">LWSS</a>. It
is also possible to use two <a href="lex_m.htm#mwss">MWSS</a> or two <a href="lex_h.htm#hwss">HWSS</a>, or even a LWSS and
a HWSS.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOOO..............
O...O.........O...
O...........OO....
.O..O..OO.....OOO.
......OOO......OOO
.O..O..OO.....OOO.
O...........OO....
O...O.........O...
OOOO..............
</a></pre></td></tr></table></center>
<p><a name=schickship>:</a><b>Schick ship</b> = <a href="#schickengine">Schick engine</a>
<p><a name=scorpion>:</a><b>scorpion</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O...
.OOO...
O...OO.
O.O.O.O
.OO.O.O
.....O.
</a></pre></td></tr></table></center>
<p><a name=scrubber>:</a><b>scrubber</b> (p2) Found in 1971.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....O......
..OOO......
.O.........
.O..OOO....
OO.O...O...
...O...O...
...O...O.OO
....OOO..O.
.........O.
......OOO..
......O....
</a></pre></td></tr></table></center>
<p><a name=se>:</a><b>SE</b> = <a href="#switchengine">switch engine</a>
<p><a name=seal>:</a><b>seal</b> (<i>c</i>/6 diagonally, p6) The first diagonal <a href="lex_c.htm#c6spaceship">c/6 spaceship</a>, found
by Nicolay Beluchenko in September 2005.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O..OO..........................
.OOO.O.O.O........................
.O..OOO..OO.......................
O..OOOOOO.O.OOO...................
.O..OOO.O.OOOOO...................
......O.O.O.O.....................
O.O...O.O.OOOOO...................
O..O.O..O.OO...O..................
...O..OO.......OOO................
.O...OOOOO.OOO..OO................
....O.........O...................
..O.O.........O...................
....OO.OOOOO...O..................
......O.OOO..O.....OO.............
......O..O...O.OOO.OO.............
........OO...OOO.O..O...O.........
........OO....OO.OOOO...OOO.......
...................O.O..O.........
.............O.O.....OO..OO.......
.............O..O.....O.OOO.....O.
.............O...O....OO..O...O..O
...............OOO.....OO........O
...............O.O..O..O.....OO..O
.................O..OO.OO.O..O....
................O.......O.O.......
.................O...OOOO.........
..................O...O...........
..................................
.......................O..........
......................O.O.........
.....................OO...........
.....................O.O..........
.....................OO...........
.......................O..........
......................O...........
</a></pre></td></tr></table></center>
<p><a name=secondgliderdomain>:</a><b>second glider domain</b> The second glider domain of an <a href="lex_e.htm#edgeshooter">edge shooter</a> is
the set of displacements (in space and time, relative to the glider
stream emitted by the edge shooter) that a glider stream may have
without interfering with the edge shooter. This is useful to know,
because edge shooters are often used to generate glider streams very
close to other glider streams.
<p><a name=secondnaturalglider>:</a><b>second natural glider</b> The glider produced at T=72 during the
evolution of a <a href="lex_h.htm#herschel">Herschel</a>. This is the common edge-shooting glider
output used in the <a href="lex_n.htm#nw31">NW31</a> converter and several other converter
variants.
<p><a name=seed>:</a><b>seed</b> A <a href="lex_c.htm#constellation">constellation</a> of still lifes and/or oscillators, which can
be converted into another Life object when it is struck by one or
more gliders. Usually the resulting object is a rare still life or
spaceship, more complex than the original constellation. <a href="#spartan">Spartan</a>
single-glider (1G) seeds are more commonly seen than multi-glider
seeds, because a Spartan 1G seed can be readily constructed and
<a href="lex_t.htm#trigger">triggered</a> using a <a href="#slowsalvo">slow salvo</a>. See also <a href="lex_f.htm#freezedried">freeze-dried</a>. For
example, the following is a 14<a href="#sl">sL</a> 1G seed for a <i>c</i>/7 loafer
spaceship.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...................................O..........
..................................O...........
..................................OOO.........
.............OO...............................
..............O...............................
..............O.O.............................
...............OO.............................
..............................................
...O..........................................
..O.O.........................................
.O.O..........................................
.OO...........................................
..............OO..............................
.............O.O..............................
.............OO...............................
..............................................
..............................................
..............................................
....................OO........................
...................O.O........................
..........O.........O.........................
.........O.O....O.............................
..........OO...O.O............................
..............O.O.............................
..............OO..............................
..............................................
.............................................O
.........................OO................OOO
....................OO...OO...............O...
...................O..O...................OO..
.O.................O..O.......................
O.O.................OO........................
.OO...........................................
..............................................
..............................................
..............................................
.....................OO.......................
.....................O.O....OO................
......................O.....O.O...............
.............................OO...............
.................................OO...........
.................................OO...........
..............................................
..............................................
......................OO......................
.....................O..O.....................
.....................O..O.....................
......................OO......................
</a></pre></td></tr></table></center>
<p><a name=seedsofdestructiongame>:</a><b>Seeds of Destruction Game</b> An interactive search application written
by Paul Chapman in 2013. Its primary purpose was to assist in the
design of self-destruct circuits in self-constructing circuitry. It
has also regularly been helpful in completing glider syntheses, and
was used to find the <a href="lex_1.htm#a-31c240">31c/240</a> base reaction for the <a href="#shieldbug">shield bug</a> and
<a href="lex_c.htm#centipede">Centipede</a> spaceships.
<p><a name=selfconstructing>:</a><b>self-constructing</b> A type of pattern, generally a <a href="lex_m.htm#macrospaceship">macro-spaceship</a>,
that contains encoded construction information about itself, and
makes a complete copy of itself using those instructions. The
<a href="lex_g.htm#gemini">Gemini</a>, <a href="lex_l.htm#linearpropagator">linear propagator</a>, <a href="#spiralgrowth">spiral growth</a> patterns, <a href="lex_d.htm#demonoid">Demonoids</a>
and <a href="lex_o.htm#orthogonoid">Orthogonoid</a> are examples of self-constructing patterns.
Self-constructing spaceships often have trivially adjustable speeds.
In many cases, the direction of travel can also be altered, less
easily, by changing the encoded <a href="lex_c.htm#constructionrecipe">construction recipe</a>. Compare
<a href="#selfsupporting">self-supporting</a>, <a href="lex_e.htm#elementary">elementary</a>.
<p><a name=selfsupporting>:</a><b>self-supporting</b> A type of pattern, specifically a <a href="lex_m.htm#macrospaceship">macro-spaceship</a>,
that constructs <a href="#signal">signals</a> or <a href="lex_t.htm#track">tracks</a> or other scaffolding to assist
its movement, but does not contain complete information about its own
structure. Examples include the Caterpillar, <a href="lex_c.htm#centipede">Centipede</a>,
<a href="lex_h.htm#halfbakedknightship">half-baked knightship</a>, <a href="lex_w.htm#waterbear">waterbear</a>, and the <a href="lex_c.htm#caterloopillar">Caterloopillars</a>.
<a href="lex_c.htm#caterpillar">Caterpillar</a> has been used as a general term for self-supporting
spaceships, but it is not very appropriate for the HBKs.
<p>In general a self-supporting pattern cannot be trivially adjusted
to alter its speed or direction. The variable speeds of the HBKs and
the Caterloopillars are exceptions, but their direction of travel is
fixed, and a specific Caterloopillar can't be made to change its
speed without completely rebuilding it. Compare <a href="#selfconstructing">self-constructing</a>,
<a href="lex_e.htm#elementary">elementary</a>.
<p><a name=semisnark>:</a><b>semi-Snark</b> A small 90-degree <a href="lex_g.htm#gliderreflector">glider reflector</a> requiring two input
gliders on the same lane for each output glider. It was discovered
by Sergei Petrov on 1 July 2013, using a custom-written search
utility. It functions as a very compact <a href="lex_p.htm#perioddoubler">period doubler</a> in some
<a href="#signal">signal</a> <a href="lex_c.htm#circuit">circuitry</a>, for example the <a href="lex_l.htm#linearpropagator">linear propagator</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
......O..........OO
.......OO........O.
......OO.......O.O.
...............OO..
..........O........
OO.........OO......
OO........OO.......
...................
...................
.................OO
..........OO.....OO
..........OO.......
...................
.....O.............
....O.O............
....OO......OO.....
............O......
.............OOO...
...............O...
</a></pre></td></tr></table></center>
<p><a name=sesquihat>:</a><b>sesquihat</b> (p1) Halfway between a <a href="lex_h.htm#hat">hat</a> and a <a href="lex_t.htm#twinhat">twinhat</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....O
OO.O.O.
.O.O.O.
.O.O.OO
..O...
</a></pre></td></tr></table></center>
<p><a name=sgr>:</a><b>SGR</b> Abbreviation for <a href="#stable">stable</a> <a href="lex_g.htm#glider">glider</a> <a href="lex_r.htm#reflector">reflector</a>. This term is no
longer in use.
<p><a name=shieldbug>:</a><b>shield bug</b> (31<i>c</i>/240 orthogonally, p240) The first 31<i>c</i>/240
<a href="lex_m.htm#macrospaceship">macro-spaceship</a>, constructed by Dave Greene on September 9, 2014.
<p><a name=shillelagh>:</a><b>shillelagh</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO...
O..OO
.OO.O
</a></pre></td></tr></table></center>
<p><a name=ship>:</a><b>ship</b> (p1) The term is also used as a synonym of <a href="#spaceship">spaceship</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO.
O.O
.OO
</a></pre></td></tr></table></center>
<p><a name=shipinabottle>:</a><b>ship in a bottle</b> (p16) Found by Bill Gosper in August 1994. See also
<a href="lex_b.htm#bottle">bottle</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO......OO....
...O..O....O..O...
...O.O......O.O...
.OO..OOO..OOO..OO.
O......O..O......O
O.OO..........OO.O
.O.O..........O.O.
...OO...OO...OO...
.......O.O........
.......OO.........
...OO........OO...
.O.O..........O.O.
O.OO..........OO.O
O......O..O......O
.OO..OOO..OOO..OO.
...O.O......O.O...
...O..O....O..O...
....OO......OO....
</a></pre></td></tr></table></center>
<p><a name=shiponboat>:</a><b>ship on boat</b> = <a href="#shiptieboat">ship tie boat</a>
<p><a name=shiponship>:</a><b>ship on ship</b> = <a href="#shiptie">ship-tie</a>
<p><a name=shiptie>:</a><b>ship-tie</b> (p1) The name is by analogy with <a href="lex_b.htm#boattie">boat-tie</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO....
O.O...
.OO...
...OO.
...O.O
....OO
</a></pre></td></tr></table></center>
<p><a name=shiptieboat>:</a><b>ship tie boat</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO....
O.O...
.OO...
...OO.
...O.O
....O.
</a></pre></td></tr></table></center>
<p><a name=shortkeys>:</a><b>short keys</b> (p3) Found by Dean Hickerson, August 1989. See also
<a href="lex_b.htm#bentkeys">bent keys</a> and <a href="lex_o.htm#oddkeys">odd keys</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O........O.
O.OOO..OOO.O
.O..O..O..O.
....O..O....
</a></pre></td></tr></table></center>
<p><a name=shoulder>:</a><b>shoulder</b> The fixed upper end of a <a href="lex_c.htm#constructionarm">construction arm</a>, generally
consisting of one or more glider <a href="lex_g.htm#gun">guns</a> or <a href="lex_e.htm#edgeshooter">edge shooters</a> aimed at
an <a href="lex_e.htm#elbow">elbow</a> object.
<p><a name=shuttle>:</a><b>shuttle</b> Any <a href="lex_o.htm#oscillator">oscillator</a> which consists of an active region moving
back and forth between stabilizing objects. The most well-known
examples are the <a href="lex_q.htm#queenbeeshuttle">queen bee shuttle</a> (which has often been called
simply "the shuttle") and the <a href="lex_t.htm#twinbeesshuttle">twin bees shuttle</a>. See also
<a href="lex_p.htm#p54shuttle">p54 shuttle</a> and <a href="lex_e.htm#eureka">Eureka</a>. Another example is the p72 <a href="lex_r.htm#rpentomino">R-pentomino</a>
shuttle that forms part of the pattern given under <a href="lex_f.htm#factory">factory</a>.
<p><a name=siamese>:</a><b>siamese</b> A term used in naming certain <a href="#stilllife">still lifes</a> (and the <a href="#stator">stator</a>
part of certain <a href="lex_o.htm#oscillator">oscillators</a>). It indicates that the object
consists of two smaller objects sharing two or more cells. See
<a href="#snakesiamesesnake">snake siamese snake</a> and <a href="lex_l.htm#loafsiamesebarge">loaf siamese barge</a> for examples.
<p><a name=side>:</a><b>side</b> Half a <a href="#sidewalk">sidewalk</a>. In itself this is unstable and requires an
<a href="lex_i.htm#inductioncoil">induction coil</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO...
O.OOO
....O
</a></pre></td></tr></table></center>
<p><a name=sidecar>:</a><b>sidecar</b> A small <a href="lex_t.htm#tagalong">tagalong</a> for a <a href="lex_h.htm#hwss">HWSS</a> that was found by Hartmut
Holzwart in 1992. The resulting <a href="#spaceship">spaceship</a> (shown below) has a
<a href="lex_p.htm#phase">phase</a> with only 24 cells, making it in this respect the smallest
known spaceship other than the <a href="#standardspaceship">standard spaceships</a> and some trivial
two-spaceship <a href="lex_f.htm#flotilla">flotillas</a> derived from them. Note also that a HWSS
can support two sidecars at once.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O......
O.....O.
O.....O.
OOOOO.O.
........
....OO..
..O....O
.O......
.O.....O
.OOOOOO.
</a></pre></td></tr></table></center>
<p><a name=sideshootinggun>:</a><b>side-shooting gun</b> = <a href="#slidegun">slide gun</a>
<p><a name=sidesnagger>:</a><b>sidesnagger</b> A <a href="#spartan">Spartan</a> eater found by Chris Cain in May 2015 with
functionality similar to the eater5, as shown below. It has one
<a href="lex_l.htm#lane">lane</a> less diagonal <a href="lex_c.htm#clearance">clearance</a> on the high-clearance side than
other eater5 variants, due to the presence of the boat. See also
<a href="lex_h.htm#highwayrobber">highway robber</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..O.............
O.O.............
.OO.............
................
................
................
.........O......
........O.......
........OOO.....
................
................
.........O......
........O.O.....
.......O..O...OO
........OO....OO
....O...........
...O.O..........
...OO...........
.........OO.....
.........OO.....
</a></pre></td></tr></table></center>
<p><a name=sidetracking>:</a><b>side-tracking</b> See <a href="lex_u.htm#universalconstructor">universal constructor</a>.
<p><a name=sidewalk>:</a><b>sidewalk</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO.OO
..O.O.
.O..O.
.O.O..
OO.OO.
</a></pre></td></tr></table></center>
<p><a name=siesta>:</a><b>siesta</b> (p5) Found by Dave Buckingham in 1973. Compare <a href="#sombreros">sombreros</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...........OO...
...OO.....O.O...
...O.O....O.....
.....O...OO.O...
...O.OO.....OOO.
.OOO.....O.O...O
O...O.O.....OOO.
.OOO.....OO.O...
...O.OO...O.....
.....O....O.O...
...O.O.....OO...
...OO...........
</a></pre></td></tr></table></center>
<p><a name=signal>:</a><b>signal</b> Movement of information through the Life universe. Signals
can be carried by <a href="#spaceship">spaceships</a>, <a href="lex_f.htm#fuse">fuses</a>, <a href="lex_d.htm#drifter">drifters</a>, or <a href="lex_c.htm#conduit">conduits</a>.
Spaceships can only transfer a signal at the speed of the spaceship,
while fuses can transfer a signal at speeds up to the
<a href="#speedoflight">speed of light</a>.
<p>In practice, many signals are encoded as the presence or absence of
a <a href="lex_g.htm#glider">glider</a> or other spaceship at a particular point at a particular
time. Such signals can be combined by the collision of gliders to
form logic operations such as AND, OR, and NOT gates. Signals can be
duplicated using <a href="lex_g.htm#gliderduplicator">glider duplicators</a> or other <a href="lex_f.htm#fanout">fanout</a> devices, and
can be used up by causing <a href="lex_p.htm#perturbation">perturbations</a> on other parts of the Life
object.
<p>Signals are used in <a href="lex_h.htm#herschelconduit">Herschel conduit</a> circuitry,
<a href="lex_u.htm#universalconstructor">universal constructors</a>, <a href="lex_m.htm#macrospaceship">macro-spaceships</a>, and other computational
patterns such as the <a href="lex_p.htm#picalculator">pi calculator</a> and <a href="lex_o.htm#osqrtlogt">Osqrtlogt</a> patterns.
<p><a name=signalelbow>:</a><b>signal elbow</b> A <a href="lex_c.htm#conduit">conduit</a> with <a href="#signal">signal</a> output 90 degrees from its
input. This term is commonly used only for signal <a href="lex_w.htm#wire">wires</a>,
particularly <a href="lex_1.htm#a-2c3">2c/3</a> signals. A <a href="#snark">Snark</a> could reasonably be called a
"glider elbow", but <a href="lex_g.htm#gliderreflector">glider reflector</a> is the standard term. A
signal elbow with a <a href="lex_r.htm#recoverytime">recovery time</a> less than 20 ticks would enable a
trivial proof that Conway's Life is <a href="lex_o.htm#omniperiodic">omniperiodic</a>.
<p>Relatively small <a href="lex_c.htm#composite">composite</a> <a href="lex_m.htm#mwss">MWSS</a> elbows can now be constructed,
using Tanner Jacobi's 2015 discovery of a small <a href="lex_h.htm#htomwss">H-to-MWSS</a>
component. The extra beehive can be easily <a href="lex_c.htm#clean">cleaned</a> up in various
ways using <a href="#snark">Snarks</a>, <a href="#syringe">syringes</a> or Herschel conduits.
<p><a name=silvergtoh>:</a><b>Silver G-to-H</b> A variant of the <a href="#silverreflector">Silver reflector</a> made by
substituting an <a href="lex_f.htm#fx119">Fx119</a> conduit for the final <a href="lex_n.htm#nw31">NW31</a>, allowing a
Herschel output as well as the beehive-annihilating reset glider. It
is still <a href="#spartan">Spartan</a> and retains the <a href="lex_r.htm#recoverytime">recovery time</a> of 497 ticks.
<p><a name=silverreflector>:</a><b>Silver reflector</b> A <a href="#stable">stable</a> <a href="lex_g.htm#gliderreflector">glider reflector</a> found by Stephen
Silver in November 1998, by substituting an <a href="lex_n.htm#nw31">NW31</a> converter for the
second <a href="lex_f.htm#fx77">Fx77</a> conduit in the <a href="lex_c.htm#callahangtoh">Callahan G-to-H</a> found a few days
previous. The repeat time is 497 ticks:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
........O.............O.......................................
......O.O...........OOO.......................................
.......OO..........O..........................................
...................OO.........................................
....OO........................................................
.....O........................................................
.....O.O......................................................
......OO..........O...........................................
.................O.O..........................................
.................O.O..........................................
..................O....OO.....................................
......OO...............O.O....................................
.....O.O.................O....................................
.....O...................OO...................................
....OO........................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
...............OO.............................................
...............OO.............................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
...OO.........................................................
....O.........................................................
....O.O.......................................................
.....OO.......................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
......OO...............OO.....................................
......OO...............O.O....................................
.........................O....................................
.........................OO...................................
..............................................................
..............................................................
..............................................................
..............................................................
..............................................................
...................O..........................................
.................OOO..........................................
................O.............................................
................OO...................OO.......................
....................OO................O.......................
.....................O................O.O.....................
...................O...................OO.....................
...................OO.........................................
..............................................................
..............................................................
............................................................OO
............................................................OO
..............................................................
......................OO......................................
...OO.................OO......................................
...OO.........................................................
..............................................................
..............................................................
..OO..........................................................
...O..........................................................
OOO............OO.............................................
O..............O..............................................
................OOO...........................................
..................O...........................................
..............................................................
..................................................OO..........
..................................................OO..........
</a></pre></td></tr></table></center>
<p><a name=silversp5>:</a><b>Silver's p5</b> (p5) The following oscillator found by Stephen Silver in
February 2000:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO.........
O..........
.O..O......
...OO......
...O...O.OO
..O....OO.O
..OO.......
</a></pre></td></tr></table></center>
<p>As this has no <a href="#spark">spark</a>, it appears useless. Nonetheless, in March
2000, David Eppstein found a way to use it to reduce the size of Noam
Elkies' p5 <a href="lex_r.htm#reflector">reflector</a>.
<p><a name=simkinglidergun>:</a><b>Simkin glider gun</b> A <a href="lex_h.htm#herschel">Herschel</a>-based period 120 glider gun discovered
by Michael Simkin in April 2015. It consists of a Herschel running
through two <a href="lex_b.htm#b60">B60</a> conduits. In terms of its 36-cell minimum
population, it is one of the smallest known guns, sharing the record
with the <a href="lex_g.htm#gosperglidergun">Gosper glider gun</a>. In the double-barreled form, as well as
the <a href="lex_p.htm#pseudo">pseudo</a>-period, <a href="#snake">snake</a>-stabilized form shown below, it is the
absolute record holder.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO.....OO........................
OO.....OO........................
.................................
....OO...........................
....OO...........................
.................................
.................................
.................................
.................................
......................OO.OO......
.....................O.....O.....
.....................O......O..OO
.....................OOO...O...OO
..........................O......
.................................
.................................
.................................
.................................
........................O.OO.....
........................OO.O.....
</a></pre></td></tr></table></center>
<p><a name=singlearm>:</a><b>single-arm</b> A type of <a href="lex_u.htm#universalconstructor">universal constructor</a> using just one
construction arm and <a href="#slowsalvo">slow salvo</a> techniques to construct, usually,
<a href="#spartan">Spartan</a> or near-Spartan circuitry. Compare <a href="lex_t.htm#twoarm">two-arm</a>.
<p><a name=singlechannel>:</a><b>single-channel</b> A <a href="lex_u.htm#universal">universal</a> construction method discovered by Simon
Ekstrom in December 2015. The initial <a href="lex_e.htm#elbowoperation">elbow operation</a> toolkit was
near-minimal -- just one <a href="lex_p.htm#push">push</a>, one <a href="lex_p.htm#pull">pull</a>, and one output glider of
each colour -- but later searches produced a much larger library.
See <a href="lex_c.htm#colourofaglider">colour of a glider</a>
<p><a name=singlelane>:</a><b>single-lane</b> = <a href="#singlechannel">single-channel</a>.
<p><a name=singularflipflop>:</a><b>singular flip flop</b> (p2) Found by Robert Wainwright, July 1972.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..O...
..O.O.
O....O
OOOOOO
......
..OO..
..OO..
</a></pre></td></tr></table></center>
<p><a name=sinkingship>:</a><b>sinking ship</b> = <a href="lex_c.htm#canoe">canoe</a>
<p><a name=sixls>:</a><b>six Ls</b> (p3) This is a compact form of <a href="lex_l.htm#loadingdock">loading dock</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O...
.OOO..O
O...OOO
OOO....
....OOO
OOO...O
O..OOO.
...O...
</a></pre></td></tr></table></center>
<p><a name=sixtynine>:</a><b>sixty-nine</b> (p4) Found by Robert Wainwright, October 1978.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.........O...........
........O.O..........
.....................
......O...OO.........
.....O.....O.........
......O.O............
........OO......O....
................O....
..O.....OO....OOO....
..O...........OO.....
OOO.......OO..OO..OOO
OO......O.OO....OOO..
OO..OOO.O.O.....OOO..
..OOO................
..OOO......O.........
..........O.O........
.....................
........O...OO.......
.......O.....O.......
........O.O..........
..........OO.........
</a></pre></td></tr></table></center>
<p><a name=skewedquad>:</a><b>skewed quad</b> (p2)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO....
.O...OO
..O.O.O
.......
O.O.O..
OO...O.
....OO.
</a></pre></td></tr></table></center>
<p><a name=skewedtrafficlight>:</a><b>skewed traffic light</b> (p3) Found by Robert Wainwright, August 1989.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.............OO.........
............O..O........
.............O.O........
.........OO...O.........
..........O.OO..........
............O...........
............O...........
........................
OO........OOO......O....
OOOO.O........O...OO....
O.O..OOO.O....O.........
.........O....O.OOO..O.O
....OO...O........O.OOOO
....O......OOO........OO
........................
...........O............
...........O............
..........OO.O..........
.........O...OO.........
........O.O.............
........O..O............
.........OO.............
</a></pre></td></tr></table></center>
<p><a name=sl>:</a><b>sL</b> Still life. This abbreviation is used most often in rough
measurements of the complexity of a <a href="#spartan">Spartan</a> constellation.
<p><a name=slidegun>:</a><b>slide gun</b> A <a href="lex_g.htm#gun">gun</a> which fires sideways from an extending arm. The
arm consists of streams of <a href="#spaceship">spaceships</a> which are pushing a pattern
away from the body of the gun and releasing an output spaceship every
time they do so. Each output spaceship therefore travels along a
different path.
<p>Dieter Leithner constructed the first slide gun in July 1994
(although he used the term "side shooting gun"). The following
pattern shows the key reaction of this slide gun. The three gliders
shown will push the block one cell diagonally, thereby extending the
length of the arm by one cell, and at the same time they release an
output glider sideways. (In 1999, Jason Summers constructed slide
guns using other reactions.)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..............OO.
..............OO.
........OOO......
..........O......
.........O.....OO
..............O.O
................O
.................
.................
.................
.................
.................
.................
.................
.................
.................
.................
.O...............
.OO..............
O.O..............
</a></pre></td></tr></table></center>
<p><a name=slidingblockmemory>:</a><b>sliding block memory</b> A memory register whose value is stored as the
position of a <a href="lex_b.htm#block">block</a>. The block can be moved by means of <a href="lex_g.htm#glider">glider</a>
collisions - see <a href="lex_b.htm#blockpusher">block pusher</a> for an example.
<p>In Conway's original formulation (as part of his proof of the
existence of a <a href="lex_u.htm#universalcomputer">universal computer</a> in Life) 2 gliders were used to
pull the block inwards by three diagonal spaces, and 30 gliders were
used to push it out by the same amount. Dean Hickerson later greatly
improved on this, finding a way to pull a block inwards by one
diagonal space using 2 gliders, and push it out using 3 gliders. In
order for the memory to be of any use there also has to be a way to
read the value held. It suffices to be able to check whether the
value is zero (as Conway did), or to be able to detect the transition
from one to zero (as Hickerson did).
<p>Dean Hickerson's sliding block memory is used in Paul Chapman's
<a href="lex_u.htm#urm">URM</a>.
<p><a name=slowelbow>:</a><b>slow elbow</b> A movable <a href="lex_e.htm#elbow">elbow</a> in a <a href="lex_c.htm#constructionarm">construction arm</a> <a href="lex_t.htm#toolkit">toolkit</a> that
is controlled by a <a href="#slowsalvo">slow salvo</a>, which most likely comes from a
previous <a href="lex_c.htm#constructionelbow">construction elbow</a>. Unlike a standard <a href="lex_e.htm#elbow">elbow</a> which is
generally fixed on a single <a href="lex_c.htm#constructionlane">construction lane</a> or at least within a
narrow range, a slow elbow can move freely in two dimensions as long
as there is room for it.
<p><a name=slowgliderconstruction>:</a><b>slow glider construction</b> Construction an object by a "slow salvo" of
<a href="lex_g.htm#glider">gliders</a> all coming from the same direction, in such a way that
timing of the gliders does not matter as long as they are not too
close behind one another. This type of construction requires an
initial seed object, such as a <a href="lex_b.htm#block">block</a>, which is modified by each
glider in turn until the desired object is produced.
<p>In May 1997, Nick Gotts produced a slow glider construction of a
block-laying switch engine from a block, using a slow salvo of 53
gliders. Constructions like this are important in the study of
<a href="#sparselife">sparse Life</a>, as they will occur naturally as gliders created in the
first few generations collide with <a href="lex_b.htm#blonk">blonks</a> and other debris.
<p>Slow glider constructions are also useful in some designs for
<a href="lex_u.htm#universalconstructor">universal constructors</a>. However, in this case the above definition
is usually too restrictive, and it is desirable to allow
constructions in which some gliders in the salvo are required to have
a particular timing modulo 2 (a "p2 slow salvo"). This gives much
greater flexibility, as <a href="lex_b.htm#blinker">blinkers</a> can now be freely used in the
intermediate construction steps.
<p><a name=slowsalvo>:</a><b>slow salvo</b> See <a href="#slowgliderconstruction">slow glider construction</a>.
<p><a name=smallfish>:</a><b>small fish</b> = <a href="lex_l.htm#lwss">LWSS</a>
<p><a name=smalllake>:</a><b>small lake</b> (p1) See also <a href="lex_l.htm#lake">lake</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....O....
...O.O...
...O.O...
.OO...OO.
O.......O
.OO...OO.
...O.O...
...O.O...
....O....
</a></pre></td></tr></table></center>
<p><a name=smiley>:</a><b>smiley</b> (p8) Found by Achim Flammenkamp in July 1994 and named by Alan
Hensel.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO.O.OO
...O...
O.....O
.OOOOO.
.......
.......
OOO.OOO
</a></pre></td></tr></table></center>
<p><a name=smmbreeder>:</a><b>SMM breeder</b> See <a href="lex_b.htm#breeder">breeder</a>.
<p><a name=smoke>:</a><b>smoke</b> Debris which is fairly long-lived but eventually dies
completely. Basically, a large <a href="#spark">spark</a>. This term is used
especially when talking about the output from a <a href="#spaceship">spaceship</a> - see
<a href="#smokingship">smoking ship</a>.
<p><a name=smokingship>:</a><b>smoking ship</b> A <a href="#spaceship">spaceship</a> which produces <a href="#smoke">smoke</a>. If the smoke
extends past the edge of the rest of the spaceship, then it can be
used to perturb other objects as the spaceship passes by. Running
gliders into the smoke is often a good way to turn or duplicate them,
or convert them into other objects. Sometimes the smoke from a
smoking ship may itself be perturbed by accompanying spaceships in
order to form a <a href="lex_p.htm#puffer">puffer</a>. A simple example of a smoking ship is the
<a href="#schickengine">Schick engine</a>.
<p><a name=snacker>:</a><b>snacker</b> (p9) Found by Mark Niemiec in 1972. This is a
<a href="lex_p.htm#pentadecathlon">pentadecathlon</a> with stabilizers which force it into a lower period.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO................OO
.O................O.
.O.O............O.O.
..OO............OO..
.......O....O.......
.....OO.OOOO.OO.....
.......O....O.......
..OO............OO..
.O.O............O.O.
.O................O.
OO................OO
</a></pre></td></tr></table></center>
The stabilizers make the <a href="lex_d.htm#domino">domino</a> spark largely inaccessible, but the
snacker is <a href="lex_e.htm#extensible">extensible</a>, as shown in the next diagram, and so a more
accessible p9 domino spark can be obtained. In April 1998 Dean
Hickerson found an alternative stabilizer that is less obtrusive than
the original one, and this is also shown in this diagram.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO................................
.O................................
.O.O.........................OO...
..OO.......................O..O...
.......O....O..............OOO....
.....OO.OOOO.OO...O....O......OOO.
.......O....O...OO.OOOO.OO...O...O
..OO..............O....O......OOO.
.O.O.......................OOO....
.O.........................O..O...
OO...........................OO...
</a></pre></td></tr></table></center>
An end can also be stabilized by killer <a href="lex_c.htm#candlefrobra">candlefrobras</a>.
<p><a name=snail>:</a><b>snail</b> (<i>c</i>/5 orthogonally, p5) The first known <a href="lex_c.htm#c5spaceship">c/5 spaceship</a>,
discovered by Tim Coe in January 1996. For some time it was the
slowest known orthogonal spaceship.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O....................................
.O....................................
O.....................................
.OOO.................OOO...OOO........
.OO.O.........O...O.O......OOO........
..O...........OO.O.......O....OOOO....
......O......O...O.O...OO.O.....OO....
...O..O.OOO...OO.........O........OO.O
...OO.O.....O.....O.................O.
.........O.OOOOOOO....................
......................................
.........O.OOOOOOO....................
...OO.O.....O.....O.................O.
...O..O.OOO...OO.........O........OO.O
......O......O...O.O...OO.O.....OO....
..O...........OO.O.......O....OOOO....
.OO.O.........O...O.O......OOO........
.OOO.................OOO...OOO........
O.....................................
.O....................................
.O....................................
</a></pre></td></tr></table></center>
<p><a name=snake>:</a><b>snake</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO.O
O.OO
</a></pre></td></tr></table></center>
<p><a name=snakebit>:</a><b>snake bit</b> An alternative name for a <a href="lex_b.htm#boatbit">boat-bit</a>. Not a very sensible
name, because various other things can be used instead of a snake.
<p><a name=snakebridgesnake>:</a><b>snake bridge snake</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO
....O.
.....O
....OO
OO.O..
O.OO..
</a></pre></td></tr></table></center>
<p><a name=snakedance>:</a><b>snake dance</b> (p3) Found by Robert Wainwright, May 1972.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...OO.O..
...O.OO..
OO.O.....
.O..O.OOO
O..O.O..O
OOO.O..O.
.....O.OO
..OO.O...
..O.OO...
</a></pre></td></tr></table></center>
<p><a name=snakepit>:</a><b>snake pit</b> This term has been used for two different <a href="lex_o.htm#oscillator">oscillators</a>:
the p2 snake pit (essentially the same as <a href="lex_f.htm#foreandback">fore and back</a>)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
O.OO.OO
OO.O.O.
......O
OOO.OOO
O......
.O.O.OO
OO.OO.O
</a></pre></td></tr></table></center>
and the p3 snake pit.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....OO....
....O..O...
....O.OO...
.OO.O......
O.O.O.OOOO.
O.........O
.OOOO.O.O.O
......O.OO.
...OO.O....
...O..O....
....OO.....
</a></pre></td></tr></table></center>
<p><a name=snakesiamesesnake>:</a><b>snake siamese snake</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO.OO.O
O.OO.OO
</a></pre></td></tr></table></center>
<p><a name=snark>:</a><b>Snark</b> A small stable 90-degree glider reflector with a repeat time of
43 ticks, discovered by Mike Playle on 25 April 2013 using a search
utility he wrote called <a href="lex_b.htm#bellman">Bellman</a>. Compare <a href="lex_b.htm#boojumreflector">boojum reflector</a>. Four
common Snark variants are shown below -- Playle's original (top), and
variants by Heinrich Koenig, Simon Ekstrom, and Shannon Omick (left,
bottom, and right, respectively):
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.............................OO....................
............................O.O....................
......................OO....O......................
....................O..O..OO.OOOO..................
....................OO.O.O.O.O..O..................
.......................O.O.O.O.....................
.......................O.O.OO......................
........................O..........................
...................................................
.....................................OO............
............................OO.......O.............
............................OO.....O.O.............
.........O.........................OO..............
.........OOO.......................................
............O........O.............................
...........OO.......O..............................
....................OOO............................
...................................................
...OO..............................................
...O.....................OO........................
OO.O......................O........................
O..OOO....OO...........OOO.........................
.OO...O...OO...........O......................O....
...OOOO.....................OO..............OOOOO..
...O...............OO........O.............O.....O.
....OOO............O.O.......O.O............OOO..O.
.......O.............O........OO...............O.OO
..OOOOO..............OO.....................OOOO..O
.O..O......................O...........OO...O...OO.
.OO......................OOO...........OO....OOO...
........................O......................O...
........................OO.....................O.OO
..............................................OO.OO
...................................................
...................................................
......................................OO...........
......................................O............
.......................................OOO.........
..............OO.........................O.........
.............O.O.....OO............................
.............O.......OO............................
............OO.....................................
...................................................
..........................O........................
................OO....OO.O.O.......................
...............O..O..O.O.O.O.......................
................OO...O.O.O.OO......................
..................OOOO.OO..O.......................
..................O...O....O.......................
...................O..O.OOO........................
....................O.O.O..........................
.....................O.............................
</a></pre></td></tr></table></center>
<p><a name=sng>:</a><b>SNG</b> = <a href="#secondnaturalglider">second natural glider</a>.
<p><a name=sodgame>:</a><b>SODGame</b> = <a href="#seedsofdestructiongame">Seeds of Destruction Game</a>
<p><a name=sombrero>:</a><b>sombrero</b> One half of <a href="#sombreros">sombreros</a> or <a href="#siesta">siesta</a>.
<p><a name=sombreros>:</a><b>sombreros</b> (p6) Found by Dave Buckingham in 1972. If the two halves
are moved three spaces closer to one another then the period drops to
4, and the result is just a less compact form of <a href="lex_a.htm#achimsp4">Achim's p4</a>.
Compare also <a href="#siesta">siesta</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...OO........OO...
...O.O......O.O...
.....O......O.....
...O.OO....OO.O...
.OOO..........OOO.
O...O.O....O.O...O
.OOO..........OOO.
...O.OO....OO.O...
.....O......O.....
...O.O......O.O...
...OO........OO...
</a></pre></td></tr></table></center>
<p><a name=soup>:</a><b>soup</b> A random initial pattern, often assumed to cover the whole Life
universe.
<p><a name=spacedust>:</a><b>space dust</b> A part of a <a href="#spaceship">spaceship</a> or <a href="lex_o.htm#oscillator">oscillator</a> which looks like a
random mix of ON and OFF cells. It is usually very difficult to find
a <a href="lex_g.htm#glidersynthesis">glider synthesis</a> for an object that consists wholly or partly of
space dust.
<p><a name=spacefiller>:</a><b>spacefiller</b> Any pattern that grows at a quadratic rate by filling
space with an <a href="lex_a.htm#agar">agar</a>. The first example was found in September 1993
by Hartmut Holzwart, following a suggestion by Alan Hensel. The
diagram below shows a smaller spacefiller found by Tim Coe. See also
<a href="lex_m.htm#max">Max</a>. Spacefillers can be considered as <a href="lex_b.htm#breeder">breeders</a> (more precisely,
MMS breeders), but they are very different from ordinary breeders.
The word "spacefiller" was suggested by Harold McIntosh and soon
became the accepted term.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..................O........
.................OOO.......
............OOO....OO......
...........O..OOO..O.OO....
..........O...O.O..O.O.....
..........O....O.O.O.O.OO..
............O....O.O...OO..
OOOO.....O.O....O...O.OOO..
O...OO.O.OOO.OO.........OO.
O.....OO.....O.............
.O..OO.O..O..O.OO..........
.......O.O.O.O.O.O.....OOOO
.O..OO.O..O..O..OO.O.OO...O
O.....OO...O.O.O...OO.....O
O...OO.O.OO..O..O..O.OO..O.
OOOO.....O.O.O.O.O.O.......
..........OO.O..O..O.OO..O.
.............O.....OO.....O
.OO.........OO.OOO.O.OO...O
..OOO.O...O....O.O.....OOOO
..OO...O.O....O............
..OO.O.O.O.O....O..........
.....O.O..O.O...O..........
....OO.O..OOO..O...........
......OO....OOO............
.......OOO.................
........O..................
</a></pre></td></tr></table></center>
<p><a name=spacenonfiller>:</a><b>space nonfiller</b> Any pattern that expands indefinitely to affect every
cell in the Life plane, but leaves an expanding region of <a href="lex_v.htm#vacuum">vacuum</a> at
its center. Compare <a href="#spacefiller">spacefiller</a>; see also <a href="lex_a.htm#antstretcher">antstretcher</a>. The
first nonfiller was discovered by Jason Summers on 14 April 1999:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...................OOO...............
..................O..O...............
............OOO......O....OOO........
............O..O.O...O....O..O.......
............O..O.O...O....O..O.......
..........O..........O..O.O.OOO......
..........OO..OO..O.O....O.....O.....
........O................OO..OOO.....
........OOO.O.OO..........O......O...
......O........O.........O.O...OOO...
......OOO.....O..........O........O..
...O.O.........................O.OOO.
..OOOOO.O..........................O.
.OO......O.....................OOOOO.
OO....OO..................O.O........
.O.O...O..O...............O..O...O.O.
........O.O..................OO....OO
.OOOOO.....................O......OO.
.O..........................O.OOOOO..
.OOO.O.........................O.O...
..O........O..........O.....OOO......
...OOO...O.O.........O........O......
...O......O..........OO.O.OOO........
.....OOO..OO................O........
.....O.....O....O.O..OO..OO..........
......OOO.O.O..O..........O..........
.......O..O....O...O.O..O............
.......O..O....O...O.O..O............
........OOO....O......OOO............
...............O..O..................
...............OOO...................
</a></pre></td></tr></table></center>
<p><a name=spacerake>:</a><b>space rake</b> The following p20 forwards glider <a href="lex_r.htm#rake">rake</a>, which was the
first known rake. It consists of an <a href="lex_e.htm#ecologist">ecologist</a> with a <a href="lex_l.htm#lwss">LWSS</a> added
to turn the dying debris into <a href="lex_g.htm#glider">gliders</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...........OO.....OOOO
.........OO.OO...O...O
.........OOOO........O
..........OO.....O..O.
......................
........O.............
.......OO........OO...
......O.........O..O..
.......OOOOO....O..O..
........OOOO...OO.OO..
...........O....OO....
......................
......................
......................
..................OOOO
O..O.............O...O
....O................O
O...O............O..O.
.OOOO.................
</a></pre></td></tr></table></center>
<p><a name=spaceship>:</a><b>spaceship</b> Any finite pattern that reappears (without additions or
losses) after a number of generations and displaced by a non-zero
amount. By far the most <a href="lex_n.htm#natural">natural</a> spaceships are the <a href="lex_g.htm#glider">glider</a>,
<a href="lex_l.htm#lwss">LWSS</a>, <a href="lex_m.htm#mwss">MWSS</a> and <a href="lex_h.htm#hwss">HWSS</a>, followed by the <a href="lex_c.htm#coeship">Coe ship</a> which has also
evolved multiple times from random asymmetric <a href="#soup">soup</a> starting
conditions. See also the entries on individual spaceship speeds:
<a href="lex_c.htm#c2spaceship">c/2 spaceship</a>, <a href="lex_c.htm#c3spaceship">c/3 spaceship</a>, <a href="lex_c.htm#c4spaceship">c/4 spaceship</a>, <a href="lex_c.htm#c5spaceship">c/5 spaceship</a>,
<a href="lex_c.htm#c6spaceship">c/6 spaceship</a>, <a href="lex_c.htm#c7spaceship">c/7 spaceship</a>, <a href="lex_c.htm#c10spaceship">c/10 spaceship</a>, <a href="lex_c.htm#c12spaceship">c/12 spaceship</a>,
<a href="lex_1.htm#a-2c5spaceship">2c/5 spaceship</a>, <a href="lex_1.htm#a-2c7spaceship">2c/7 spaceship</a>, <a href="lex_1.htm#a-3c7spaceship">3c/7 spaceship</a>, and
<a href="lex_1.htm#a-17c45spaceship">17c/45 spaceship</a>.
<p>It is known that there exist spaceships travelling in all rational
directions and at arbitrarily slow speeds (see
<a href="lex_u.htm#universalconstructor">universal constructor</a>). Before 1989, however, the only known
examples travelled at <i>c</i>/4 diagonally (gliders) or <i>c</i>/2 orthogonally
(everything else).
<p>In 1989 Dean Hickerson started to use automated searches to look
for new <a href="lex_e.htm#elementary">elementary</a> spaceships, and had considerable success. Other
people have continued these searches using tools such as <a href="lex_l.htm#lifesrc">lifesrc</a>
and <a href="lex_g.htm#gfind">gfind</a>, and as a result we now have a great variety of
elementary spaceships travelling at fifteen different velocities.
The following table details the discovery of elementary spaceships
with new velocities as of August 2017.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><font size=-1>
--------------------------------------------------------------
Speed Direction  First Discovery   Discoverer             Date
--------------------------------------------------------------
c/4   diagonal   <a href="lex_g.htm#glider">glider</a>            Richard Guy            1970
c/2   orthogonal <a href="lex_l.htm#lwss">LWSS</a>              John Conway            1970
c/3   orthogonal <a href="lex_1.htm#a-25p3h1v01">25P3H1V0.1</a>        Dean Hickerson     Aug 1989
c/4   orthogonal <a href="lex_1.htm#a-119p4h1v0">119P4H1V0</a>         Dean Hickerson     Dec 1989
c/12  diagonal   <a href="lex_c.htm#cordership">Cordership</a>        Dean Hickerson     Apr 1991
2c/5  orthogonal <a href="lex_1.htm#a-44p5h2v0">44P5H2V0</a>          Dean Hickerson     Jul 1991
c/5   orthogonal <a href="lex_s.htm#snail">snail</a>             Tim Coe            Jan 1996
2c/7  orthogonal <a href="lex_w.htm#weekender">weekender</a>         David Eppstein     Jan 2000
c/6   orthogonal <a href="lex_d.htm#dragon">dragon</a>            Paul Tooke         Apr 2000
c/5   diagonal   <a href="lex_1.htm#a-295p5h1v1">295P5H1V1</a>         Jason Summers      Nov 2000
c/6   diagonal   <a href="lex_s.htm#seal">seal</a>              Nicolay Beluchenko Sep 2005
c/7   diagonal   <a href="lex_l.htm#lobster">lobster</a>           Matthias Merzenich Aug 2011
c/7   orthogonal <a href="lex_l.htm#loafer">loafer</a>            Josh Ball          Feb 2013
c/10  orthogonal <a href="lex_c.htm#copperhead">copperhead</a>        zdr                Mar 2016
3c/7  orthogonal <a href="lex_s.htm#spaghettimonster">spaghetti monster</a> Tim Coe            Jun 2016
--------------------------------------------------------------
</font></pre></td></tr></table></center>
<p>Several infinite families of adjustable-velocity <a href="lex_m.htm#macrospaceship">macro-spaceships</a>
have also been constructed, of which the first was Gabriel Nivasch's
<a href="lex_c.htm#caterpillar">Caterpillar</a> from December 2004. The macro-spaceship with the
widest range of possible speeds is Michael Simkin's <a href="lex_c.htm#caterloopillar">Caterloopillar</a>
from April 2016; in theory it supports any rational speed strictly
less than <i>c</i>&lt;4. A somewhat similar design supporting any rational
speed strictly less than <i>c</i>/2 has been shown to be feasible, but as of
August 2017 no explicit examples have been constructed.
<p>A period <i>p</i> spaceship that displaces itself (<i>m</i>,<i>n</i>) during its period,
where <i>m</i>&gt;=<i>n</i>, is said to be of type (<i>m</i>,<i>n</i>)/<i>p</i>. It was proved by Conway
in 1970 that <i>p</i>&gt;=2<i>m</i>+2<i>n</i>. (This follows immediately from the
easily-proved fact that a pattern cannot advance diagonally at a rate
greater than one half diagonal step every other generation.)
<p><a name=spaceshipsinconwayslife>:</a><b>Spaceships in Conway's Life</b> A series of articles posted by David Bell
to the newsgroup comp.theory.cell-automata during the period
August-October 1992 that described many of the new <a href="#spaceship">spaceships</a> found
by himself, Dean Hickerson and Hartmut Holzwart. Bell produced an
addendum covering more recent developments in 1996.
<p><a name=spaghettimonster>:</a><b>spaghetti monster</b> The first <a href="lex_1.htm#a-3c7spaceship">3c/7 spaceship</a>, found by Tim Coe in
June 2016. The spaceship travels orthogonally, has a minimum of 702
live cells and fits in a 27x137 bounding box.
<p><a name=spark>:</a><b>spark</b> A pattern that dies. The term is typically used to describe a
collection of cells periodically thrown off by an <a href="lex_o.htm#oscillator">oscillator</a> or
<a href="#spaceship">spaceship</a>, but other dying patterns, particularly those consisting
or only one or two cells (such as produced by certain glider
collisions, for example), are also described as sparks. For examples
of small sparks see <a href="lex_u.htm#unix">unix</a> and <a href="lex_h.htm#hwss">HWSS</a>. For an example of a much
larger spark see <a href="#schickengine">Schick engine</a>.
<p><a name=sparkcoil>:</a><b>spark coil</b> (p2) Found in 1971.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO....OO
O.O..O.O
..O..O..
O.O..O.O
OO....OO
</a></pre></td></tr></table></center>
<p><a name=sparker>:</a><b>sparker</b> An <a href="lex_o.htm#oscillator">oscillator</a> or <a href="#spaceship">spaceship</a> that produces <a href="#spark">sparks</a>. These
can be used to <a href="lex_p.htm#perturb">perturb</a> other patterns without being themselves
affected.
<p><a name=sparky>:</a><b>sparky</b> A certain <i>c</i>/4 <a href="lex_t.htm#tagalong">tagalong</a>, shown here attached to the back of a
<a href="#spaceship">spaceship</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..........O....................
..........O...............OO...
......OO.O.OOO..........OO...O.
O.OO.OO.OO..O.O...OO.OOOO......
O...OO..O.OO..OOO..O.OO..OO...O
O.OO....OOO.O.OOO......OO..O...
........OO.O...............O..O
O.OO....OOO.O.OOO......OO..O...
O...OO..O.OO..OOO..O.OO..OO...O
O.OO.OO.OO..O.O...OO.OOOO......
......OO.O.OOO..........OO...O.
..........O...............OO...
..........O....................
</a></pre></td></tr></table></center>
<p><a name=sparselife>:</a><b>sparse Life</b> This refers to the study of the evolution of a Life
universe which starts off as a random <a href="#soup">soup</a> of extremely low
density. Such a universe is dominated at an early stage by <a href="lex_b.htm#block">blocks</a>
and <a href="lex_b.htm#blinker">blinkers</a> (often referred to collectively as <a href="lex_b.htm#blonk">blonks</a>) in a
ratio of about 2:1. Much later it will be dominated by simple
<a href="lex_i.htm#infinitegrowth">infinite growth</a> patterns (presumably mostly <a href="#switchengine">switch engines</a>). The
long-term fate of a sparse Life universe is less certain. It may
possibly become dominated by self-reproducing patterns (see
<a href="lex_u.htm#universalconstructor">universal constructor</a>), but it is not at all clear that there is
any mechanism for these to deal with the all junk produced by switch
engines.
<p><a name=spartan>:</a><b>Spartan</b> A pattern composed of subunits that can be easily constructed
in any orientation, usually with a <a href="#slowsalvo">slow salvo</a>. Generally this means
that the pattern is a <a href="lex_c.htm#constellation">constellation</a> of Spartan still lifes --
<a href="lex_b.htm#block">block</a>, <a href="lex_t.htm#tub">tub</a>, <a href="lex_b.htm#boat">boat</a>, <a href="lex_h.htm#hive">hive</a>, <a href="#ship">ship</a>, <a href="lex_l.htm#loaf">loaf</a>, <a href="lex_e.htm#eater1">eater1</a>, or <a href="lex_p.htm#pond">pond</a>.
Other small objects may sometimes be counted as Spartan, including
period-2 oscillators -- mainly <a href="lex_b.htm#blinker">blinkers</a>, but also <a href="lex_b.htm#beacon">beacons</a> or
<a href="lex_t.htm#toad">toads</a>, which may occur as <a href="lex_i.htm#intermediatetarget">intermediate targets</a> in slow salvo
<a href="lex_r.htm#recipe">recipes</a>. Most <a href="#selfconstructing">self-constructing</a> patterns are Spartan or mostly
Spartan, to simplify the process of self-construction.
<p><a name=speedoflight>:</a><b>speed of light</b> A speed of one cell per generation, the greatest speed
at which any effect can propagate. Usually denoted <i>c</i>.
<p><a name=spentomino>:</a><b>S-pentomino</b> Conway's name for the following <a href="lex_p.htm#pentomino">pentomino</a>, which
rapidly dies.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO
OOO.
</a></pre></td></tr></table></center>
<p><a name=spider>:</a><b>spider</b> (<i>c</i>/5 orthogonally, p5) This is the smallest known <i>c</i>/5
<a href="#spaceship">spaceship</a>, and was found by David Bell in April 1997. Its side
<a href="#spark">sparks</a> have proved very useful in constructing <i>c</i>/5 <a href="lex_p.htm#puffer">puffers</a>,
including <a href="lex_r.htm#rake">rakes</a>. See also <a href="lex_p.htm#pps">PPS</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
......O...OOO.....OOO...O......
...OO.OOOOO.OO...OO.OOOOO.OO...
.O.OO.O.....O.O.O.O.....O.OO.O.
O...O.O...OOOOO.OOOOO...O.O...O
....OOO.....OO...OO.....OOO....
.O..O.OOO.............OOO.O..O.
...O.......................O...
</a></pre></td></tr></table></center>
<p><a name=spiral>:</a><b>spiral</b> (p1) Found by Robert Wainwright in 1971.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO....O
.O..OOO
.O.O...
..O.O..
...O.O.
OOO..O.
O....OO
</a></pre></td></tr></table></center>
<p><a name=spiralgrowth>:</a><b>spiral growth</b> A <a href="#selfconstructing">self-constructing</a> pattern built by Dave Greene in
August 2014 that uses four <a href="lex_u.htm#universalconstructor">universal constructors</a> (UCs) arranged in
a diamond to build four more UCs in a slightly larger diamond. This
was the first B3/S23 pattern that exhibited spiral growth. Much
smaller versions have now been constructed using the <a href="#singlechannel">single-channel</a>
construction toolkit.
<p><a name=splitter>:</a><b>splitter</b> A <a href="#signal">signal</a> <a href="lex_c.htm#converter">converter</a> that accepts a single input signal
and produces two or more output signals, usually of the same type as
the input. An older term for this is <a href="lex_f.htm#fanout">fanout</a>, or "fanout device".
<p>A sub-category is the <a href="lex_o.htm#onetime">one-time</a> splitter, which is not technically
a converter because it can only be used once. One-time splitters are
usually small <a href="lex_c.htm#constellation">constellations</a> that produce two or more <a href="lex_c.htm#clean">clean</a>
gliders when struck by a single glider. In other words, they are
multi-glider <a href="#seed">seeds</a>. These are important for constructing
self-destruct circuitry in <a href="#selfconstructing">self-constructing</a> spaceships.
<p><a name=spps>:</a><b>SPPS</b> (<i>c</i>/5 orthogonally, p30) The symmetric <a href="lex_p.htm#pps">PPS</a>. The original PPS
found by David Bell in May 1998. Compare <a href="lex_a.htm#apps">APPS</a>.
<p><a name=sqrtgun>:</a><b>sqrtgun</b> Any glider-emitting pattern which emits its nth glider at a
time asymptotically proportional to <i>n</i><sup>2</sup>. The first examples were
constructed by Dean Hickerson around 1991. See also
<a href="lex_q.htm#quadraticfilter">quadratic filter</a>, <a href="lex_e.htm#exponentialfilter">exponential filter</a>, <a href="lex_r.htm#recursivefilter">recursive filter</a>.
<p><a name=squaredance>:</a><b>squaredance</b> The p2 <a href="lex_a.htm#agar">agar</a> formed by tiling the plane with the
following pattern. Found by Don Woods in 1971.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO......
....OO..
..O....O
..O....O
....OO..
OO......
...O..O.
...O..O.
</a></pre></td></tr></table></center>
<p><a name=squirter>:</a><b>squirter</b> = <a href="lex_p.htm#pipsquirter">pipsquirter</a>
<p><a name=sspiral>:</a><b>S-spiral</b> = <a href="lex_b.htm#bigs">big S</a>
<p><a name=stable>:</a><b>stable</b> A pattern is said to be stable if it is a <a href="lex_p.htm#parent">parent</a> of itself.
See <a href="#stilllife">still life</a>.
<p><a name=stablepseudoheisenburp>:</a><b>stable pseudo-Heisenburp</b> A multi-stage <a href="lex_c.htm#converter">converter</a> constructed by
Dave Greene in January 2007, using a complex recipe found by Noam
Elkies to insert a signal into a <a href="lex_1.htm#a-2c3wire">2c/3 wire</a>. The wire's high
transmission speed allows a <a href="#signal">signal</a> from a <a href="lex_h.htm#highwayrobber">highway robber</a> to catch
up to a <a href="#salvo">salvo</a> of <a href="lex_g.htm#glider">gliders</a>. Ultimately the mechanism restores the
key glider -- which was destroyed by the highway robber in the first
stage of the converter -- to its exact original position in the
salvo.
<p>Much smaller stable pseudo-Heisenburp devices have since been
designed that use simple 0-degree glider <a href="#seed">seed</a> <a href="lex_c.htm#constellation">constellations</a>
instead of a 2<i>c</i>/3 wire.
<p>These patterns are labeled "pseudo-Heisenburp", because a true
<a href="lex_h.htm#heisenburpdevice">Heisenburp device</a> does not even temporarily damage or affect a
passing glider, yet can still produce an output <a href="#signal">signal</a> in response.
However, it is impossible to construct a <a href="#stable">stable</a> device that can
accomplish this for gliders. True stable Heisenburp devices are
possible with many other types of <a href="#spaceship">spaceships</a>, but not with gliders
which have no usable side <a href="#spark">sparks</a> to initiate an output signal.
<p><a name=stagedrecovery>:</a><b>staged recovery</b> A type of signal-processing <a href="lex_c.htm#circuit">circuit</a> where the
initial reaction between <a href="lex_c.htm#catalyst">catalysts</a> an incoming signal results in an
imperfect recovery -- a catalyst is damaged, destroyed completely as
in a <a href="lex_b.htm#bait">bait</a> reaction, or one or more objects are left behind that
must be cleaned up before the circuit can be reused. In any of these
three cases, output signals from the circuit must be used to complete
the cleanup. In theory the cleanup process might itself be <a href="lex_d.htm#dirty">dirty</a>,
requiring additional cleanup stages. In rare cases this might
theoretically allow the construction of special-purpose circuits with
a lower <a href="lex_r.htm#recoverytime">recovery time</a> than would otherwise be possible, but in
practice this kind of situation does not commonly arise.
<p>An example is the record-breaking (at the time) 487-tick reflector
constructed by Adam P. Goucher on 12 April 2009. 487 ticks was a
slight improvement over the repeat time of the <a href="#silverreflector">Silver reflector</a>.
The reflector featured a standard <a href="lex_c.htm#callahangtoh">Callahan G-to-H</a>, with cleanup by
an internal <a href="lex_d.htm#dirty">dirty</a> glider reflector found by Dieter Leithner many
years before -- which in turn was cleaned up by the usual ungainly
Herschel plumbing attached to the G-to-H's output. The dirty glider
reflector is not actually fully recovered before a second p487 signal
enters the full reflector. However, it has been repaired by the time
the internal reflector is actually needed again, so the cycle can be
successfully repeated at p487 instead of p497.
<p><a name=stairstephexomino>:</a><b>stairstep hexomino</b> (stabilizes at time 63) The following
<a href="lex_p.htm#predecessor">predecessor</a> of the <a href="lex_b.htm#blockade">blockade</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO
.OO.
OO..
</a></pre></td></tr></table></center>
<p><a name=stampcollection>:</a><b>stamp collection</b> A collection of <a href="lex_o.htm#oscillator">oscillators</a> (or perhaps other Life
objects) in a single diagram, displaying the exhibits much like
stamps in a stamp album. The classic examples are by Dean Hickerson
(see <a href="http://conwaylife.com/ref/DRH/stamps.html">http://conwaylife.com/ref/DRH/stamps.html</a>).
<p><a name=standardspaceship>:</a><b>standard spaceship</b> A <a href="lex_g.htm#glider">glider</a>, <a href="lex_l.htm#lwss">LWSS</a>, <a href="lex_m.htm#mwss">MWSS</a> or <a href="lex_h.htm#hwss">HWSS</a>. These have
all been known since 1970.
<p><a name=star>:</a><b>star</b> (p3) Found by Hartmut Holzwart, February 1993.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....O.....
....OOO....
..OOO.OOO..
..O.....O..
.OO.....OO.
OO.......OO
.OO.....OO.
..O.....O..
..OOO.OOO..
....OOO....
.....O.....
</a></pre></td></tr></table></center>
<p><a name=stargate>:</a><b>star gate</b> A device by Dieter Leithner (October 1996) for transporting
a <a href="lex_l.htm#lwss">LWSS</a> faster than the <a href="#speedoflight">speed of light</a>. The key reaction is the
<a href="lex_f.htm#fastforwardforcefield">Fast Forward Force Field</a>.
<p><a name=stator>:</a><b>stator</b> The cells of an <a href="lex_o.htm#oscillator">oscillator</a> that are always on. Compare
<a href="lex_r.htm#rotor">rotor</a>. (The stator is sometimes taken to include also some of
those cells which are always off.) The stator is divided into the
<a href="lex_b.htm#bushing">bushing</a> and the <a href="lex_c.htm#casing">casing</a>.
<p>By analogy, the cells of an <a href="lex_e.htm#eater">eater</a> that remain on even when the
eater is eating are considered to constitute the stator of the eater.
This is not always well-defined, because an eater can have more than
one eating action.
<p><a name=statorless>:</a><b>statorless</b> A statorless <a href="lex_o.htm#oscillator">oscillator</a> is one in which no cell is
permanently on - that is, the <a href="#stator">stator</a> is empty.
<p><a name=step>:</a><b>step</b> Another term for a <a href="lex_g.htm#generation">generation</a> or <a href="lex_t.htm#tick">tick</a>. This term is
particularly used in describing <a href="lex_c.htm#conduit">conduits</a>. For example, a 64-step
conduit is one through which the active object takes 64 generations
to pass.
<p><a name=stillater>:</a><b>stillater</b> (p3) Found by Robert Wainwright, September 1985. This is
one of only three essentially different p3 <a href="lex_o.htm#oscillator">oscillators</a> with only
three cells in the <a href="lex_r.htm#rotor">rotor</a>. The others are <a href="lex_1.htm#a-123">1-2-3</a> and <a href="lex_c.htm#cuphook">cuphook</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O....
..O.O.OO
..O.OO.O
OO......
.O.O.OO.
.O.O..O.
..O..O..
...OO...
</a></pre></td></tr></table></center>
<p><a name=stilllife>:</a><b>still life</b> Any <a href="#stable">stable</a> pattern, usually assumed to be finite and
nonempty. For the purposes of enumerating still lifes this
definition is, however, unsatisfactory because, for example, any pair
of blocks would count as a still life, and there would therefore be
an infinite number of 8-bit still lifes. For this reason a stricter
definition is often used, counting a stable pattern as a single still
life only if its <a href="lex_i.htm#island">islands</a> cannot be divided into two nonempty sets
both of which are stable in their own right. Compare
<a href="lex_p.htm#pseudostilllife">pseudo still life</a>.
<p>The requirement that a still life not be decomposable into two
separate stable patterns may seem a bit arbitrary, as it does not
rule out the possibility that it might be decomposable into more than
two. This is shown by the patterns in the following diagram, both
found by Gabriel Nivasch in July 2001. On the left is a 32-cell
pattern that can be broken down into three stable pieces but not into
two. On the right is a 34-cell pattern that can be broken down into
four stable pieces but not into two or three. (Note that, as a
consequence of the Four-Colour Theorem, four is as high as you need
ever go.) It is arguable that patterns like these ought not to be
considered as single still lifes.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
......OO...........OO.
..O.O..O......OO.O..O.
.O.OO.O.......O.OO.O..
.O....OO...........OO.
OO.OO.........O.OO...O
...OO.OO....OOO.OO.OO.
OO....O....O.......O..
.O.OO.O.....OOO.OO.O..
O..O.O........O.O.O...
OO....................
</a></pre></td></tr></table></center>
<p>Still lifes have been enumerated by Conway (4-7 bits), Robert
Wainwright (8-10 bits), Dave Buckingham (11-13 bits), Peter Raynham
(14 bits) and Mark Niemiec (15-24 bits). The resulting figures are
shown below. (These figures shouldn't be affected by the above
discussion of the strict definition of "still life", because it is
unlikely that there are any doubtful cases with much less than 32
cells.)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><font size=-1>
--------------
Bits    Number
--------------
 4           2
 5           1
 6           5
 7           4
 8           9
 9          10
10          25
11          46
12         121
13         240
14         619
15        1353
16        3286
17        7773
18       19044
19       45759
20      112243
21      273188
22      672172
23     1646147
24     4051711
25     9971377
26    24619307
27    60823008
28   150613157
29   373188952
30   926068847
31  2299616637
32  5716948683
--------------
</font></pre></td></tr></table></center>
All still lifes up to 18 bits have been shown to be
<a href="lex_g.htm#gliderconstructible">glider constructible</a>. It is an open question whether all still
lifes can be incrementally constructed using glider collisions. For
the subset of small still lifes that have been found to be especially
useful in <a href="#selfconstructing">self-constructing</a> circuitry, see also <a href="#spartan">Spartan</a>.
<p><a name=stilllifetagalong>:</a><b>still life tagalong</b> A <a href="lex_t.htm#tagalong">tagalong</a> which takes the form of a
<a href="#stilllife">still life</a> in at least one <a href="lex_p.htm#phase">phase</a>. An example is shown below.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO...............
.OO.OO.............
..OOOO.............
...OO..............
...................
...OOOOO...........
..OOOOOOO..........
.OO.OOOOO..........
..OO...............
...................
........O.O.....OO.
......O....O...O..O
......OO.....O.O..O
.O..O..OOOO.O...OO.
O.......OO.........
O...O..............
OOOO...............
</a></pre></td></tr></table></center>
<p><a name=stream>:</a><b>stream</b> A line of identical objects (usually <a href="#spaceship">spaceships</a>), each of
which is moving in the same direction, this direction being parallel
to the line. Compare with <a href="lex_w.htm#wave">wave</a>.
<p><a name=stretcher>:</a><b>stretcher</b> Any pattern that grows by stretching a <a href="lex_w.htm#wick">wick</a> or <a href="lex_a.htm#agar">agar</a>.
See <a href="lex_w.htm#wickstretcher">wickstretcher</a> and <a href="#spacefiller">spacefiller</a>.
<p><a name=strictvolatility>:</a><b>strict volatility</b> A term suggested by Noam Elkies in August 1998 for
the proportion of cells involved in a period <i>n</i> <a href="lex_o.htm#oscillator">oscillator</a> which
themselves oscillate with period <i>n</i>. For prime <i>n</i> this is the same as
the ordinary <a href="lex_v.htm#volatility">volatility</a>. Periods with known strictly-volatile
oscillators include 1, 2, 3, 5, 6, 8, 13, 15, 22, 30, 33, and 177.
Examples include <a href="lex_f.htm#figure8">figure-8</a>, <a href="lex_k.htm#koksgalaxy">Kok's galaxy</a>, <a href="#smiley">smiley</a>, and
<a href="lex_p.htm#pentadecathlon">pentadecathlon</a>. A composite example is the following p22, found by
Nicolay Beluchenko on 4 March 2009:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...........OO...
..........O.O...
..O.....O....O..
OO.OO..OO.O.O...
O.......O...O...
.O.O............
................
..OOO.......O...
...O.......OOO..
................
............O.O.
...O...O.......O
...O.O.OO..OO.OO
..O....O.....O..
...O.O..........
...OO...........
</a></pre></td></tr></table></center>
<p><a name=superbeehive>:</a><b>super beehive</b> = <a href="lex_h.htm#honeycomb">honeycomb</a>
<p><a name=superfountain>:</a><b>superfountain</b> (p4) A p4 <a href="#sparker">sparker</a> which produces a 1-cell spark that
is separated from the rest of the oscillator by two clear rows of
cells. The first superfountain was found by Noam Elkies in February
1998. In January 2006 Nicolay Beluchenko found the much smaller one
shown below. See also <a href="lex_f.htm#fountain">fountain</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...........O...........
.......................
.......................
.....O..O.....O..O.....
...OO..O.OOOOO.O..OO...
.....O...........O.....
...O.OO.........OO.O...
.O.O...OOO...OOO...O.O.
OOO.O.............O.OOO
..........O.O..........
....OOO...O.O...OOO....
....O..O...O...O..O....
...OOOO..O.O.O..OOOO...
...OO..OOO.O.OOO..OO...
..O...O...O.O...O...O..
...O..O.O.O.O.O.O..O...
....O.O.OO...OO.O.O....
.....O...........O.....
</a></pre></td></tr></table></center>
<p><a name=superlineargrowth>:</a><b>superlinear growth</b> Growth faster than any rate proportional to T,
where T is the number of ticks that a pattern has been run. This
term usually applies to a pattern's population growth -- e.g.,
<a href="lex_b.htm#breeder">breeders</a>' and <a href="#spacefiller">spacefillers</a>' population asymptotically grows
faster than any linear-growth pattern -- rather than diametric growth
or bounding-box growth. It may also be used to describe the rate of
increase in the number of subpatterns present in a pattern, such as
when describing a <a href="lex_r.htm#replicator">replicator</a>'s rate of reproduction. Due to limits
enforced by the <a href="#speedoflight">speed of light</a>, no pattern's population can grow at
an asymptotic rate faster than <a href="lex_q.htm#quadraticgrowth">quadratic growth</a>.
<p><a name=superstring>:</a><b>superstring</b> An infinite orthogonal row of cells stabilized on one
side so that it moves at the <a href="#speedoflight">speed of light</a>, often leaving debris
behind. The first examples were found in 1971 by Edward Fitzgerald
and Robert Wainwright. Superstrings were studied extensively by
Peter Rott during 1992-1994, and he found examples with many
different periods. (But no odd periods. In August 1998 Stephen
Silver proved that odd-period superstrings are impossible.)
<p>Sometimes a finite section of a superstring can be made to run
between two tracks ("waveguides"). This gives a <a href="lex_f.htm#fuse">fuse</a> which can be
made as wide as desired. The first example was found by Tony
Smithurst and uses <a href="lex_t.htm#tub">tubs</a>. (This is shown below. The superstring
itself is p4 with a repeating section of width 9 producing one
blinker per period and was one of those discovered in 1971. With the
track in place, however, the period is 8. This track can also be
used with a number of other superstrings.) Shortly after seeing this
example, in March 1997 Peter Rott found another superstring track
consisting of <a href="lex_b.htm#boat">boats</a>. At present these are the only two waveguides
known. Both are destroyed by the superstring as it moves along - it
would be interesting to find one that remains intact.
<p>See <a href="lex_t.htm#titanictoroidaltraveler">titanic toroidal traveler</a> for another example of a
superstring.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO..........................................................
O..O...O...O...O...O...O...O...O...O...O...O...O...O...O...O.
....O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O
O..O...O...O...O...O...O...O...O...O...O...O...O...O...O...O.
.OOO.........................................................
..OO.........................................................
..OO.........................................................
...O.........................................................
...O.........................................................
...O.........................................................
...O.........................................................
...O.........................................................
...O.........................................................
...O.........................................................
..OO.........................................................
..OO.........................................................
.OOO.........................................................
O..O...O...O...O...O...O...O...O...O...O...O...O...O...O...O.
....O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O.O
O..O...O...O...O...O...O...O...O...O...O...O...O...O...O...O.
.OO..........................................................
</a></pre></td></tr></table></center>
<p><a name=support>:</a><b>support</b> Those parts of an object which are only present in order to
keep the rest of the object (such an <a href="lex_e.htm#engine">engine</a> or an edge <a href="#spark">spark</a>)
working correctly. These can be components of the object, or else
accompanying objects used to <a href="lex_p.htm#perturb">perturb</a> the object. In many cases
there is a wide variation of support possible for an engine. The
<a href="lex_a.htm#arm">arms</a> in many <a href="lex_p.htm#puffer">puffers</a> are an example of support.
<p><a name=surprise>:</a><b>surprise</b> (p3) Found by Dave Buckingham, November 1972.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O....OO
...OOO..O.
.OO...O.O.
O..OO.O.OO
.O......O.
OO.O.OO..O
.O.O...OO.
.O..OOO...
OO....O...
</a></pre></td></tr></table></center>
<p><a name=swan>:</a><b>swan</b> (<i>c</i>/4 diagonally, p4) A diagonal <a href="#spaceship">spaceship</a> producing some
useful sparks. Found by Tim Coe in February 1996.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O..........OO..........
OOOOO......OO...........
O..OO........O.......OO.
..OO.O.....OO......OOO.O
...........OO...O.OO....
.....O.O......OO........
..........OOO.O....O....
.......OOO...O....O.....
........O.......O.......
........O......O........
........................
...........O............
</a></pre></td></tr></table></center>
<p><a name=swimmer>:</a><b>swimmer</b> = <a href="#switchengine">switch engine</a>.
<p><a name=swimmerlane>:</a><b>swimmer lane</b> = <a href="#switchenginechannel">switch engine channel</a>.
<p><a name=switch>:</a><b>switch</b> A signal-carrying <a href="lex_c.htm#circuit">circuit</a> that can be modified so that it
cleanly absorbs any future signals instead of allowing them to pass.
Optionally there may be a separate mechanism to restore the circuit
to its original function.
<p>In the following example, a glider from the northeast (shown) will
perform a simple <a href="lex_b.htm#blockpull">block pull</a> that switches off an <a href="lex_f.htm#f166">F166</a> conduit, so
that any future Herschel inputs will be cleanly absorbed. A glider
from the southwest (also shown) can restore the block to its original
position.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO........................................................
..O........................................................
.O.........................................................
.OO...............................................OO.......
...................................................O.......
..................................................O........
..................................................OO.......
..................................O........................
..................................O.O......................
O...OO............................OO.......................
OO..OO.....................................................
.OO......................OO................................
OO.......................OO..........................OO....
.....................................................OO....
...........................................................
...........................................................
...........................................................
...........................................................
.............OO............................................
............O.O........OO..................................
..............O.......O.O..................................
......................O....................................
.....................OO.........................OO.........
................................................OO.........
...........................................................
...........................................................
..................................OO.....................OO
...................................O......................O
................................OOO....................OOO.
................................O......................O...
............................................OO.............
............................................O..............
.............................................OOO...........
...............................................O...........
</a></pre></td></tr></table></center>
<p><a name=switchablegun>:</a><b>switchable gun</b> A <a href="lex_g.htm#gun">gun</a> that includes a mechanism to turn the output
stream off and on with simple signals, often gliders. A small
example is Dieter Leithner's switchable LWSS gun from July 8, 1995.
The ON signal enters from the northeast, and the OFF signal from the
northwest:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.................OO...........................................
.................O..O.........................................
..............................................................
.....................O........................................
..............................................................
.O.................OO.........................................
..O...............O...........................................
OOO...........................................................
..............................................................
...............OO...OO........................................
...............OO...OO........................................
................OOOOO........................O................
.................O.O........................O.................
............................................OOO...............
.................OOO..........................................
....................................O.O.......................
....................................O...O.....................
........................................O.......O.............
..........................OO........O....O....OOOO............
..........................OO............O....O.O.OO...........
.....................O..............O...O...O..O.OOO........OO
......................O.............O.O......O.O.OO.........OO
....................OOO.......................OOOO............
................O...............................O.............
...............OOO...................O........................
..............OOOOO..................O.O.....O................
.............OO...OO.................OO....OOO................
..........................................O...................
.............................O............OO..................
...........................O..O.........OOO...................
...............OOO..........OOO.........OO....................
...............OOO..........O..........O.O....................
.............................O................................
.............................OOO..............................
................OO............................................
................OO............................................
.....................O........................................
...................OOOO......OO..OO...........................
.............OO...O.O.OO.....OOOO.O..O.O......................
.............OO..O..O.OOO.....OO.O...O...O....................
..................O.O.OO....O............O.....OO.............
...................OOOO..............O....O....OO.............
.....................O...................O....................
.....................................O...O....................
.....................................O.O......................
</a></pre></td></tr></table></center>
<p><a name=switchengine>:</a><b>switch engine</b> The following pattern, which in itself is unstable, but
which can be used to make <i>c</i>/12 diagonal <a href="lex_p.htm#puffer">puffers</a> and <a href="#spaceship">spaceships</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O.O..
O.....
.O..O.
...OOO
</a></pre></td></tr></table></center>
<p>The switch engine was discovered by Charles Corderman in 1971. He
also found the two basic types of stabilized switch engine: a p288
block-laying type (the more common of the two) and p384
glider-producing type. These two puffers are the most <a href="lex_n.htm#natural">natural</a>
infinite growth patterns in Life, being the only ones ever seen to
occur from random starting patterns.
<p>Patterns giving rise to block-laying switch engines can be seen
under <a href="lex_i.htm#infinitegrowth">infinite growth</a>, and one giving rise to a glider-producing
switch engine is shown under <a href="lex_t.htm#timebomb">time bomb</a>. See also <a href="lex_c.htm#cordership">Cordership</a> and
<a href="lex_a.htm#ark">ark</a>.
<p><a name=switchenginechannel>:</a><b>switch engine channel</b> Two lines of <a href="lex_b.htm#boat">boats</a> (or other suitable
objects, such as <a href="lex_t.htm#tubwithtail">tub with tails</a>) arranged so that a <a href="#switchengine">switch engine</a>
can travel between them, in the following manner:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..............OO................
.............O.O................
..............O.................
................................
................................
................................
................................
................................
.......OOO............OO........
........O..O.........O.O........
............O.........O.........
.........O.O....................
................................
................................
................................
................................
..............................OO
.............................O.O
..............................O.
................................
................................
.O..............................
O.O.............................
OO..............................
................................
................................
................................
................................
................................
.........O......................
........O.O.....................
........OO......................
</a></pre></td></tr></table></center>
David Bell used this in June 2005 to construct a "bobsled"
oscillator, in which a switch engine <a href="lex_f.htm#factory">factory</a> sends switch engines
down a channel, at the other end of which they are deleted.
<p><a name=switchenginechute>:</a><b>switch engine chute</b> = <a href="#switchenginechannel">switch engine channel</a>
<p><a name=switchenginepingpong>:</a><b>switch-engine ping-pong</b> A very large (210515x183739)
<a href="lex_q.htm#quadraticgrowth">quadratic growth</a> pattern found by Michael Simkin in October 2014.
Currently this is the smallest starting population (23 cells) known
to result in a quadratic population growth rate.
<p><a name=synthesis>:</a><b>synthesis</b> = <a href="lex_g.htm#glidersynthesis">glider synthesis</a>
<p><a name=syringe>:</a><b>syringe</b> A small stable glider-to-Herschel converter found by Tanner
Jacobi in March 2015. A second glider can safely follow the first
any time after 78 ticks, but <a href="lex_o.htm#overclocking">overclocking</a> also allows the syringe
to work at a <a href="lex_r.htm#repeattime">repeat time</a> of 74 or 75 ticks. If followed by a
<a href="lex_d.htm#dependentconduit">dependent conduit</a> a simple <a href="lex_e.htm#eater2">eater2</a> can be used instead of the
large <a href="lex_w.htm#weld">welded</a> shown here. A <a href="lex_g.htm#ghostherschel">ghost Herschel</a> marks the output
location.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....O.............................
.....O............................
...OOO............................
..................O...............
................OOO...............
...............O..................
...............OO.................
OO................................
.O................................
.O.OO.............................
..O..O.......................O....
...OO........................O....
..................OO.........OOO..
..................OO...........O..
..................................
..................................
..................................
...........................O...OO.
..........................O.O...O.
.........................O.O...O..
.....................OO.O.O...O...
.....................OO.O..OOOO.O.
.........................O.O...O.O
.....................OO.OO..O..O.O
......................O.O..OO...O.
..........OO..........O.O.........
..........OO...........O..........
</a></pre></td></tr></table></center>
<hr>
<center>
<font size=-1><b>
<a href="lex_1.htm">1-9</a> |
<a href="lex_a.htm">A</a> |
<a href="lex_b.htm">B</a> |
<a href="lex_c.htm">C</a> |
<a href="lex_d.htm">D</a> |
<a href="lex_e.htm">E</a> |
<a href="lex_f.htm">F</a> |
<a href="lex_g.htm">G</a> |
<a href="lex_h.htm">H</a> |
<a href="lex_i.htm">I</a> |
<a href="lex_j.htm">J</a> |
<a href="lex_k.htm">K</a> |
<a href="lex_l.htm">L</a> |
<a href="lex_m.htm">M</a> |
<a href="lex_n.htm">N</a> |
<a href="lex_o.htm">O</a> |
<a href="lex_p.htm">P</a> |
<a href="lex_q.htm">Q</a> |
<a href="lex_r.htm">R</a> |
<a href="lex_s.htm">S</a> |
<a href="lex_t.htm">T</a> |
<a href="lex_u.htm">U</a> |
<a href="lex_v.htm">V</a> |
<a href="lex_w.htm">W</a> |
<a href="lex_x.htm">X</a> |
<a href="lex_y.htm">Y</a> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
</body>

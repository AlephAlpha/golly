<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<title>Life Lexicon (C)</title>
<meta name="author" content="Stephen A. Silver">
<meta name="description" content="Part of Stephen Silver's Life Lexicon.">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<link href="lifelex.css" rel="stylesheet" type="text/css">
<link rel="begin" type="text/html" href="lex.htm" title="Life Lexicon">
<base target="_top">
</head>
<body bgcolor="#FFFFCE">

<center><A HREF="lex.htm">Introduction</A> | <A HREF="lex_bib.htm">Bibliography</A></center></center>
<hr>
<center>
<font size=-1><b>
<A HREF="lex_1.htm">1-9</A> |
<A HREF="lex_a.htm">A</A> |
<A HREF="lex_b.htm">B</A> |
<A HREF="lex_c.htm">C</A> |
<A HREF="lex_d.htm">D</A> |
<A HREF="lex_e.htm">E</A> |
<A HREF="lex_f.htm">F</A> |
<A HREF="lex_g.htm">G</A> |
<A HREF="lex_h.htm">H</A> |
<A HREF="lex_i.htm">I</A> |
<A HREF="lex_j.htm">J</A> |
<A HREF="lex_k.htm">K</A> |
<A HREF="lex_l.htm">L</A> |
<A HREF="lex_m.htm">M</A> |
<A HREF="lex_n.htm">N</A> |
<A HREF="lex_o.htm">O</A> |
<A HREF="lex_p.htm">P</A> |
<A HREF="lex_q.htm">Q</A> |
<A HREF="lex_r.htm">R</A> |
<A HREF="lex_s.htm">S</A> |
<A HREF="lex_t.htm">T</A> |
<A HREF="lex_u.htm">U</A> |
<A HREF="lex_v.htm">V</A> |
<A HREF="lex_w.htm">W</A> |
<A HREF="lex_x.htm">X</A> |
<A HREF="lex_y.htm">Y</A> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
<p><a name=c>:</a><b>c</b> = <a href="lex_s.htm#speedoflight">speed of light</a>
<p><a name=c10spaceship>:</a><b>c/10 spaceship</b> A <a href="lex_s.htm#spaceship">spaceship</a> travelling at one tenth of the
<a href="lex_s.htm#speedoflight">speed of light</a>. The first such spaceship to be discovered was the
orthogonally travelling <a href="#copperhead">copperhead</a>, found by 'zdr' on 5 March 2016.
Simon Ekstr&ouml;m found the related <a href="lex_f.htm#fireship">fireship</a> two weeks later. A
<a href="#caterloopillar">Caterloopillar</a> can theoretically be configured to move at <i>c</i>/10, but
there are technical difficulties with speeds of the form 4<i>n</i>+2, and as
of June 2018 this has not been done in practice.
<p><a name=c12spaceship>:</a><b>c/12 spaceship</b> A <a href="lex_s.htm#spaceship">spaceship</a> travelling at one twelfth of the
<a href="lex_s.htm#speedoflight">speed of light</a>. The only diagonal spaceships that are currently
known to move at this speed are the <a href="#cordership">Corderships</a>. An orthogonal
<a href="#caterloopillar">Caterloopillar</a> has been configured to move at <i>c</i>/12.
<p><a name=c2spaceship>:</a><b>c/2 spaceship</b> A <a href="lex_s.htm#spaceship">spaceship</a> travelling at half the <a href="lex_s.htm#speedoflight">speed of light</a>.
Such spaceships necessarily move orthogonally. The first to be
discovered was the <a href="lex_l.htm#lwss">LWSS</a>. For other examples see <a href="#coeship">Coe ship</a>,
<a href="lex_e.htm#ecologist">ecologist</a>, <a href="lex_f.htm#flotilla">flotilla</a>, <a href="lex_h.htm#hammerhead">hammerhead</a>, <a href="lex_h.htm#hivenudger">hivenudger</a>, <a href="lex_h.htm#hwss">HWSS</a>, <a href="lex_m.htm#mwss">MWSS</a>,
<a href="lex_p.htm#puffertrain">puffer train</a>, <a href="lex_p.htm#puffsuppressor">puff suppressor</a>, <a href="lex_p.htm#pushalong">pushalong</a>, <a href="lex_s.htm#schickengine">Schick engine</a>,
<a href="lex_s.htm#sidecar">sidecar</a>, <a href="lex_s.htm#stilllifetagalong">still life tagalong</a> and <a href="lex_x.htm#x66">x66</a>.
<p><a name=c3spaceship>:</a><b>c/3 spaceship</b> A <a href="lex_s.htm#spaceship">spaceship</a> travelling at one third of the
<a href="lex_s.htm#speedoflight">speed of light</a>. All known <i>c</i>/3 spaceships travel orthogonally. The
first was <a href="lex_1.htm#a-25p3h1v01">25P3H1V0.1</a>, found in August 1989 by Dean Hickerson. For
further examples see <a href="lex_b.htm#brain">brain</a>, <a href="lex_d.htm#dart">dart</a>, <a href="lex_e.htm#edgerepairspaceship">edge-repair spaceship</a>, <a href="lex_f.htm#fly">fly</a>,
<a href="lex_t.htm#turtle">turtle</a> and <a href="lex_w.htm#wasp">wasp</a>.
<p><a name=c4spaceship>:</a><b>c/4 spaceship</b> A <a href="lex_s.htm#spaceship">spaceship</a> travelling at one quarter of the
<a href="lex_s.htm#speedoflight">speed of light</a>. The first such spaceship to be discovered was, of
course, the <a href="lex_g.htm#glider">glider</a>, and this remained the only known example until
December 1989, when Dean Hickerson found the first orthogonal
example, <a href="lex_1.htm#a-119p4h1v0">119P4H1V0</a>, and also a new diagonal example (the
<a href="lex_b.htm#bigglider">big glider</a>). For other examples see <a href="lex_b.htm#b29">B29</a>, <a href="#canadagoose">Canada goose</a>, <a href="#crane">crane</a>,
<a href="lex_e.htm#enterprise">Enterprise</a>, <a href="lex_e.htm#edgerepairspaceship">edge-repair spaceship</a> (third pattern),
<a href="lex_n.htm#nonmonotonic">non-monotonic</a>, <a href="lex_o.htm#orion">Orion</a>, <a href="lex_q.htm#quarter">quarter</a>, <a href="lex_s.htm#sparky">sparky</a>, <a href="lex_s.htm#swan">swan</a> and <a href="lex_t.htm#tagalong">tagalong</a>.
It is known that <i>c</i>/4 is the fastest possible speed for a (45-degree)
diagonal spaceship.
<p><a name=c5spaceship>:</a><b>c/5 spaceship</b> A <a href="lex_s.htm#spaceship">spaceship</a> travelling at one fifth of the
<a href="lex_s.htm#speedoflight">speed of light</a>. The first such spaceship to be discovered was the
<a href="lex_s.htm#snail">snail</a>, found by Tim Coe in January 1996. The first diagonally
moving example, <a href="lex_1.htm#a-295p5h1v1">295P5H1V1</a>, was found by Jason Summers in November
2000. For other <i>c</i>/5 ships see <a href="lex_1.htm#a-58p5h1v1">58P5H1V1</a>, <a href="lex_1.htm#a-67p5h1v1">67P5H1V1</a>, <a href="lex_1.htm#a-86p5h1v1">86P5H1V1</a> and
<a href="lex_s.htm#spider">spider</a>. A <a href="#caterloopillar">Caterloopillar</a> has also been configured to move at
<i>c</i>/5.
<p><a name=c6spaceship>:</a><b>c/6 spaceship</b> A <a href="lex_s.htm#spaceship">spaceship</a> travelling at one sixth of the
<a href="lex_s.htm#speedoflight">speed of light</a>. The first such spaceship to be discovered was the
<a href="lex_d.htm#dragon">dragon</a>, found by Paul Tooke in April 2000. The first diagonally
moving example was the <a href="lex_s.htm#seal">seal</a>, found by Nicolay Beluchenko in
September 2005. Another orthogonal <i>c</i>/6 spaceship, found by Paul
Tooke in March 2006, is shown below. For the smallest known <i>c</i>/6
spaceship see <a href="lex_1.htm#a-56p6h1v0">56P6H1V0</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..O..............O..................................O.....
O..O..OOO.......O.OOOO...............OO...........OO.O....
O..O............OOO.O.O.........O.....O.......O...O.......
.O.O..O.....................OOO..O.O.OOO.....O.O.O....O...
..OO......O....O................OOOOOO..O..O...O...O..O...
.O.O...OO.....O...OO......OO.OO..O..OO..O.O.OO..O.........
..O.....O.OO..O...OO......OO....O.O.O..O..O.O.O......OO..O
..O....OOO..O.........OOO.......OOO.O.OO.....O.......OOO.O
............OOOOOOOOO...O........OO.OOO...OOOO.........O.O
..........................................................
............OOOOOOOOO...O........OO.OOO...OOOO.........O.O
..O....OOO..O.........OOO.......OOO.O.OO.....O.......OOO.O
..O.....O.OO..O...OO......OO....O.O.O..O..O.O.O......OO..O
.O.O...OO.....O...OO......OO.OO..O..OO..O.O.OO..O.........
..OO......O....O................OOOOOO..O..O...O...O..O...
.O.O..O.....................OOO..O.O.OOO.....O.O.O....O...
O..O............OOO.O.O.........O.....O.......O...O.......
O..O..OOO.......O.OOOO...............OO...........OO.O....
..O..............O..................................O.....
</a></pre></td></tr></table></center>
A <a href="#caterloopillar">Caterloopillar</a> can theoretically be configured to move at <i>c</i>/6,
but there are technical difficulties with speeds of the form 4<i>n</i>+2,
and as of July 2018 this has not been done in practice.
<p><a name=c7spaceship>:</a><b>c/7 spaceship</b> A <a href="lex_s.htm#spaceship">spaceship</a> travelling at one seventh of the
<a href="lex_s.htm#speedoflight">speed of light</a>. The first such spaceship to be discovered was the
diagonally travelling <a href="lex_l.htm#lobster">lobster</a>, found by Matthias Merzenich in
August 2011. The first known orthogonal <i>c</i>/7 spaceship was the
<a href="lex_l.htm#loafer">loafer</a>, discovered by Josh Ball in February 2013. A
<a href="#caterloopillar">Caterloopillar</a> has been configured to move at <i>c</i>/7.
<p><a name=ca>:</a><b>CA</b> = <a href="#cellularautomaton">cellular automaton</a>
<p><a name=cabertosser>:</a><b>caber tosser</b> Any pattern whose <a href="lex_p.htm#population">population</a> is asymptotic to <i>c</i>.log(<i>t</i>)
for some constant <i>c</i>, and which contains a <a href="lex_g.htm#glider">glider</a> (or other
<a href="lex_s.htm#spaceship">spaceship</a>) bouncing between a slower receding spaceship and a fixed
<a href="lex_r.htm#reflector">reflector</a> which emits a spaceship (in addition to the reflected
one) whenever the bouncing spaceship hits it.
<p>As the receding spaceship gets further away the bouncing spaceship
takes longer to complete each cycle, and so the extra spaceships
emitted by the reflector are produced at increasingly large
intervals. More precisely, if <i>v</i> is the speed of the bouncing
spaceship and <i>u</i> the speed of the receding spaceship, then each
interval is (<i>v</i>+<i>u</i>)/(<i>v</i>-<i>u</i>) times as long as the previous one. The
population at time <i>t</i> is therefore <i>n</i>.log(<i>t</i>)/log((<i>v</i>+<i>u</i>)/(<i>v</i>-<i>u</i>)) + O(1),
where <i>n</i> is the population of one of the extra spaceships (assumed
constant).
<p>The first caber tosser was built by Dean Hickerson in May 1991.
<p><a name=callahangtoh>:</a><b>Callahan G-to-H</b> A stable <a href="lex_g.htm#gliderreflector">glider reflector</a> and glider-to-Herschel
<a href="#converter">converter</a> discovered by Paul Callahan in November 1998. Its
recovery time is 575 ticks. The initial stage converts two gliders
into a Herschel. A <a href="lex_g.htm#ghostherschel">ghost Herschel</a> in the pattern below marks the
output location:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....O.........O...................
....OOO.....OOO...................
.O.....O...O......................
..O...OO...OO.....................
OOO...............................
.........O........................
........O.O.......................
........O.O.......................
.........O........................
...............................O..
...............................O..
....................OO.........OOO
..............OO....OO...........O
........OO...OO...................
.......O..O....O..................
..OO....OO........................
.O.O..............................
.O................................
OO................................
..........OO......................
..........O.......................
...........OOO....................
.............O....................
</a></pre></td></tr></table></center>
<p>The glider from the southeast can be supplied by an <a href="lex_f.htm#fx77">Fx77</a> + <a href="lex_l.htm#l112">L112</a>
+ Fx77 Herschel track, or by reflecting the output Herschel's <a href="lex_f.htm#fng">FNG</a>
as in the <a href="lex_p.htm#p8gtoh">p8 G-to-H</a>. See also <a href="lex_s.htm#silverreflector">Silver reflector</a>, <a href="lex_s.htm#silvergtoh">Silver G-to-H</a>.
<p><a name=cambridgepulsarcp485672>:</a><b>Cambridge pulsar CP 48-56-72</b> = <a href="lex_p.htm#pulsar">pulsar</a> (The numbers refer to the
populations of the three <a href="lex_p.htm#phase">phases</a>. The Life pulsar was indeed
discovered at Cambridge, like the first real pulsar a few years
earlier.)
<p><a name=canadagoose>:</a><b>Canada goose</b> (<i>c</i>/4 diagonally, p4) Found by Jason Summers, January
1999. It consists of a <a href="lex_g.htm#glider">glider</a> plus a <a href="lex_t.htm#tagalong">tagalong</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOO..........
O.........OO.
.O......OOO.O
...OO..OO....
....O........
........O....
....OO...O...
...O.O.OO....
...O.O..O.OO.
..O....OO....
..OO.........
..OO.........
</a></pre></td></tr></table></center>
At the time of its discovery the Canada goose was the smallest known
diagonal <a href="lex_s.htm#spaceship">spaceship</a> other than the glider, but this record has since
been beaten, first by the second spaceship shown under <a href="lex_o.htm#orion">Orion</a>, and
more recently by <a href="lex_q.htm#quarter">quarter</a>.
<p><a name=candelabra>:</a><b>candelabra</b> (p3) By Charles Trawick. See also the note under <a href="#cap">cap</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO....OO....
.O..O......O..O.
O.O.O......O.O.O
.O..O.OOOO.O..O.
....O.O..O.O....
.....O....O.....
</a></pre></td></tr></table></center>
<p><a name=candlefrobra>:</a><b>candlefrobra</b> (p3) Found by Robert Wainwright in November 1984.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....O....
.O.OO.O.OO
O.O...O.OO
.O....O...
.....OO...
</a></pre></td></tr></table></center>
The following diagram shows that a pair of these can act in some ways
like <a href="lex_k.htm#killertoads">killer toads</a>. See also <a href="lex_s.htm#snacker">snacker</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....O...........O....
OO.O.OO.O...O.OO.O.OO
OO.O...O.O.O.O...O.OO
...O....O...O....O...
...OO...........OO...
.....................
.....................
.........OOO.........
.........O..O........
.........O...........
.........O...O.......
.........O...O.......
.........O...........
..........O.O........
</a></pre></td></tr></table></center>
<p><a name=canoe>:</a><b>canoe</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...OO
....O
...O.
O.O..
OO...
</a></pre></td></tr></table></center>
<p><a name=cap>:</a><b>cap</b> The following <a href="lex_i.htm#inductioncoil">induction coil</a>. It can also easily be stabilized
to form a p3 oscillator. See <a href="#candelabra">candelabra</a> for a slight variation on
this.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO.
O..O
OOOO
</a></pre></td></tr></table></center>
<p><a name=carnivalshuttle>:</a><b>carnival shuttle</b> (p12) Found by Robert Wainwright in September 1984
(using <a href="lex_m.htm#mwemulator">MW emulators</a> at the end, instead of the <a href="lex_m.htm#monogram">monograms</a> shown
here).
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.................................O...O
OO...OO..........................OOOOO
.O.O.O...O..O......OO...O..O.......O..
.OO.OO..OO...OO....OO..OO...OO....O.O.
.O.O.O...O..O......OO...O..O.......O..
OO...OO..........................OOOOO
.................................O...O
</a></pre></td></tr></table></center>
<p><a name=carrier>:</a><b>carrier</b> = <a href="lex_a.htm#aircraftcarrier">aircraft carrier</a>
<p><a name=casing>:</a><b>casing</b> That part of the <a href="lex_s.htm#stator">stator</a> of an <a href="lex_o.htm#oscillator">oscillator</a> which is not
adjacent to the <a href="lex_r.htm#rotor">rotor</a>. Compare <a href="lex_b.htm#bushing">bushing</a>.
<p><a name=catacryst>:</a><b>catacryst</b> A 58-cell <a href="lex_q.htm#quadraticgrowth">quadratic growth</a> pattern found by Nick Gotts in
April 2000. This was formerly the smallest such pattern known, but
has since been superseded by the related <a href="lex_m.htm#metacatacryst">metacatacryst</a>. See
<a href="lex_s.htm#switchenginepingpong">switch-engine ping-pong</a> for the lowest-population
<a href="lex_s.htm#superlineargrowth">superlinear growth</a> pattern as of July 2018, along with a list of
the record-holders.
<p>The catacryst consists of three <a href="lex_a.htm#ark">arks</a> plus a glider-producing
<a href="lex_s.htm#switchengine">switch engine</a>. It produces a block-laying switch engine every
47616 generations. Each block-laying switch engine has only a finite
life, but the length of this life increases linearly with each new
switch engine, so that the pattern overall grows quadratically, as an
unusual type of MMS <a href="lex_b.htm#breeder">breeder</a>.
<p><a name=catagolue>:</a><b>Catagolue</b> An online database of objects in Conway's Game of Life and
similar cellular automata, set up by Adam P. Goucher in 2015 at
<a href="http://catagolue.appspot.com">http://catagolue.appspot.com</a>. It gathers data from a distributed
search of random initial configurations and records the eventual
decay products. Within a year of operation it had completed a
<a href="#census">census</a> of the <a href="lex_a.htm#ash">ash</a> objects from over two trillion asymmetric 16x16
<a href="lex_s.htm#soup">soups</a>. As of June 2018, well over two hundred trillion ash objects
have been counted, from over a trillion asymmetric soups.
<p>It is often possible to use Catagolue search results find
equivalent <a href="lex_g.htm#glidersynthesis">glider synthesis</a> recipes for selected parts of
long-running active reactions. These random <a href="lex_s.htm#soup">soup</a> searches have
made it possible to find efficient construction methods for thousands
of increasingly rare <a href="lex_s.htm#stilllife">still lifes</a> and <a href="lex_o.htm#oscillator">oscillators</a>, and the
occasional <a href="lex_p.htm#puffer">puffer</a> or <a href="lex_s.htm#spaceship">spaceship</a>. In many of these cases a
<a href="lex_g.htm#glidersynthesis">glider synthesis</a> was previously very difficult or unknown.
<p><a name=catalyst>:</a><b>catalyst</b> An object that participates in a reaction but emerges from
it unharmed. All <a href="lex_e.htm#eater">eaters</a> are catalysts. Some small <a href="lex_s.htm#stilllife">still lifes</a>
can act as catalysts in some situations, such as the <a href="lex_b.htm#block">block</a>, <a href="lex_s.htm#ship">ship</a>,
and <a href="lex_t.htm#tub">tub</a>. The still lifes and oscillators that form a <a href="#conduit">conduit</a> are
examples of catalysts.
<p>A relatively rare form of catalysis occurs in a
<a href="lex_t.htm#transparentdebriseffect">transparent debris effect</a>, where the catalyst in question is
completely destroyed and then rebuilt. The term is also sometimes
used for a modification of an active reaction in a <a href="lex_r.htm#rake">rake</a> by passing
<a href="lex_s.htm#spaceship">spaceships</a>.
<p><a name=catchandthrow>:</a><b>catch and throw</b> A <a href="lex_t.htm#technology">technology</a> used (e.g., in the <a href="#caterpillar">Caterpillar</a>) to
adjust the timing of a glider by turning it into a stationary object
using one interaction, and then later restoring it using a second
interaction. The interactions are caused by passing objects which
are not otherwise affected. The direction of the glider is not
usually changed.
<p>Here is an example where a glider is turned into a <a href="lex_b.htm#boat">boat</a> by the
first <a href="lex_l.htm#lwss">LWSS</a>, and is then restored by the remaining <a href="lex_s.htm#spaceship">spaceships</a>:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..................................OO.............OO.......OOOO.
................................O....O..........OO.OOOO...O...O
...............................O.................OOOOOO...O....
...............................O.....O............OOOO.....O..O
.O.............................OOOOOO..........................
..O............................................................
OOO............................................................
...............................................................
...............................................................
...............................................................
...............................................................
...............................................................
...OOOO........................................................
...O...O.......................................................
...O...........................OO..............................
....O..O......................OO.OOO...........................
...............................OOOOO...........................
................................OOO............................
</a></pre></td></tr></table></center>
<p><a name=caterer>:</a><b>caterer</b> (p3) Found by Dean Hickerson, August 1989. Compare with
<a href="lex_j.htm#jam">jam</a>. In terms of its minimum <a href="lex_p.htm#population">population</a> of 12 this is the
smallest p3 <a href="lex_o.htm#oscillator">oscillator</a>. See also <a href="lex_d.htm#doublecaterer">double caterer</a> and
<a href="lex_t.htm#triplecaterer">triple caterer</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..O.....
O...OOOO
O...O...
O.......
...O....
.OO.....
</a></pre></td></tr></table></center>
More generally, any oscillator which serves up a <a href="lex_b.htm#bit">bit</a> in the same
manner may be referred to as a caterer.
<p><a name=caterloopillar>:</a><b>Caterloopillar</b> A family of adjustable-speed <a href="lex_s.htm#spaceship">spaceships</a> constructed
by Michael Simkin in 2016, based on an "engineless caterpillar" idea
originally proposed by David Bell. The front and back halves of
Caterloopillars each function as universal constructors, with each
half constructing the building blocks of the other half, while also
reading and moving a construction tape. The overall design is
reminiscent of M.C. Escher's lithograph "Drawing Hands". The name
"Caterloopillar" is a reference to Douglas Hofstader's Strange Loop
concept.
<p>Simkin has written an automated script that can construct a
Caterloopillar for any rational speed strictly less than <i>c</i>/4, with
some exceptions. Speeds closer to the <i>c</i>/4 limit in general require
larger constructions, and for any given computer system it is easy to
choose a speed that makes it impractical to construct a
Caterloopillar.
<p>As of June 2018 one significant remaining exception is that
Caterloopillars with periods <i>c</i>/(6+4<i>N</i>) can't be constructed. This is
only a limitation of the current construction script, not of the
underlying Caterloopillar <a href="lex_t.htm#toolkit">toolkit</a>. For technical reasons, the
lowest speed that the current script can produce is around <i>c</i>/95. The
slowest Caterloopillars that have been explicitly constructed to date
are <i>c</i>/87 and <i>c</i>/92. These are among the smallest in terms of
population, though their bounding boxes are larger than some of the
higher-speed Caterloopillars.
<p><a name=caterpillar>:</a><b>Caterpillar</b> A <a href="lex_s.htm#spaceship">spaceship</a> that works by laying tracks at its front
end. The first example constructed was a p270 17<i>c</i>/45 spaceship built
by Gabriel Nivasch in December 2004, based on work by himself, Jason
Summers and David Bell. This Caterpillar has a population of about
12 million in each generation and was put together by a computer
program that Nivasch wrote. At the time it was by far the largest
and most complex Life object ever constructed, and it is still one of
the largest in terms of population.
<p>The 17<i>c</i>/45 Caterpillar is based on the following reaction between a
<a href="lex_p.htm#piheptomino">pi-heptomino</a> and a <a href="lex_b.htm#blinker">blinker</a>:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...............O
O.............OO
O............OO.
O.............OO
...............O
</a></pre></td></tr></table></center>
In this reaction, the pi moves forward 17 cells in the course of 45
generations, while the blinker moves back 6 cells and is rephased.
This reaction has been known for many years, but it was only in
September 2002 that David Bell suggested that it could be used to
build a 17<i>c</i>/45 spaceship, based on a reaction he had found in which
pi-heptominoes crawling along two rows of blinkers interact to emit a
glider every 45 generations. Similar glider-emitting interactions
were later found by Gabriel Nivasch and Jason Summers. The basic
idea of the spaceship design is that streams of gliders created in
this way can be used to construct fleets of <a href="lex_s.htm#standardspaceship">standard spaceships</a>
which convey gliders to the front of the blinker tracks, where they
can be used to build more blinkers.
<p>A different Caterpillar may be possible based on the following
reaction, in which the pattern at top left reappears after 31
generations displaced by (13,1), having produced a new NW-travelling
glider. In this case the tracks would be waves of backward-moving
gliders.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO.....................
...O....................
...O.OO.................
OOO....O................
.......O................
.....OOO................
........................
........................
........................
........................
........................
........................
.....................OOO
.....................O..
......................O.
</a></pre></td></tr></table></center>
For other Caterpillar-type constructions see <a href="#centipede">Centipede</a>,
<a href="lex_w.htm#waterbear">waterbear</a>, <a href="lex_h.htm#halfbakedknightship">half-baked knightship</a>, and <a href="#caterloopillar">Caterloopillar</a>.
<p><a name=catforce>:</a><b>CatForce</b> An optimized <a href="lex_s.htm#searchprogram">search program</a> written by Michael Simkin in
2015, using brute-force enumeration of small <a href="lex_s.htm#spartan">Spartan</a> objects in a
limited area, instead of a depth-first tree search. One major
purpose of CatForce is to find glider-constructible completions for
signal conduits. An early CatForce discovery was the <a href="lex_b.htm#b60">B60</a> conduit,
which enabled a record-breaking new glider gun.
<p><a name=catherinewheel>:</a><b>Catherine wheel</b> = <a href="lex_p.htm#pinwheel">pinwheel</a>
<p><a name=cauldron>:</a><b>cauldron</b> (p8) Found in 1971 independently by Don Woods and Robert
Wainwright. Compare with <a href="lex_h.htm#hertzoscillator">Hertz oscillator</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....O.....
....O.O....
.....O.....
...........
...OOOOO...
O.O.....O.O
OO.O...O.OO
...O...O...
...O...O...
....OOO....
...........
....OO.O...
....O.OO...
</a></pre></td></tr></table></center>
<p><a name=cavity>:</a><b>cavity</b> = <a href="lex_e.htm#eaterplug">eater plug</a>
<p><a name=ccsemicenark>:</a><b>CC semi-cenark</b> The <a href="#colourchanging">colour-changing</a> version of Tanner Jacobi's
century-based semi-Snark mechanism, using a <a href="#ctog">C-to-G</a> consisting of a
<a href="lex_b.htm#bts">BTS</a> <a href="#catalyst">catalyst</a> and a <a href="lex_b.htm#block">block</a>. See <a href="#cpsemicenark">CP semi-cenark</a> for the
<a href="#colourpreserving">colour-preserving</a> version, or <a href="lex_s.htm#semicenark">semi-cenark</a> for repeat time details
and an alternate initial catalyst.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O............OO..........
..O..........O.O..........
OOO.....OO..O.............
........O..O.OO...........
.....O....OO.O.O..........
...O.O........O...........
....OO..............OO....
....................O.....
.......OO.........O.O.....
.......OO.........OO......
..........................
..........................
..........................
....OO....OO..............
...O.O...O.O..............
...O......O...............
..OO......................
..........................
.....................OO...
...................O..O...
...................OOO....
..........................
..............OO...OO.O.OO
..............OO....O.OO.O
....................O.....
...................OO.....
</a></pre></td></tr></table></center>
<p><a name=ccsemisnark>:</a><b>CC semi-Snark</b> A small 90-degree <a href="#colourchanging">colour-changing</a> <a href="lex_g.htm#gliderreflector">glider reflector</a>
requiring two input gliders on the same lane for each output glider.
It was discovered by Sergei Petrov on 1 July 2013, using a
custom-written search utility. It functions as a very compact
<a href="lex_p.htm#perioddoubler">period doubler</a> in some <a href="lex_s.htm#signal">signal</a> <a href="#circuit">circuitry</a>, for example the
<a href="lex_l.htm#linearpropagator">linear propagator</a>. The semi-Snark can period-double a regular
glider <a href="lex_s.htm#stream">stream</a> of period 51 or more, or an <a href="lex_i.htm#intermittentstream">intermittent stream</a>
with two gliders every 67 ticks or more, since the block reset glider
can be sent just 16 ticks before its partner.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
......O..........OO
.......OO........O.
......OO.......O.O.
...............OO..
..........O........
OO.........OO......
OO........OO.......
...................
...................
.................OO
..........OO.....OO
..........OO.......
...................
.....O.............
....O.O............
....OO......OO.....
............O......
.............OOO...
...............O...
</a></pre></td></tr></table></center>
<p><a name=cell>:</a><b>cell</b> The fundamental unit of space in the Life universe. The term is
often used to mean a live cell - the sense is usually clear from the
context.
<p><a name=cellularautomaton>:</a><b>cellular automaton</b> A certain class of mathematical objects of which
<a href="lex_l.htm#life">Life</a> is an example. A cellular automaton consists of a number of
things. First there is a positive integer <i>n</i> which is the dimension
of the cellular automaton. Then there is a finite set of states <i>S</i>,
with at least two members. A state for the whole cellular automaton
is obtained by assigning an element of <i>S</i> to each point of the
<i>n</i>-dimensional lattice <span class="b">Z</span><sup><i>n</i></sup> (where <span class="b">Z</span> is the set of all integers). The
points of <span class="b">Z</span><sup><i>n</i></sup> are usually called cells. The cellular automaton also
has the concept of a neighbourhood. The neighbourhood <i>N</i> of the
origin is some finite (nonempty) subset of <span class="b">Z</span><sup><i>n</i></sup>. The neighbourhood of
any other cell is obtained in the obvious way by translating that of
the origin. Finally there is a transition rule, which is a function
from <i>S</i><sup><i>N</i></sup> to <i>S</i> (that is to say, for each possible state of the
neighbourhood the transition rule specifies some cell state). The
state of the cellular automaton evolves in discrete time, with the
state of each cell at time <i>t</i>+1 being determined by the state of its
neighbourhood at time <i>t</i>, in accordance with the transition rule.
<p>There are some variations on the above definition. It is common to
require that there be a quiescent state, that is, a state such that
if the whole universe is in that state at generation 0 then it will
remain so in generation 1. (In Life the OFF state is quiescent, but
the ON state is not.) Other variations allow spaces other than <span class="b">Z</span><sup><i>n</i></sup>,
neighbourhoods that vary over space and/or time, probabilistic or
other non-deterministic transition rules, etc.
<p>It is common for the neighbourhood of a cell to be the 3x...x3
(hyper)cube centred on that cell. (This includes those cases where
the neighbourhood might more naturally be thought of as a proper
subset of this cube.) This is known as the Moore neighbourhood.
<p><a name=census>:</a><b>census</b> A count of the number of different individual Life objects
within one larger object, most often the final <a href="lex_a.htm#ash">ash</a> of a random
<a href="lex_s.htm#soup">soup</a> experiment. This includes the number of <a href="lex_b.htm#block">blocks</a>, <a href="lex_b.htm#blinker">blinkers</a>,
<a href="lex_g.htm#glider">gliders</a>, and other common objects, as well as any rarer larger
<a href="lex_s.htm#stilllife">still lifes</a>, <a href="lex_o.htm#oscillator">oscillators</a> or <a href="lex_s.htm#spaceship">spaceships</a>.
<p><a name=centinal>:</a><b>centinal</b> (p100) Found by Bill Gosper. This combines the mechanisms
of the p46 and p54 shuttles (see <a href="lex_t.htm#twinbeesshuttle">twin bees shuttle</a> and
<a href="lex_p.htm#p54shuttle">p54 shuttle</a>).
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO................................................OO
.O................................................O.
.O.O.....................OO.....................O.O.
..OO........O............OO............OO.......OO..
...........OO..........................O.O..........
..........OO.............................O..........
...........OO..OO......................OOO..........
....................................................
....................................................
....................................................
...........OO..OO......................OOO..........
..........OO.............................O..........
...........OO..........................O.O..........
..OO........O............OO............OO.......OO..
.O.O.....................OO.....................O.O.
.O................................................O.
OO................................................OO
</a></pre></td></tr></table></center>
<p><a name=centipede>:</a><b>Centipede</b> (31<i>c</i>/240 orthogonally, p240) The smallest known <a href="lex_1.htm#a-31c240">31c/240</a>
spaceship, constructed by Chris Cain in September 2014 as a
refinement of the <a href="lex_s.htm#shieldbug">shield bug</a>.
<p><a name=century>:</a><b>century</b> (stabilizes at time 103) This is a common pattern which
evolves into three <a href="lex_b.htm#block">blocks</a> and a <a href="lex_b.htm#blinker">blinker</a>. In June 1996 Dave
Buckingham built a neat <a href="lex_p.htm#p246gun">p246 gun</a> using a century as the engine.
See also <a href="lex_b.htm#bookend">bookend</a> and <a href="lex_d.htm#diuresis">diuresis</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO
OOO.
.O..
</a></pre></td></tr></table></center>
<p><a name=centuryeater>:</a><b>century eater</b> A 20-cell <a href="lex_s.htm#stilllife">still life</a> that functions as an <a href="lex_e.htm#eater">eater</a> for
the active reaction produced by any <a href="#century">century</a> relative. The most
well-known use is to replace a four-object <a href="#constellation">constellation</a> in Paul
Callahan's <a href="lex_b.htm#bistableswitch">bistable switch</a>, as shown below. In September 2014 Josh
Ball showed that a variant of this still life has a relatively
inexpensive <a href="lex_s.htm#slowgliderconstruction">slow glider construction</a> <a href="lex_r.htm#recipe">recipe</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
............O.OO..............
............OO.O..............
..............................
..........OOOOO...............
.........O..O..O..............
.........OO...O.O.............
...............OO.............
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
............................OO
............................OO
..............................
O.............................
.OO...........................
OO............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
....OO........................
...O.O........................
...O..........................
..OO........OO................
............OO................
</a></pre></td></tr></table></center>
At T=256 the active reaction produces an eight-cell pattern sharing
the same grandchild as a century. The century eater at the top of
the pattern catalyzes this pattern produce a clean <a href="lex_s.htm#spark">spark</a>.
<p><a name=centurytogliderconverter>:</a><b>century-to-glider converter</b> Any <a href="lex_s.htm#signal">signal</a> <a href="#circuit">circuit</a> that accepts a
<a href="#century">century</a> as input and produces a clean output <a href="lex_g.htm#glider">glider</a>. For
example, in November 2017 Adam P. Goucher noticed that this
previously known C-to-G <a href="#converter">converter</a> can replace the <a href="#centuryeater">century eater</a>
in Paul Callahan's <a href="lex_b.htm#bistableswitch">bistable switch</a>, producing an extra glider
output.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
......................OO.......
.......................O.......
.......................O.O.....
........................O.O....
.........................O...OO
.............................OO
...............................
...............................
...............................
...............................
OO.............................
OO.............................
...............................
...............................
.....................O.........
....................OOO........
......................OO.......
</a></pre></td></tr></table></center>
<p><a name=channel>:</a><b>channel</b> A <a href="lex_l.htm#lane">lane</a> or <a href="lex_s.htm#signal">signal</a> path used in construction circuitry.
Until the invention of <a href="lex_s.htm#singlechannel">single-channel</a> <a href="#constructionarm">construction arms</a>, signals
in a channel would usually be <a href="lex_s.htm#synchronized">synchronized</a> with one or more
coordinated signals on other paths, as in the <a href="lex_g.htm#gemini">Gemini</a>, which used
twelve channels to run three construction arms simultaneously, or the
10hd <a href="lex_d.htm#demonoid">Demonoid</a> which needed only two channels. See also <a href="lex_g.htm#geminoid">Geminoid</a>.
<p><a name=chaoticgrowth>:</a><b>chaotic growth</b> An object whose <a href="lex_f.htm#fate">fate</a> is unknown, except that it
appears to grow forever in an unpredictable manner. In Life, no
pattern has yet been found that is chaotic. This is in contrast to
many other Life-like rules, where even small objects can appear to
grow chaotically.
<p>It is possible that chaotic growth may occur rarely or even
regularly for large enough random Life objects, but if so the minimum
size of such patterns must be larger than what can currently be
experimentally simulated (but see <a href="lex_n.htm#noveltygenerator">novelty generator</a>).
<p>In any case, it is not decidable whether a pattern that apparently
grows randomly forever is in fact displaying chaotic growth.
Continuing to evolve such a pattern might at any time result in it
suddenly cleaning itself up and becoming predictable.
<p><a name=chemist>:</a><b>chemist</b> (p5)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.......O.......
.......OOO.....
..........O....
.....OOO..O..OO
....O.O.O.O.O.O
....O...O.O.O..
.OO.O.....O.OO.
..O.O.O...O....
O.O.O.O.O.O....
OO..O..OOO.....
....O..........
.....OOO.......
.......O.......
</a></pre></td></tr></table></center>
<p><a name=cheptomino>:</a><b>C-heptomino</b> Name given by Conway to the following <a href="lex_h.htm#heptomino">heptomino</a>, a less
common variant of the <a href="lex_b.htm#bheptomino">B-heptomino</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OOO
OOO.
.O..
</a></pre></td></tr></table></center>
<p><a name=cheshirecat>:</a><b>Cheshire cat</b> A block <a href="lex_p.htm#predecessor">predecessor</a> by C. R. Tompkins that
unaccountably appeared both in Scientific American and in
<a href="lex_w.htm#winningways">Winning Ways</a>. See also <a href="lex_g.htm#grin">grin</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O..O.
.OOOO.
O....O
O.OO.O
O....O
.OOOO.
</a></pre></td></tr></table></center>
<p><a name=chickenwire>:</a><b>chicken wire</b> A type of <a href="lex_s.htm#stable">stable</a> <a href="lex_a.htm#agar">agar</a> of <a href="lex_d.htm#density">density</a> 1/2. The
simplest version is formed from the tile:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO..
..OO
</a></pre></td></tr></table></center>
But the "wires" can have length greater than two and need not all be
the same. For example:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO...OOOO.....
..OOO....OOOOO
</a></pre></td></tr></table></center>
<p><a name=chirality>:</a><b>chirality</b> A term borrowed from chemistry to describe asymmetrical
patterns with two distinct mirror-image orientations. One common use
is in relation to <a href="lex_h.htm#herscheltransmitter">Herschel transmitters</a>, where the spacing between
the two gliders in the <a href="lex_t.htm#tandemglider">tandem glider</a> output can limit the
<a href="lex_r.htm#receiver">receiver</a> to a single chirality.
<p><a name=cigar>:</a><b>cigar</b> = <a href="lex_m.htm#mango">mango</a>
<p><a name=circuit>:</a><b>circuit</b> Any combination of <a href="#conduit">conduits</a> or <a href="#converter">converters</a> that moves or
processes an active <a href="lex_s.htm#signal">signal</a>. This includes components with multiple
states such as <a href="lex_p.htm#periodmultiplier">period multipliers</a> or <a href="lex_s.htm#switch">switches</a>, which can be used
to build <a href="lex_g.htm#gun">guns</a>, logic gates, <a href="lex_u.htm#universalconstructor">universal constructors</a>, and other
computation or construction circuitry.
<p><a name=cisbeacononanvil>:</a><b>cis-beacon on anvil</b> (p2)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...OO..
....O..
.O.....
.OO....
.......
.OOOO..
O....O.
.OOO.O.
...O.OO
</a></pre></td></tr></table></center>
<p><a name=cisbeaconontable>:</a><b>cis-beacon on table</b> (p2)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO
...O
O...
OO..
....
OOOO
O..O
</a></pre></td></tr></table></center>
<p><a name=cisboatwithtail>:</a><b>cis-boat with tail</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O...
O.O..
OO.O.
...O.
...OO
</a></pre></td></tr></table></center>
<p><a name=cisfusewithtwotails>:</a><b>cis fuse with two tails</b> (p1) See also <a href="lex_p.htm#pulsarquadrant">pulsar quadrant</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O..
.OOO..
O...OO
.O..O.
..O.O.
...O..
</a></pre></td></tr></table></center>
<p><a name=cismirroredrbee>:</a><b>cis-mirrored R-bee</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO.OO.
O.O.O.O
O.O.O.O
.O...O.
</a></pre></td></tr></table></center>
<p><a name=cissnake>:</a><b>cis snake</b> = <a href="#canoe">canoe</a>
<p><a name=clean>:</a><b>clean</b> Opposite of <a href="lex_d.htm#dirty">dirty</a>. A reaction which produces a small number
of different products which are desired or which are easily deleted
is said to be clean. For example, a <a href="lex_p.htm#puffer">puffer</a> which produces just one
object per period is clean. Clean reactions are useful because they
can be used as building blocks in larger constructions.
<p>When a <a href="lex_f.htm#fuse">fuse</a> is said to be clean, or to <a href="lex_b.htm#burn">burn</a> cleanly, this
usually means that no debris at all is left behind.
<p><a name=clearance>:</a><b>clearance</b> In signal circuitry, the distance from an <a href="lex_e.htm#edgeshooter">edge shooter</a>
output <a href="lex_l.htm#lane">lane</a> to the last unobstructed lane adjacent to the
edge-shooter circuitry. For example, an <a href="lex_f.htm#fx119inserter">Fx119 inserter</a> has an
unusually high 27<a href="lex_h.htm#hd">hd</a> clearance.
<p>Also, oscillator and eater variants may be said to have better
clearance if they allow <a href="lex_g.htm#glider">gliders</a> or other <a href="lex_s.htm#signal">signals</a> to pass closer
to them than the standard variant allows. The following
high-clearance <a href="lex_e.htm#eater1">eater1</a> variant by Karel Suhajda allows gliders to
pass one lane closer on the southeast side, than is allowed by the
standard fishhook shape.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O......OO
..O..OO..O
OOO...O.O.
......O.OO
...OO.O...
...O..O...
....OO....
</a></pre></td></tr></table></center>
This is considered to be a variant of the eater1 because the
reaction's <a href="lex_r.htm#rotor">rotor</a> is exactly the same, even though three cells in
this variant are too overpopulated to allow a birth, instead of
underpopulated as in a standard eater1 glider-eating reaction.
<p><a name=clock>:</a><b>clock</b> (p2) Found by Simon Norton, May 1970. This is the fifth or
sixth most common <a href="lex_o.htm#oscillator">oscillator</a>, being about as frequent as the
<a href="lex_p.htm#pentadecathlon">pentadecathlon</a>, but much less frequent than the <a href="lex_b.htm#blinker">blinker</a>, <a href="lex_t.htm#toad">toad</a>,
<a href="lex_b.htm#beacon">beacon</a> or <a href="lex_p.htm#pulsar">pulsar</a>. It is surprisingly rare considering its small
size.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..O.
O.O.
.O.O
.O..
</a></pre></td></tr></table></center>
<p>The protruding cells at the edges can perturb some reactions by
inhibiting the birth of a cell in a 3-cell corner. For example, a
clock can be used to suppress the surplus <a href="lex_b.htm#blinker">blinker</a> produced by an
<a href="lex_f.htm#f171">F171</a> conduit, significantly improving the <a href="lex_r.htm#recoverytime">recovery time</a> of the
circuit:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.........O........O................................
.........OOO......OOO..............................
............O........O.............................
...........OO.......OO.............................
...................................................
.................................................O.
................................................O.O
................................................O.O
.................................................O.
......................................O............
............OO........................O............
.............O........................OOO..........
.............O.O........................O..........
..............OO...................................
...................................................
...................................................
........O..............................OO..........
........OOO........................O...OO..........
...........O......................O.O..............
..........OO.....................O.O...............
.................................O.................
................................OO.................
...................................................
...................................................
...................................................
...................................................
.........O.........................................
.........O.O.......................................
.........OOO.......................................
...........O.......................................
...................................................
..................OO...O...........................
...................O....OO.........................
................OOO...OO...........................
..OO............O.......O..........................
...O...............................................
OOO................................................
O..................................................
</a></pre></td></tr></table></center>
<p><a name=clockii>:</a><b>clock II</b> (p4) Compare with <a href="lex_p.htm#pinwheel">pinwheel</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
......OO....
......OO....
............
....OOOO....
OO.O....O...
OO.O..O.O...
...O..O.O.OO
...O.O..O.OO
....OOOO....
............
....OO......
....OO......
</a></pre></td></tr></table></center>
<p><a name=clockinserter>:</a><b>clock inserter</b> = <a href="#clockinsertion">clock insertion</a>.
<p><a name=clockinsertion>:</a><b>clock insertion</b> A uniquely effective method of adding a glider to the
front edge of a <a href="lex_s.htm#salvo">salvo</a>, by first constructing a <a href="#clock">clock</a>, then
converting it to a glider using a one-bit <a href="lex_s.htm#spark">spark</a>. Here it rebuilds
a sabotaged glider in a deep pocket between other gliders:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..................................................O........
..................................................O.O......
..................................................OO.......
...............................................O......O....
..............................................O......O.....
..............................................OOO....OOO...
...........................................................
...........................................O......O........
...........................................O.O....O.O.....O
...........................................OO.....OO....OO.
........................................O.......O........OO
.......................................O...................
.......................................OOO...........O.O...
.....................................................OO....
......................................................O....
O..................................................O.......
.OO..............................................OO........
OO................................................OO.......
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
.............................O.............................
....................O......O.O.............................
..................O.O.......OO.............................
...................OO......................................
.........................O.................................
..........................O....OOO.........................
........................OOO....O...........................
................................O..........................
.....................................OO....................
............................OO.......O.O...................
............................O.O......O.....................
............................O..............................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
...........................................................
.............................................OO............
.............................................O.O...........
.............................................O.............
</a></pre></td></tr></table></center>
<p>In 2015 Chris Cain used this reaction to demonstrate conclusively
that any unidirectional glider <a href="lex_s.htm#salvo">salvo</a>, no matter how large or
tightly packed, can be constructed by collisions between gliders that
are initially separated by any finite distance. As a corollary,
because all glider syntheses are made up of two to four
unidirectional salvos, any glider-constructible object has a
synthesis that starts with every glider at least <i>N</i> cells away from
every other glider (for any chosen <i>N</i>).
<p><a name=cloudofsmoke>:</a><b>cloud of smoke</b> = <a href="lex_s.htm#smoke">smoke</a>
<p><a name=cloverleaf>:</a><b>cloverleaf</b> This name was given by Robert Wainwright to his p2
oscillator <a href="lex_w.htm#washingmachine">washing machine</a>. But Achim Flammenkamp also gave this
name to <a href="lex_a.htm#achimsp4">Achim's p4</a>.
<p><a name=cluster>:</a><b>cluster</b> Any pattern in which each live cell is connected to every
other live cell by a path that does not pass through two consecutive
dead cells. This sense is due to Nick Gotts, but the term has also
been used in other senses, often imprecise.
<p><a name=cnwh>:</a><b>CNWH</b> Conweh, creator of the Life universe.
<p><a name=coeship>:</a><b>Coe ship</b> (<i>c</i>/2 orthogonally, p16) A <a href="lex_p.htm#pufferengine">puffer engine</a> discovered by Tim
Coe in October 1995.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OOOOOO
..OO.....O
OO.O.....O
....O...O.
......O...
......OO..
.....OOOO.
.....OO.OO
.......OO.
</a></pre></td></tr></table></center>
<p>In December 2015, the Coe ship was discovered in an asymmetric
random <a href="lex_s.htm#soup">soup</a> on <a href="#catagolue">Catagolue</a>. This was the first time any non-p4 ship
was discovered in a random asymmetric soup experiment, winning Adam
P. Goucher a 50-euro prize offered by Ivan Fomichev.
<p><a name=coesp8>:</a><b>Coe's p8</b> (p8) Found by Tim Coe in August 1997.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO..........
OO..OO......
.....OO.....
....O..O....
.......O..OO
.....O.O..OO
</a></pre></td></tr></table></center>
<p><a name=collatz5n1simulator>:</a><b>Collatz 5N+1 simulator</b> An <a href="lex_u.htm#unknownfate">unknown fate</a> pattern constructed by David
Bell in December 2017 that simulates the Collatz 5<i>N</i>+1 algorithm using
<a href="lex_s.htm#slidingblockmemory">sliding block memory</a> and <a href="lex_p.htm#p1">p1</a> <a href="lex_t.htm#technology">technology</a>, while always having a
population below 32000.
<p>The algorithm is simple. Starting with a number, if it is even
divide it by 2, otherwise multiply it by 5 and add 1. When this
process is iterated a sequence of numbers is generated. When
starting with the value of 7, it is currently unknown whether or not
the sequence ever forms a cycle.
<p>Because of this the fate of the simulator is also currently
unknown. It may become stable, or become an oscillator with a high
period, or have a bounding box which grows irregularly.
<p><a name=colour>:</a><b>colour</b> = <a href="#colourofaglider">colour of a glider</a>
<p><a name=colourchanging>:</a><b>colour-changing</b> See <a href="#colourofaglider">colour of a glider</a>. The <a href="lex_r.htm#reflector">reflector</a> shown in
<a href="lex_p.htm#p8bouncer">p8 bouncer</a> is colour-changing, as are its 5/6/7/8 and higher-period
versions.
<p><a name=colourchangingsemisnark>:</a><b>colour-changing semi-Snark</b> = <a href="#ccsemisnark">CC semi-Snark</a>.
<p><a name=colourisedlife>:</a><b>colourised Life</b> A <a href="#cellularautomaton">cellular automaton</a> that is the same as Life
except for the use of a number of different ON states ("colours").
All ON states behave the same for the purpose of applying the Life
rule, but additional rules are used to specify the colour of the
resulting ON cells. Examples are <a href="lex_i.htm#immigration">Immigration</a> and <a href="lex_q.htm#quadlife">QuadLife</a>.
<p><a name=colourofaglider>:</a><b>colour of a glider</b> The colour of a <a href="lex_g.htm#glider">glider</a> is a property of the
glider that remains constant while the glider is moving along a
straight path, but that can be changed when the glider bounces off a
<a href="lex_r.htm#reflector">reflector</a>. It is an important consideration when building
something using reflectors.
<p>The colour of a glider can be defined as follows. First choose
some cell to be the origin. This cell is then considered to be
white, and all other cells to be black or white in a checkerboard
pattern. (So the cell with coordinates (<i>m</i>,<i>n</i>) is white if <i>m</i>+<i>n</i> is
even, and black otherwise.) Then the colour of a glider is the
colour of its leading cell when it is in a phase that can be rotated
to look like this:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OOO
..O
.O.
</a></pre></td></tr></table></center>
<p>A reflector that does not change the colour of gliders obviously
cannot be used to move a glider onto a path of different colour than
it started on. But a 90-degree reflector that does change the colour
of gliders is similarly limited, as the colour of the resulting
glider will depend only on the direction of the glider, no matter how
many reflectors are used. For maximum flexibility, therefore, both
types of reflector are required.
<p>Small periodic colour-changing glider reflectors (<a href="lex_b.htm#bouncer">bouncers</a>) are
known, and also small periodic colour-preserving glider reflectors
(<a href="lex_b.htm#bumper">bumpers</a>). Among stable patterns, only a small colour-preserving
reflector (<a href="lex_s.htm#snark">Snark</a>) is known. The smallest known 90-degree
colour-changing reflector is given at the end of the <a href="lex_r.htm#reflector">reflector</a>
entry.
<p><a name=colourpreserving>:</a><b>colour-preserving</b> See <a href="#colourofaglider">colour of a glider</a>. <a href="lex_s.htm#snark">Snarks</a> and <a href="lex_b.htm#bumper">bumpers</a>
are colour-preserving reflectors.
<p><a name=colourpreservingsemisnark>:</a><b>colour-preserving semi-Snark</b> = <a href="#cpsemisnark">CP semi-Snark</a>
<p><a name=complementaryblinker>:</a><b>complementary blinker</b> = <a href="lex_f.htm#foreandback">fore and back</a>
<p><a name=component>:</a><b>component</b> A partial <a href="lex_g.htm#glidersynthesis">glider synthesis</a> that can be used in the same
way in multiple <a href="lex_g.htm#gliderrecipe">glider recipes</a>. A component transforms part of an
object under construction in a well-defined way, without affecting
the rest of the object. For example, this well-known component can
be used to add a <a href="lex_h.htm#hook">hook</a> to any object that includes a protruding
<a href="lex_t.htm#table">table</a> end, converting it to a <a href="lex_l.htm#longbookend">long bookend</a>:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.......O...................O...................O
.....OO..................OO..................OO.
......OO..................OO..................OO
................................................
..O...................O...................O.....
O.O.................O.O.................O.O.....
.OO..O...............OO..O...............OO..O..
.....O.O.................O.O.................O.O
.....OO..................OO..................OO.
................................................
................................................
....................O...........................
...O..O............O.O.O..O............OO..O..O.
...OOOO.............OO.OOOO............O...OOOO.
......................O.................OOO.....
.....OO...............O.O.................O.O...
.....OO................O.O.................OO...
........................O.......................
</a></pre></td></tr></table></center>
<p>"Component" is also used to specify any piece of an object -
<a href="lex_s.htm#spaceship">spaceship</a>, <a href="lex_o.htm#oscillator">oscillator</a>, etc. - that can be combined with other
components in specific ways according to a <a href="lex_g.htm#grammar">grammar</a> to produce a
variety of objects. The components can either be independent objects
that only occasionally react with each other, or else they can be
fused together to support each other. For example, any
<a href="lex_b.htm#branchingspaceship">branching spaceship</a> is made up of several components, and there is
a single repeating component in any <a href="lex_w.htm#wicktrailer">wicktrailer</a>.
<p><a name=composite>:</a><b>composite</b> See <a href="#compositeconduit">composite conduit</a>.
<p><a name=compositeconduit>:</a><b>composite conduit</b> A signal-processing <a href="#conduit">conduit</a> that can be
subdivided into two or more <a href="lex_e.htm#elementaryconduit">elementary conduits</a>.
<p><a name=compression>:</a><b>compression</b> = <a href="lex_r.htm#repeattime">repeat time</a>, <a href="lex_r.htm#recoverytime">recovery time</a>.
<p><a name=computationaluniversality>:</a><b>computational universality</b> See <a href="lex_u.htm#universalcomputer">universal computer</a>.
<p><a name=conduit>:</a><b>conduit</b> Any arrangement of <a href="lex_s.htm#stilllife">still lifes</a> and/or <a href="lex_o.htm#oscillator">oscillators</a> that
moves an active object to another location, perhaps also transforming
it into a different active object at the same time, but without
leaving any permanent debris (except perhaps gliders, or other
spaceships) and without any of the still lifes or oscillators being
permanently damaged. Probably the most important conduit is the
following remarkable one (Dave Buckingham, July 1996) in which a
<a href="lex_b.htm#bheptomino">B-heptomino</a> is transformed into a <a href="lex_h.htm#herschel">Herschel</a> in 59 generations.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.........OO.O
O.OO......OOO
OO.O.......O.
.............
.........OO..
.........OO..
</a></pre></td></tr></table></center>
Several hundred <a href="lex_e.htm#elementaryconduit">elementary conduits</a> are now known, with recent
discoveries primarily made via <a href="lex_s.htm#searchprogram">search programs</a> such as <a href="#catforce">CatForce</a>
and <a href="lex_b.htm#bellman">Bellman</a>.
<p><a name=conduit1>:</a><b>conduit 1</b> = <a href="lex_b.htm#bfx59h">BFx59H</a>.
<p><a name=confusedeaters>:</a><b>confused eaters</b> (p4) Found by Dave Buckingham before 1973.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
O..........
OOO........
...O.......
..O........
..O..O.....
.....O.....
...O.O.....
...OO..OO..
.......O.O.
.........O.
.........OO
</a></pre></td></tr></table></center>
<p><a name=constellation>:</a><b>constellation</b> A general term for a group of two or more separate
objects, usually small still lifes and low-period oscillators.
Compare <a href="lex_p.htm#pseudostilllife">pseudo still life</a>.
<p><a name=constructionarm>:</a><b>construction arm</b> An adjustable mechanism in a <a href="lex_u.htm#universalconstructor">universal constructor</a>
that allows new objects to be constructed in any chosen location that
the arm can reach. A construction arm generally consists of a
<a href="lex_s.htm#shoulder">shoulder</a> containing fixed guns or edge shooters, a movable
<a href="#constructionelbow">construction elbow</a> that slides forward and backward along the
<a href="#constructionlane">construction lane</a>(s), and in the case of <a href="lex_s.htm#singlearm">single-arm</a> universal
constructors, a <a href="lex_h.htm#hand">hand</a> target object at the construction site that
can be progressively modified by a <a href="lex_s.htm#slowsalvo">slow salvo</a> to produce each
desired object.
<p><a name=constructionelbow>:</a><b>construction elbow</b> One of the components of a <a href="#constructionarm">construction arm</a> in a
<a href="lex_u.htm#universalconstructor">universal constructor</a>. The elbow usually consists of a single
<a href="lex_s.htm#spartan">Spartan</a> still life or small constellation. It accepts
<a href="lex_e.htm#elbowoperation">elbow operation</a> recipes, in the form of <a href="lex_s.htm#salvo">salvos</a> coming from the
construction arm's <a href="lex_s.htm#shoulder">shoulder</a>.
<p>These recipes may do one of several things: 1) <a href="lex_p.htm#pull">pull</a> the elbow
closer to the shoulder, 2) <a href="lex_p.htm#push">push</a> the elbow farther from the
shoulder, 3) emit a glider on a particular output <a href="lex_l.htm#lane">lane</a> (while also
optionally pushing or pulling the elbow); 4) create a "<a href="lex_h.htm#hand">hand</a>" target
block or other useful object as a target for output gliders, to one
side of the <a href="#constructionlane">construction lane</a>; 5) duplicate the elbow, or 6)
destroy the elbow.
<p>Elbows that receive and emit orthogonally-travelling <a href="lex_s.htm#spaceship">spaceships</a>
instead of gliders are technically possible, but no working examples
are currently known. The discussion below assumes that gliders are
used to communicate between the shoulder, elbow, and hand locations.
<p>If a mechanism can be programmed to generate recipes for at least
the first three options listed above, it is generally capable of
functioning as a <a href="lex_u.htm#universalconstructor">universal constructor</a>. The main requirement is
that push and pull <a href="lex_e.htm#elbowoperation">elbow operations</a> should be available that are
either minimal (1<a href="lex_f.htm#fd">fd</a>) or the distances should be relatively prime.
<p>Depending on the <a href="lex_e.htm#elbowoperation">elbow operation</a> library, there may be only one
type of elbow, or there may be two or more elbow objects, with
recipes that convert between them. The <a href="lex_1.htm#a-9hd">9hd</a> library had just one
elbow type, a block. The original 10<a href="lex_h.htm#hd">hd</a> library had two elbows,
blocks in mirror-symmetric locations; this was expanded to a larger
list for the <a href="lex_1.htm#a-10hddemonoid">10hd Demonoid</a>. The <a href="lex_1.htm#a-0hddemonoid">0hd Demonoid</a> also has a
multi-elbow recipe library. A <a href="lex_s.htm#slowelbow">slow elbow</a> toolkit may make use of
an even larger number of glider output recipes, because the <a href="lex_t.htm#target">target</a>
elbow object in that case is not restricted to a single diagonal
line.
<p>If only one colour, parity, or phase of glider can be emitted, then
the mechanism will be limited to producing <a href="lex_m.htm#monochromaticsalvo">monochromatic salvos</a> or
<a href="lex_m.htm#monoparitysalvo">monoparity salvos</a>. These are less efficient at most construction
tasks, but are still generally accepted to enable
<a href="lex_u.htm#universaltoolkit">universal toolkits</a>. See also <a href="lex_h.htm#halfbakedknightship">half-baked knightship</a>.
<p><a name=constructionenvelope>:</a><b>construction envelope</b> The region affected by an active reaction, such
as a <a href="lex_g.htm#glidersynthesis">glider synthesis</a> of an object. The envelope corresponds to
the state-2 blue cells in <a href="lex_l.htm#lifehistory">LifeHistory</a>. See also <a href="lex_e.htm#edgy">edgy</a>.
<p><a name=constructionlane>:</a><b>construction lane</b> Part of a <a href="#constructionarm">construction arm</a> between the <a href="lex_s.htm#shoulder">shoulder</a>
and the <a href="lex_e.htm#elbow">elbow</a> - in particular, one of the fixed <a href="lex_l.htm#lane">lanes</a> that
<a href="lex_e.htm#elbowoperation">elbow operation</a> signals travel on. All known
<a href="lex_u.htm#universalconstructor">universal constructors</a> have used arms with two or more construction
lanes, except for the ones in the <a href="lex_1.htm#a-0hddemonoid">0hd Demonoid</a> and in recent
<a href="lex_s.htm#singlechannel">single-channel</a> construction recipes.
<p><a name=constructionrecipe>:</a><b>construction recipe</b> One or more streams of <a href="lex_g.htm#glider">gliders</a> or other signals
fed into a <a href="lex_u.htm#universalconstructor">universal constructor</a> to create a target object.
Compare <a href="lex_g.htm#gliderrecipe">glider recipe</a>.
<p><a name=constructionuniversality>:</a><b>construction universality</b> See <a href="lex_u.htm#universalconstructor">universal constructor</a>.
<p><a name=converter>:</a><b>converter</b> A <a href="#conduit">conduit</a> in which the input object is not of the same
type as the output object. This term tends to be preferred when
either the input object or the output object is a <a href="lex_s.htm#spaceship">spaceship</a>.
<p>The following diagram shows a p8 <a href="lex_p.htm#piheptomino">pi-heptomino</a>-to-<a href="lex_h.htm#hwss">HWSS</a>
converter. This was originally found by Dave Buckingham in a larger
form (using a <a href="lex_f.htm#figure8">figure-8</a> instead of the <a href="lex_b.htm#boat">boat</a>). The improvement
shown here is by Bill Gosper (August 1996). Dieter Leithner has
since found (much larger) <a href="lex_o.htm#oscillator">oscillators</a> of periods 44, 46 and 60 that
can be used instead of the <a href="lex_k.htm#koksgalaxy">Kok's galaxy</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O.O..O........
.OOO.O.OO......
O......O.....O.
.O.....OO...O.O
.............OO
OO.....O.......
.O......O......
OO.O.OOO.......
..O..O.O.......
............OOO
............O.O
............O.O
</a></pre></td></tr></table></center>
<p>For another periodic converter, see the glider-to-LWSS example in
<a href="lex_q.htm#queenbeeshuttlepair">queen bee shuttle pair</a>. However, many converters are <a href="lex_s.htm#stable">stable</a>.
Examples of <a href="lex_e.htm#elementaryconduit">elementary conduit</a> converters include <a href="lex_b.htm#bfx59h">BFx59H</a>,
<a href="lex_1.htm#a-135degreemwsstog">135-degree MWSS-to-G</a>, and <a href="lex_1.htm#a-45degreemwsstog">45-degree MWSS-to-G</a>.
<p>The earliest and simplest stable converters known are shown below.
These are an HWSS-to-loaf, MWSS-to-beehive, and LWSS-to-blinker.
These can serve as <a href="lex_m.htm#memorycell">memory cells</a>, or as the first steps in
constructing objects using <a href="lex_s.htm#salvo">salvos</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.........................O..............................
..OO...................O...O.................O..O.......
O....O......................O....................O......
......O................O....O................O...O......
O.....O.................OOOOO.................OOOO......
.OOOOOO.................................................
.........OO....................OO...................OO..
.........O.O...................O....................O...
...........O....................OOO..................OOO
...........OO.....................O....................O
</a></pre></td></tr></table></center>
<p><a name=convoy>:</a><b>convoy</b> A collection of <a href="lex_s.htm#spaceship">spaceships</a> all moving in the same direction
at the same speed. Convoys are usually not destroyed by the
reactions that they cause. Compare <a href="lex_s.htm#salvo">salvo</a>. For examples, see
<a href="lex_r.htm#reanimation">reanimation</a>, <a href="lex_f.htm#flybydeletion">fly-by deletion</a> and <a href="lex_g.htm#gliderturner">glider turner</a>.
<p><a name=copperhead>:</a><b>copperhead</b> (<i>c</i>/10 orthogonally, p10) The following small <i>c</i>/10
<a href="lex_s.htm#spaceship">spaceship</a>, discovered by conwaylife.com forum user 'zdr' on 5 March
2016, using a simple depth-first search program. A
<a href="lex_g.htm#glidersynthesis">glider synthesis</a> was found on the same day.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OOOO.
......
.O..O.
O.OO.O
O....O
......
O....O
OO..OO
OOOOOO
.O..O.
..OO..
..OO..
</a></pre></td></tr></table></center>
Later that same month Simon Ekstr&ouml;m added a <a href="lex_s.htm#sparky">sparky</a> <a href="lex_t.htm#tagalong">tagalong</a> for
the copperhead to produce the <a href="lex_f.htm#fireship">fireship</a>. This allowed for the
construction of <i>c</i>/10 puffers and rakes.
<p><a name=corder>:</a><b>Corder-</b> Prefix used for things involving <a href="lex_s.htm#switchengine">switch engines</a>, after
Charles Corderman.
<p><a name=corderengine>:</a><b>Corder engine</b> = <a href="lex_s.htm#switchengine">switch engine</a>
<p><a name=cordergun>:</a><b>Cordergun</b> A <a href="lex_g.htm#gun">gun</a> firing <a href="#cordership">Corderships</a>. The first was built by Jason
Summers in July 1999, using a <a href="lex_g.htm#glidersynthesis">glider synthesis</a> by Stephen Silver.
<p><a name=cordership>:</a><b>Cordership</b> Any <a href="lex_s.htm#spaceship">spaceship</a> based on <a href="lex_s.htm#switchengine">switch engines</a>. These
necessarily move at a speed of <i>c</i>/12 diagonally with a period of 96 or
a multiple thereof. The first Cordership was constructed by Dean
Hickerson in April 1991, using 13 switch engines. He soon reduced
this to 10, and in August 1993 to 7. In July 1998 he reduced it to
6. In January 2004, Paul Tooke found the 3-engine <a href="lex_g.htm#glidesymmetric">glide symmetric</a>
Cordership shown below.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
................................OO.O...........................
...............................OOO.O......O.O..................
..............................O....O.O....O....................
...............................OO......O.O...O.................
................................O...O..O..OO...................
...................................O.OO...O....................
..................................O.O................OO........
..................................O.O................OO........
...............................................................
...............................................................
...............................................................
...............................................................
...............................................................
...............................................................
.............................................................OO
....................................................OO.......OO
.......................................O.........O.OOOO........
..................................O...OOOOO.....OO.O...OO......
.................................O.O.......OO....O..OO.OO......
.................................O.......O.OO.....OOOOOO.......
..................................O........OO......O...........
...................................O...OOOO....................
........................................OOO....................
........................O.O.........OO.........................
........................O.O.O......O.O.........................
.......................O..OO.O....OO...........................
........................OO...O.O.OO.O..........................
........................OO...OO.OOOOO..........................
............................O.OO...OO..........................
...........................O.O.................................
..OO.O.........................................................
.OOO.O......O.O................................................
O....O.O....O..................................................
.OO......O.O...O...............................................
..O...O..O..OO...........O.....................................
.....O.OO...O...........OOO....................................
....O.O.................O..O...................................
....O.O................O....O..................................
........................O......................................
...............................................................
........................O..O...................................
.........................O.O...................................
...............................................................
.....................O.........................................
....................OOO........................................
...................OO.OO.......................................
.........O........OO.O.....O...................................
....O...OOOOO....OO......OO....................................
...O.O.......OO..OO.......OO...................................
...O.......O.OO................................................
....O........OO................................................
.....O...OOOO..................................................
..........OOO..................................................
...............................................................
...............................................................
...............................................................
...........OO..................................................
...........OO..................................................
</a></pre></td></tr></table></center>
<p>At the end of 2017, Aidan F. Pierce discovered a clean
<a href="lex_1.htm#a-2enginecordership">2-engine Cordership</a>. There is also an adjustable-length 4-engine
Cordership found by Michael Simkin, made up of two identical or
mirror-image 2-engine components. The leading pair of switch engines
builds a block trail, which are then deleted by the trailing pair.
<p>Corderships generate <a href="lex_s.htm#spark">sparks</a> which can <a href="lex_p.htm#perturb">perturb</a> other objects in
many ways, especially gliders which can reach them from the side or
from behind. Some perturbations reflect gliders back the way they
came, and can be used for constructions such as the <a href="#cabertosser">caber tosser</a>
and the <a href="lex_i.htm#infinitegliderhotel">infinite glider hotel</a>.
<p><a name=cousins>:</a><b>cousins</b> (p3) This contains two copies of the <a href="lex_s.htm#stillater">stillater</a> <a href="lex_r.htm#rotor">rotor</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....O.OO....
...OOO.O.O...
O.O......O...
OO.OO.OO.O.OO
...O.O....O.O
...O.O.OOO...
....OO.O.....
</a></pre></td></tr></table></center>
<p><a name=cover>:</a><b>cover</b> The following <a href="lex_i.htm#inductioncoil">induction coil</a>. See <a href="lex_s.htm#scrubber">scrubber</a> for an example
of its use.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....O
..OOO
.O...
.O...
OO...
</a></pre></td></tr></table></center>
<p><a name=coveredtable>:</a><b>covered table</b> = <a href="#cap">cap</a>
<p><a name=cow>:</a><b>cow</b> (<i>c</i> p8 fuse)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO.......OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO.....
OO....O.OOO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO...OO
....OO.O.................................................O.O
....OO...OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO..
....OO.O..................................................O.
OO....O.OOO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO.
OO.......OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO.....
</a></pre></td></tr></table></center>
<p><a name=cppulsar>:</a><b>CP pulsar</b> = <a href="lex_p.htm#pulsar">pulsar</a>
<p><a name=cpsemicenark>:</a><b>CP semi-cenark</b> A <a href="#colourpreserving">colour-preserving</a> variant of Tanner Jacobi's
century-based semi-Snark mechanism, the <a href="lex_s.htm#semicenark">semi-cenark</a>. See
<a href="#ccsemicenark">CC semi-cenark</a> for the <a href="#colourchanging">colour-changing</a> version, or <a href="lex_s.htm#semicenark">semi-cenark</a>
for repeat time details and an alternate initial catalyst.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O............OO........
..O..........O.O........
OOO.....OO..O...........
........O..O.OO.........
.....O....OO.O.O........
...O.O........O.........
....OO..............OO..
....................O...
.......OO.........O.O...
.......OO.........OO....
........................
........................
........................
....OO....OO............
...O.O...O.O............
...O......O.............
..OO...............OO...
....................O...
....................O.OO
.................OO.OO.O
..................O.....
................O.O.....
................OO......
</a></pre></td></tr></table></center>
<p><a name=cpsemisnark>:</a><b>CP semi-Snark</b> A period-multiplying <a href="#colourpreserving">colour-preserving</a> <a href="lex_s.htm#signal">signal</a>
<a href="#conduit">conduit</a> found by Tanner Jacobi in October 2017, producing one
output <a href="lex_g.htm#glider">glider</a> for every two input gliders. It is made by replacing
one of the eaters in a <a href="lex_s.htm#snark">Snark</a> with a <a href="#catalyst">catalyst</a> found using
<a href="lex_b.htm#bellman">Bellman</a>. The catalyst causes the formation of a <a href="lex_t.htm#tub">tub</a> which
requires a second glider to delete. However, this adds 5 ticks to
the repeat time, so that it becomes 48. This is still 3 ticks faster
than the <a href="#ccsemisnark">CC semi-Snark</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O............................
..O.............OO............
OOO..............O............
...............O.....OO.......
...............OO.....O.......
......................O.OO....
...............OO..OO.O..O....
...............OO...O.OO......
....................O.........
...................OO.........
..............................
.........................OO...
.............O............O...
..............O...........O.OO
............OOO...OO....OOO..O
..................OO...O...OO.
.......................OOOO...
.........OO...............O...
........O.O............OOO....
........O.............O.......
.......OO..............OOOOO..
...........................O..
.........................O....
.........................OO...
</a></pre></td></tr></table></center>
<p><a name=crab>:</a><b>crab</b> = <a href="lex_q.htm#quarter">quarter</a>.
<p><a name=crane>:</a><b>crane</b> (<i>c</i>/4 diagonally, p4) The following <a href="lex_s.htm#spaceship">spaceship</a> found by Nicolay
Beluchenko in September 2005, a minor modification of a <a href="lex_t.htm#tubeater">tubeater</a>
found earlier by Hartmut Holzwart. The wing is of the same form as
in the <a href="lex_s.htm#swan">swan</a> and <a href="#canadagoose">Canada goose</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO.................
OO..................
..O.................
....OO...O..........
....OO..O.O.........
.......OO.O.........
.......OO...........
.......OO...........
.................OO.
.........O....OO.O..
.........OOO..OO....
.........OOO..OO....
..........OO........
....................
............O.......
...........OO.......
...........O........
............O.......
....................
.............OO.....
..............O.OO..
..................O.
...............OO...
...............OO...
.................O..
..................OO
</a></pre></td></tr></table></center>
<p><a name=cross>:</a><b>cross</b> (p3) Found by Robert Wainwright in October 1989. The members
of this family are all <a href="lex_p.htm#polyomino">polyominoes</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OOOO..
..O..O..
OOO..OOO
O......O
O......O
OOO..OOO
..O..O..
..OOOO..
</a></pre></td></tr></table></center>
In February 1993, Hartmut Holzwart noticed that this is merely the
smallest of an infinite family of p3 oscillators. The next smallest
member is shown below.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OOOO.OOOO..
..O..O.O..O..
OOO..OOO..OOO
O...........O
O...........O
OOO.......OOO
..O.......O..
OOO.......OOO
O...........O
O...........O
OOO..OOO..OOO
..O..O.O..O..
..OOOO.OOOO..
</a></pre></td></tr></table></center>
<p><a name=crowd>:</a><b>crowd</b> (p3) Found by Dave Buckingham in January 1973.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...........O..
.........OOO..
.....OO.O.....
.....O...O....
.......OO.O...
...OOOO...O...
O.O.....O.O.OO
OO.O.O.....O.O
...O...OOOO...
...O.OO.......
....O...O.....
.....O.OO.....
..OOO.........
..O...........
</a></pre></td></tr></table></center>
<p><a name=crown>:</a><b>crown</b> The p12 part of the following p12 <a href="lex_o.htm#oscillator">oscillator</a>, where it is
<a href="lex_h.htm#hassle">hassled</a> by a <a href="#caterer">caterer</a>, a <a href="lex_j.htm#jam">jam</a> and a <a href="lex_h.htm#hwemulator">HW emulator</a>. This
oscillator was found by Noam Elkies in January 1995.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..........O...........
..........O......O....
...O....O...O...OO....
...OO....OOO..........
.........OOO..OOO..O.O
.O..OOO.........O.OOOO
O.O.O...............OO
O..O..................
.OO........OO.........
......OO.O....O.OO....
......O..........O....
.......OO......OO.....
....OOO..OOOOOO..OOO..
....O..O........O..O..
.....OO..........OO...
</a></pre></td></tr></table></center>
<p><a name=crucible>:</a><b>crucible</b> = <a href="#cauldron">cauldron</a>
<p><a name=crystal>:</a><b>crystal</b> A regular growth that is sometimes formed when a stream of
<a href="lex_g.htm#glider">gliders</a>, or other <a href="lex_s.htm#spaceship">spaceships</a>, is fired into some junk.
<p>The most common example is initiated by the following collision of
a glider with a <a href="lex_b.htm#block">block</a>. With a glider stream of even <a href="lex_p.htm#period">period</a> at
least 82, this gives a crystal which forms a pair of <a href="lex_b.htm#beehive">beehives</a> for
every 11 gliders which hit it.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O......
..O...OO
OOO...OO
</a></pre></td></tr></table></center>
<p><a name=ctog>:</a><b>C-to-G</b> = <a href="#centurytogliderconverter">century-to-glider converter</a>
<p><a name=cuphook>:</a><b>cuphook</b> (p3) Found by Rich Schroeppel, October 1970. This is one of
only three essentially different p3 <a href="lex_o.htm#oscillator">oscillators</a> with only three
cells in the <a href="lex_r.htm#rotor">rotor</a>. The others are <a href="lex_1.htm#a-123">1-2-3</a> and <a href="lex_s.htm#stillater">stillater</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO...
OO.O.O...
OO.O.....
...O.....
...O..O..
....OO.O.
.......O.
.......OO
</a></pre></td></tr></table></center>
The above is the original form, but it can be made more compact:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO.
...O.O.
...O...
OO.O...
OO.O..O
...O.OO
...O...
..OO...
</a></pre></td></tr></table></center>
<p><a name=curl>:</a><b>curl</b> = <a href="lex_l.htm#loop">loop</a>
<hr>
<center>
<font size=-1><b>
<a href="lex_1.htm">1-9</a> |
<a href="lex_a.htm">A</a> |
<a href="lex_b.htm">B</a> |
<a href="lex_c.htm">C</a> |
<a href="lex_d.htm">D</a> |
<a href="lex_e.htm">E</a> |
<a href="lex_f.htm">F</a> |
<a href="lex_g.htm">G</a> |
<a href="lex_h.htm">H</a> |
<a href="lex_i.htm">I</a> |
<a href="lex_j.htm">J</a> |
<a href="lex_k.htm">K</a> |
<a href="lex_l.htm">L</a> |
<a href="lex_m.htm">M</a> |
<a href="lex_n.htm">N</a> |
<a href="lex_o.htm">O</a> |
<a href="lex_p.htm">P</a> |
<a href="lex_q.htm">Q</a> |
<a href="lex_r.htm">R</a> |
<a href="lex_s.htm">S</a> |
<a href="lex_t.htm">T</a> |
<a href="lex_u.htm">U</a> |
<a href="lex_v.htm">V</a> |
<a href="lex_w.htm">W</a> |
<a href="lex_x.htm">X</a> |
<a href="lex_y.htm">Y</a> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
</body>

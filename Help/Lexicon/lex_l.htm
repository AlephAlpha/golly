<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<title>Life Lexicon (L)</title>
<meta name="author" content="Stephen A. Silver">
<meta name="description" content="Part of Stephen Silver's Life Lexicon.">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<link href="lifelex.css" rel="stylesheet" type="text/css">
<link rel="begin" type="text/html" href="lex.htm" title="Life Lexicon">
<base target="_top">
</head>
<body bgcolor="#FFFFCE">

<center><A HREF="lex.htm">Introduction</A> | <A HREF="lex_bib.htm">Bibliography</A></center></center>
<hr>
<center>
<font size=-1><b>
<A HREF="lex_1.htm">1-9</A> |
<A HREF="lex_a.htm">A</A> |
<A HREF="lex_b.htm">B</A> |
<A HREF="lex_c.htm">C</A> |
<A HREF="lex_d.htm">D</A> |
<A HREF="lex_e.htm">E</A> |
<A HREF="lex_f.htm">F</A> |
<A HREF="lex_g.htm">G</A> |
<A HREF="lex_h.htm">H</A> |
<A HREF="lex_i.htm">I</A> |
<A HREF="lex_j.htm">J</A> |
<A HREF="lex_k.htm">K</A> |
<A HREF="lex_l.htm">L</A> |
<A HREF="lex_m.htm">M</A> |
<A HREF="lex_n.htm">N</A> |
<A HREF="lex_o.htm">O</A> |
<A HREF="lex_p.htm">P</A> |
<A HREF="lex_q.htm">Q</A> |
<A HREF="lex_r.htm">R</A> |
<A HREF="lex_s.htm">S</A> |
<A HREF="lex_t.htm">T</A> |
<A HREF="lex_u.htm">U</A> |
<A HREF="lex_v.htm">V</A> |
<A HREF="lex_w.htm">W</A> |
<A HREF="lex_x.htm">X</A> |
<A HREF="lex_y.htm">Y</A> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
<p><a name=l112>:</a><b>L112</b> A <a href="lex_c.htm#compositeconduit">composite conduit</a>, one of the original sixteen
<a href="lex_h.htm#herschelconduit">Herschel conduits</a>, discovered by Dave Buckingham in July 1996. It
is made up of two <a href="lex_e.htm#elementaryconduit">elementary conduits</a>, HLx53B + <a href="lex_b.htm#bfx59h">BFx59H</a>. After
112 ticks, it produces a <a href="lex_h.htm#herschel">Herschel</a> turned 90 degrees
counterclockwise at (12, -33) relative to the input. Its
<a href="lex_r.htm#recoverytime">recovery time</a> is 61 ticks; this can be reduced slightly by removing
the output glider, either with a specialized eater (as in the
original <a href="lex_t.htm#true">true</a> p59 gun), or with a <a href="lex_s.htm#sparker">sparker</a> as in most of the
<a href="lex_q.htm#quetzal">Quetzal</a> guns. It can be made <a href="lex_s.htm#spartan">Spartan</a> by replacing the
<a href="lex_a.htm#aircraftcarrier">aircraft carrier</a> with an <a href="lex_e.htm#eater1">eater1</a>. A <a href="lex_g.htm#ghostherschel">ghost Herschel</a> in the
pattern below marks the output location:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...............OO.......
...............O........
.............OOO........
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
........................
.............OO.........
.............OO.........
....OO..................
....O..O................
OO....OO................
.O....................OO
.O.O..................O.
..OO................O.O.
....................OO..
........................
........................
........................
........................
........................
..O.....................
..O.O...................
..OOO...................
....O...................
........................
..............OO........
..............OO..OO....
..................O.O...
....................O...
....................OO..
</a></pre></td></tr></table></center>
<p><a name=l156>:</a><b>L156</b> A <a href="lex_c.htm#compositeconduit">composite conduit</a>, one of the original sixteen
<a href="lex_h.htm#herschelconduit">Herschel conduits</a>, discovered by Dave Buckingham in August 1996.
It is made up of three <a href="lex_e.htm#elementaryconduit">elementary conduits</a>, HLx69R + <a href="lex_r.htm#rf28b">RF28B</a> +
<a href="lex_b.htm#bfx59h">BFx59H</a>. After 156 ticks, it produces a <a href="lex_h.htm#herschel">Herschel</a> turned 90
degrees counterclockwise at (17, -41) relative to the input. Its
<a href="lex_r.htm#recoverytime">recovery time</a> is 62 ticks. It can be made <a href="lex_s.htm#spartan">Spartan</a> by replacing
the <a href="lex_s.htm#snake">snake</a> with an <a href="lex_e.htm#eater1">eater1</a> in one of two orientations. Additional
gliders can be produced by removing the southeasternmost eater, or by
replacing the RF28B elementary conduit by an alternate version. A
<a href="lex_g.htm#ghostherschel">ghost Herschel</a> in the pattern below marks the output location:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...................OO........
...................O.........
.................OOO.........
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.............................
.................OO..........
.................OO..........
.............................
........OO.O.................
........O.OO.................
..........................OO.
..........................O..
........................O.O..
........................OO...
.............................
.........O...................
.........OOO.................
O...........O................
OOO........OO..............O.
...O......................O.O
..OO.......................O.
.............................
.............................
.............................
.............................
.............................
.............................
.O....................OO.....
.O.O..................O.O....
.OOO....................O....
...O...........OO.......OO...
...............O.............
................OOO..........
..................O..........
</a></pre></td></tr></table></center>
<p><a name=lake>:</a><b>lake</b> (p1) Any still life consisting of a simple closed curve made
from diagonally connected <a href="lex_d.htm#domino">dominoes</a>. The smallest example is the
<a href="lex_p.htm#pond">pond</a>, and the next smallest is this (to which the term is sometimes
restricted):
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO....
...O..O...
...O..O...
.OO....OO.
O........O
O........O
.OO....OO.
...O..O...
...O..O...
....OO....
</a></pre></td></tr></table></center>
<p><a name=lane>:</a><b>lane</b> A path traveled by a glider, or less commonly a spaceship such
as a loafer. The lane is centered on the line of symmetry (if any)
of the spaceship in question. If a lane is clear, then the spaceship
can travel along it without colliding or interfering with any other
objects.
<p>Diagonal lanes are often numbered consecutively, in half-diagonals
(<a href="lex_h.htm#hd">hd</a>). Occasionally diagonal lane measurements are given in
quarter-diagonals (<a href="lex_q.htm#qd">qd</a>), in part because diagonally symmetric
spaceships have a line of symmetry 1qd away from the lines available
for gliders. It's also convenient that moving a glider forward by
100qd (for example) has the same effect as evolving the same glider
for 100 ticks.
<p><a name=laputa>:</a><b>Laputa</b> (p2) Found by Rich Schroeppel, September 1992.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...OO.OO....
...OO.O...OO
........O..O
.OOOOOO.OOO.
O..O.O......
OO...O.OO...
....OO.OO...
</a></pre></td></tr></table></center>
<p><a name=largeprimeoscillator>:</a><b>large prime oscillator</b> Any oscillator with a relatively small
<a href="lex_b.htm#boundingbox">bounding box</a> whose period is a very large prime. (If the
bounding-box restriction is removed, then eight gliders travelling in
a four-<a href="lex_s.htm#snark">Snark</a> loop would provide a trivial example for any chosen
prime.) The first such oscillator was built by Gabriel Nivasch in
2003. The current record holder is an oscillator constructed by Adam
P. Goucher with a period that is a Mersenne prime with 13,395 digits
(2<sup>44497</sup>-1).
<p>The next higher Mersenne-prime oscillator, period 2<sup>86243</sup>-1, could
be constructed with <a href="lex_q.htm#quadrisnark">quadri-Snarks</a> and <a href="lex_s.htm#semisnark">semi-Snarks</a>. It would
actually be significantly smaller than the current record holder. As
of June 2018 the construction of this pattern has not yet been
completed.
<p><a name=larges>:</a><b>large S</b> = <a href="lex_b.htm#bigs">big S</a>
<p><a name=lidka>:</a><b>Lidka</b> (stabilizes at time 29053) A <a href="lex_m.htm#methuselah">methuselah</a> found by Andrzej
Okrasinski in July 2005.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..........OOO..
..........O....
..........O...O
...........O..O
............OOO
...............
.O.............
O.O............
.O.............
</a></pre></td></tr></table></center>
The following variant, pointed out by David Bell, has two fewer cells
and lasts two generations longer.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..........OOO..
...............
...........OO.O
............O.O
..............O
...............
.O.............
O.O............
.O.............
</a></pre></td></tr></table></center>
<p><a name=life>:</a><b>Life</b> A 2-dimensional 2-state <a href="lex_c.htm#cellularautomaton">cellular automaton</a> discovered by John
Conway in 1970. The states are referred to as ON and OFF (or live
and dead). The transition rule is as follows: a cell that is ON will
remain ON in the next generation if and only if exactly 2 or 3 of the
8 adjacent cells are also ON, and a cell that is OFF will turn ON if
and only if exactly 3 of the 8 adjacent cells are ON. (This is more
succinctly stated as: "If 2 of your 8 nearest neighbours are ON,
don't change. If 3 are ON, turn ON. Otherwise, turn OFF.")
<p><a name=life32>:</a><b>Life32</b> A freeware Life program by Johan Bontes for Microsoft Windows
95/98/ME/NT/2000/XP: <a href="https://github.com/JBontes/Life32/">https://github.com/JBontes/Life32/</a>.
<p><a name=lifehistory>:</a><b>LifeHistory</b> A multistate CA rule supported by <a href="lex_g.htm#golly">Golly</a>, equivalent to
two-state B3/S23 Life but with several additional states intended for
annotation purposes. A "history" state records whether an off cell
has ever turned on in the past, and other states allow on and off
cells to be permanently or temporarily marked, without affecting the
<a href="lex_e.htm#evolution">evolution</a> of the pattern.
<p><a name=lifelab>:</a><b>LifeLab</b> A shareware Life program by Andrew Trevorrow for the
Macintosh (MacOS 8.6 or later): <a href="http://www.trevorrow.com/lifelab/">http://www.trevorrow.com/lifelab/</a>.
<p><a name=lifeline>:</a><b>LifeLine</b> A newsletter edited by Robert Wainwright from 1971 to 1973.
During this period it was the main forum for discussions about Life.
The newsletter was nominally quarterly, but the actual dates of its
eleven issues were as follows:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><font size=-1>
Mar, Jun, Sep, Dec 1971
Sep, Oct, Nov, Dec 1972
Mar, Jun, Sep 1973
</font></pre></td></tr></table></center>
<p><a name=lifenthusiast>:</a><b>Lifenthusiast</b> A Life enthusiast. Term coined by Robert Wainwright.
<p><a name=lifesrc>:</a><b>lifesrc</b> David Bell's Life <a href="lex_s.htm#searchprogram">search program</a> for finding new
<a href="lex_s.htm#spaceship">spaceships</a> and <a href="lex_o.htm#oscillator">oscillators</a>. This is a C implementation of an
algorithm developed by Dean Hickerson in 6502 assembler.
<p>Although lifesrc itself is a command-line program, Jason Summers
has made a GUI version called <a href="lex_w.htm#winlifesearch">WinLifeSearch</a> for Microsoft Windows.
A Java version, <a href="lex_j.htm#javalifesearch">JavaLifeSearch</a>, was written in November 2012 by
Karel Suhajda.
<p>The lifesrc algorithm is only useful for very small periods, as the
amount of computing power required rises rapidly with increasing
period. For most purposes, period 7 is the practical limit with
current hardware.
<p>Lifesrc is available from <a href="http://tip.net.au/~dbell/">http://tip.net.au/~dbell/</a> (source code
only). Compare <a href="lex_g.htm#gfind">gfind</a>.
<p><a name=lifeviewer>:</a><b>LifeViewer</b> A scriptable Javascript Life pattern viewer written by
Chris Rowett, used primarily on the conwaylife.com discussion forums.
<p><a name=lightbulb>:</a><b>light bulb</b> (p2) Found in 1971.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO.O..
.O.OO..
.......
..OOO..
.O...O.
.O...O.
..O.O..
O.O.O.O
OO...OO
</a></pre></td></tr></table></center>
The same <a href="lex_r.htm#rotor">rotor</a> can be embedded in a slightly smaller <a href="lex_s.htm#stator">stator</a> like
this:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O.....
.OOO.....
O........
OOOOOO...
......O..
..O...O..
..OO.O...
......OOO
........O
</a></pre></td></tr></table></center>
<p><a name=lightspeedbubble>:</a><b>lightspeed bubble</b> A type of <a href="lex_n.htm#negativespaceship">negative spaceship</a> travelling through
the <a href="lex_z.htm#zebrastripes">zebra stripes</a> agar. The center of the bubble is simple empty
space, and the length and/or width of the bubble can usually be
extended to any desired size.
<p>Below is a small stabilized section of agar containing a sample
lightspeed bubble, found by Gabriel Nivasch in August 1999. The
bubble travels to the left at the <a href="lex_s.htm#speedoflight">speed of light</a>, so it will
eventually reach the edge of any finite patch and destroy itself and
its supporting agar.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O...
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
.............................................................O
.OOOOOOOOOOOOO..OOO..OOO..OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
O..............OO...OO...OO........O..........................
.OOOOOOOOOOOOO...OO...OO...O.OO.O....OOOOOOOOOOOOOOOOOOOOOOOO.
.............................OO.....O........................O
.OOOOOOOOOOOOO.................OOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
O...............................O.............................
.OOOOOOOOOOOOO...................OOOOOOOOOOOOOOOOOOOOOOOOOOOO.
.................................O....O......................O
.OOOOOOOOOOOOO...................OO....OOOOOOOOOOOOOOOOOOOOOO.
O................................O.....O....O.................
.OOOOOOOOOOOOO...................OO....OO....OOOOOOOOOOOOOOOO.
.................................O.....O.....O....O..........O
.OOOOOOOOOOOOO...................OO....OO....OO....OOOOOOOOOO.
O................................O.....O.....O.....O....O.....
.OOOOOOOOOOOOO...................OO....OO....OO....OO....OOOO.
.................................O.....O.....O.....O.....O...O
.OOOOOOOOOOOOO...................OO....OO....OO....OO....OOOO.
O................................O.....O.....O.....O....O.....
.OOOOOOOOOOOOO...................OO....OO....OO....OOOOOOOOOO.
.................................O.....O.....O....O..........O
.OOOOOOOOOOOOO...................OO....OO....OOOOOOOOOOOOOOOO.
O................................O.....O....O.................
.OOOOOOOOOOOOO...................OO....OOOOOOOOOOOOOOOOOOOOOO.
.................................O....O......................O
.OOOOOOOOOOOOO...................OOOOOOOOOOOOOOOOOOOOOOOOOOOO.
O...............................O.............................
.OOOOOOOOOOOOO.................OOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
.............................OO.....O........................O
.OOOOOOOOOOOOO...OO...OO...O.OO.O....OOOOOOOOOOOOOOOOOOOOOOOO.
O..............OO...OO...OO........O..........................
.OOOOOOOOOOOOO..OOO..OOO..OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
.............................................................O
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
.O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O...
</a></pre></td></tr></table></center>
<p>An open problem related to lightspeed bubbles was whether large
extensible empty areas could be created whose length was not
proportional to the width (as it must be in the above case, due to
the tapering back edge). This was solved in February 2017 by Arie
Paap; a simple period-2 solution is shown below.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O...
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
O...........................................................O
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
.............................................................
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
O.....................................................O.....O
.OOOOOOOOOOOOOOOOOOOO..OOO..OOO..OOO..OOOOOOOO..OOOO...OOOOO.
......................OO...OO...OO...OO........OO.....O......
.OOOOOOOOOOOOOOOOOOOO...OO...OO...OO...OOOOOOO...O.OO..OOOOO.
O.........................................O........OO.......O
.OOOOOOOOOOOOOOOOOOOO......................OO.O......OOOOOOO.
...........................................O............O....
.OOOOOOOOOOOOOOOOOOOO......................O.............OOO.
O..........................................OO.....OO....O...O
.OOOOOOOOOOOOOOOOOOOO......................OO...OO...O.OOOOO.
...........................................O..O.OO...O.......
.OOOOOOOOOOOOOOOOOOOO......................O......OO...OOOOO.
O..........................................OO..........O....O
.OOOOOOOOOOOOOOOOOOOO......................OO..........OOOOO.
...........................................O......OO.O.......
.OOOOOOOOOOOOOOOOOOOO......................O..O.OO...O.OOOOO.
O..........................................OO...OO......O...O
.OOOOOOOOOOOOOOOOOOOO......................OO.....OO.....OOO.
...........................................O............O....
.OOOOOOOOOOOOOOOOOOOO......................O...........OOOOO.
O..........................................OO.....OO.OO.....O
.OOOOOOOOOOOOOOOOOOOO......................OO...OO...OO..OOO.
...........................................O..O.OO.....OO....
.OOOOOOOOOOOOOOOOOOOO......................O......OO....OOOO.
O..........................................OO...............O
.OOOOOOOOOOOOOOOOOOOO......................OO...........OOOO.
...........................................O......OO...OO....
.OOOOOOOOOOOOOOOOOOOO......................O..O.OO...OO..OOO.
O..........................................OO...OO...OO.....O
.OOOOOOOOOOOOOOOOOOOO......................OO.....OO...OOOOO.
...........................................O............O....
.OOOOOOOOOOOOOOOOOOOOOO.....O.....O.....O..O.O...........OOO.
O.........................OO....OO....OO...O...O.O.......O..O
.OOOOOOOOOOOOOOOOOOOOOOOO.OO.OO.OO.OO.OO.OOOOOOOOO.......OOO.
........................................................O....
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO...OOOOOOO.
O..................................................OO.......O
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO..OOOOOOOO.
.............................................................
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
O...........................................................O
.OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.
...O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O..O...
</a></pre></td></tr></table></center>
<p><a name=lightspeedribbon>:</a><b>lightspeed ribbon</b> = <a href="lex_s.htm#superstring">superstring</a>
<p><a name=lightspeedtelegraph>:</a><b>lightspeed telegraph</b> = <a href="lex_t.htm#telegraph">telegraph</a>.
<p><a name=lightspeedwire>:</a><b>lightspeed wire</b> Any <a href="lex_w.htm#wick">wick</a> that can <a href="lex_b.htm#burn">burn</a> non-destructively at the
speed of light. Lightspeed wires are a type of <a href="lex_r.htm#reburnablefuse">reburnable fuse</a>.
These are potentially useful for various things, but so far the
necessary mechanisms are very large and unwieldy. In October 2002,
Jason Summers discovered a lightspeed reaction travelling through an
orthogonal chain of beehives. Summers completed a period-1440
lightspeed <a href="lex_t.htm#telegraph">telegraph</a> based on this reaction in 2003.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...O...........................................................
.O...O.........................................................
.O....O....OO.OO...............................................
O......O...OOOOOO...OO...OO...OO...OO...OO...OO...OO...OO...OO.
O......O..O......O.O..O.O..O.O..O.O..O.O..O.O..O.O..O.O..O.O..O
OO.....O...OOOOOO...OO...OO...OO...OO...OO...OO...OO...OO...OO.
......O....OO.OO...............................................
....O..........................................................
</a></pre></td></tr></table></center>
<p>A <a href="lex_s.htm#stable">stable</a> lightspeed <a href="lex_t.htm#transceiver">transceiver</a> mechanism using this same
signal reaction, the <a href="lex_p.htm#p1telegraph">p1 telegraph</a>, was constructed by Adam P.
Goucher in 2010; the bounding boxes of both the <a href="lex_t.htm#transmitter">transmitter</a> and
<a href="lex_r.htm#receiver">receiver</a> are over 5000 cells on a side. A more compact periodic
<a href="lex_h.htm#highbandwidthtelegraph">high-bandwidth telegraph</a> with a much improved transmission rate was
completed by Louis-Fran&ccedil;ois Handfield in 2017.
<p>The following diagram shows an older example of a lightspeed wire,
with a small defect that travels along it at the speed of light. As
of June 2018, no method has been found of creating such a defect in
the upstream end of this particular stable wire, or of
non-destructively detecting the arrival of the defect and repairing
the wire at the downstream end.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO....
....OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO....
..........................................................
..OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO..
.O......O...............................................O.
O.OOOOO....OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.O
.O.....O................................................O.
..OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO..
..........................................................
....OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO....
....OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO..OO....
</a></pre></td></tr></table></center>
<p><a name=lightweightemulator>:</a><b>lightweight emulator</b> = <a href="#lwemulator">LW emulator</a>
<p><a name=lightweightspaceship>:</a><b>lightweight spaceship</b> = <a href="#lwss">LWSS</a>
<p><a name=lightweightvolcano>:</a><b>lightweight volcano</b> = <a href="lex_t.htm#toaster">toaster</a>
<p><a name=lineargrowth>:</a><b>linear growth</b> A growth rate proportional to T, where T is the number
of ticks that a pattern has been run. Compare <a href="lex_s.htm#superlineargrowth">superlinear growth</a>,
<a href="lex_q.htm#quadraticgrowth">quadratic growth</a>.
<p><a name=linearpropagator>:</a><b>linear propagator</b> A self-replicating pattern in which each copy of a
pattern produces one child that is an exact copy of itself. The
child pattern then blocks the parent from any further replication.
An example was constructed by Dave Greene on 23 November 2013, with a
construction arm using two glider lanes separated by <a href="lex_1.htm#a-9hd">9hd</a>. By some
definitions, due to its limited one-dimensional growth pattern, the
linear propagator is not a true replicator. Compare
<a href="lex_q.htm#quadraticreplicator">quadratic replicator</a>.
<p><a name=linecrosser>:</a><b>line crosser</b> A pattern which is able to send a signal across an
infinite diagonal line of live cells without destroying the line.
David Bell built one in August 2006. It uses many one-shot period
44160 <a href="lex_g.htm#glidergun">glider guns</a> on both sides of the line having the proper
synchronization to create the reactions shown in
<a href="#linecuttingreaction">line-cutting reaction</a> and <a href="#linemendingreaction">line-mending reaction</a>.
<p>An input glider can arrive at any multiple of 44160 generations to
first cut the line, then send a glider through the gap, and finally
mend the line while leaving an output glider on the other side.
<p>A line crosser whose complete mechanism is on one side of the line
is theoretically possible, using <a href="lex_s.htm#singlechannel">single-channel</a> construction
methods for example.
<p><a name=linecuttingreaction>:</a><b>line-cutting reaction</b> A reaction that can cut an infinite diagonal
line of cells, leaving a gap with both ends sealed. Such a reaction
is demonstrated below. In actual use the reaction should be spread
out so that the incoming <a href="#lwss">LWSSes</a> don't conflict. See
<a href="#linemendingreaction">line-mending reaction</a> for a way to mend the gap.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.........................OO.................................
............OO...........O..................................
..........OO.OO...........O.................................
..........OOOO.............O................................
...........OO...............O...............................
................OO...........O..............................
...............O.O............O.............................
.................O.............O............................
................................O...........................
.................................O..........................
..................................O.........................
...................................O........................
.......................O............O.......................
......................OOO............O......................
......................O.OO............O.....................
O..O...................OOO.............O....................
....O..................OO...............O...................
O...O....................................O..................
.OOOO.....................................O.................
...........................................O................
............................................O...............
.............................................O..............
...................................OO.........O.............
....................................OO.........O............
...................................O............O...........
.................................................O..........
..................................................O.........
.....................................OOO...........O........
....................................O..O............O.......
.......................................O.............O......
.......................................O..............O.....
....................................O.O................O....
........................................................O...
.........................................................O.O
.......OOO................................................OO
.........O............OO......OOO..........OOOO.............
........O............O.O........O.........O...O.............
.......................O.......O..............O.............
..........................................O..O..............
............................................................
............................................................
............................................................
....................................................OO......
.....................................................OO.....
....................................................O.......
............................................................
........................................................OOO.
........................................................O..O
........................................................O...
........................................................O...
.........................................................O.O
.......................OO...................................
......................O.O...................................
........................O...................................
............................................................
..........................................O.................
.........................................OOO................
.........................................O.OO...............
..........................................OOO...............
..........................................OO................
</a></pre></td></tr></table></center>
<p><a name=linemendingreaction>:</a><b>line-mending reaction</b> A reaction which can fully mend a sealed gap in
an infinite diagonal line of cells, such as the one produced by a
<a href="#linecuttingreaction">line-cutting reaction</a>. Such a reaction is demonstrated below. See
the line cutting reaction for a way of creating the gliders
travelling parallel to the line.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...........OO.............................................
...........O..............................................
............O.............................................
...O.O.......O............................................
....OO........O...........................................
....O..........O..........................................
................O...................................O.....
.................O................................OO......
..................O................................OO.....
...................O......................................
....................O.....................................
.....................O.....................O.O............
......................O....................OO.............
.......................O....................O.............
........................O.................................
.........................O................................
..........................O...............O...............
...........................O.............O................
............................O............OOO..............
.............................O............................
............................OO............................
..........................................................
..........................................................
..........................................................
...........................................O.O............
...........................................OO.......O..O..
............................................O......O......
...................................OOO.............O...O..
.....................................O.............OOOO...
....................................O.....................
.......................................OO.................
.......................................O.O................
..........................................O...............
...........................................O..............
...............................OO...........O.............
..............................O.O............O............
................................O.............O.......OO..
.............O..........................OO.....O.....OO...
.............OO.........................O.O.....O......O..
............O.O.....OO..................O........O........
...................O.O............................O.......
.O...................O.............................O......
.OO.....O...........................................O.....
O.O.....OO...........................................O....
.......O.O............................................O...
.......................................................O.O
........................................................OO
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
.................................O........................
................................OOO.......................
...............................OO.O.......................
...............................OOO........................
................................OO........................
</a></pre></td></tr></table></center>
<p>This reaction uses spaceships on both sides of the line which need
to be synchronized to each other, for example by passing a glider
through the gap to trigger the creation of the required spaceships
and gliders.
<p>No simple mechanism is known to mend the gap which lies completely
on one side of the line. However, it is technically possible to use
<a href="lex_c.htm#constructionarm">construction arm</a> <a href="lex_t.htm#technology">technology</a> to push objects through the gap to
build and trigger a <a href="lex_s.htm#seed">seed</a> for the required <a href="lex_s.htm#synchronized">synchronized</a> <a href="lex_s.htm#signal">signals</a>
on the other side.
<p><a name=linepuffer>:</a><b>line puffer</b> A <a href="lex_p.htm#puffer">puffer</a> which produces its output by means of an
orthogonal line of cells at right angles to the direction of travel.
The archetypal line puffer was found by Alan Hensel in March 1994,
based on a <a href="lex_s.htm#spaceship">spaceship</a> found earlier that month by Hartmut Holzwart.
The following month Holzwart found a way to make <a href="lex_e.htm#extensible">extensible</a> <i>c</i>/2
line puffers, and Hensel found a much smaller stabilization the
following day. But in October 1995 Tim Coe discovered that for large
widths these were often unstable, although typically lasting millions
of generations. In May 1996, however, Coe found a way to fix the
instability. The resulting puffers appear to be completely stable
and to exhibit an exponential increase in period as a function of
width, although neither of these things has been proved.
<p>Line puffers have enabled the construction of various difficult
periods for <i>c</i>/2 spaceships and puffers, including occasionally
periods which are not multiples of 4 and which would therefore be
impossible to attain with the usual type of construction based on
<a href="lex_s.htm#standardspaceship">standard spaceships</a>. (See <a href="lex_f.htm#frothingpuffer">frothing puffer</a> for another method of
constructing such periods.) In particular, the first <i>c</i>/2 <a href="lex_r.htm#rake">rake</a> with
period not divisible by 4 was achieved in January 2000 when David
Bell constructed a p42 <a href="lex_b.htm#backrake">backrake</a> by means of line puffers.
<p>See also <a href="lex_h.htm#hivenudger">hivenudger</a> and <a href="lex_p.htm#puffsuppressor">puff suppressor</a>.
<p><a name=lineship>:</a><b>line ship</b> A <a href="lex_s.htm#spaceship">spaceship</a> in which the front end is a <a href="#linestretcher">linestretcher</a>,
the line being eaten by the back end.
<p><a name=linestretcher>:</a><b>linestretcher</b> A <a href="lex_w.htm#wickstretcher">wickstretcher</a> that stretches a single diagonal line
of cells. The first example was constructed by Jason Summers in
March 1999; this was <i>c</i>/12 and used <a href="lex_s.htm#switchengine">switch engine</a> based puffers
found earlier by Dean Hickerson. The first <i>c</i>/4 example was found by
Hartmut Holzwart in November 2004.
<p><a name=loadingdock>:</a><b>loading dock</b> (p3) Found by Dave Buckingham, September 1972.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....O....
..OOO....
.O...OO..
O.OO...O.
.O...OO.O
..OO...O.
....OOO..
....O....
</a></pre></td></tr></table></center>
<p><a name=loaf>:</a><b>loaf</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO.
O..O
.O.O
..O.
</a></pre></td></tr></table></center>
<p><a name=loafer>:</a><b>loafer</b> (<i>c</i>/7 orthogonally, p7) A small <a href="lex_c.htm#c7spaceship">c/7 spaceship</a> discovered by
Josh Ball on 17 February 2013:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO..O.OO
O..O..OO.
.O.O.....
..O......
........O
......OOO
.....O...
......O..
.......OO
</a></pre></td></tr></table></center>
<p>It has a known 8-glider construction recipe, probably not minimal,
discovered on the following day:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.................................O
...............................OO.
................................OO
.........O........................
.O........O.......................
..O.....OOO.......................
OOO...............................
..................................
..................................
.....O............................
......O...........................
....OOO...........................
........................O.O.......
.........................OO.......
.........................O........
..................................
...........................O.O....
...........................OO.....
............................O.....
...............................OOO
...............................O..
................................O.
..................................
..................................
..................................
..................................
..................................
..................................
.....OO...........................
......OO..........................
.....O............................
</a></pre></td></tr></table></center>
The loafer was therefore the first new glider-constructible spaceship
in almost a decade. (A <a href="lex_g.htm#glidersynthesis">glider synthesis</a> for a 2<i>c</i>/5 ship,
<a href="lex_1.htm#a-60p5h2v0">60P5H2V0</a>, was found in March 2003.)
<p><a name=loaflipflop>:</a><b>loaflipflop</b> (p15) Here four <a href="lex_p.htm#pentadecathlon">pentadecathlons</a> <a href="lex_h.htm#hassle">hassle</a> a <a href="#loaf">loaf</a>.
Found by Robert Wainwright in 1990.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
................O.................
...............OOO................
..................................
..................................
...............OOO................
..................................
...............O.O................
...............O.O................
..................................
...............OOO................
..................................
..................................
...............OOO................
................O.................
..................................
.O..O.OO.O..O...............OO....
OO..O....O..OO...OO.......O....O..
.O..O.OO.O..O...O..O.....O......O.
................O.O.....O........O
.................O......O........O
........................O........O
.........................O......O.
..........................O....O..
............................OO....
..................OOO.............
.................O...O............
................O.....O...........
..................................
...............O.......O..........
...............O.......O..........
..................................
................O.....O...........
.................O...O............
..................OOO.............
</a></pre></td></tr></table></center>
<p><a name=loafonloaf>:</a><b>loaf on loaf</b> = <a href="lex_b.htm#biloaf">bi-loaf</a>
<p><a name=loafpull>:</a><b>loaf pull</b> The following glider/loaf collision, which pulls a loaf
(3,1) toward the glider source:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O.....
O.O....
O..O...
.OO....
.......
.......
....OOO
....O..
.....O.
</a></pre></td></tr></table></center>
<p><a name=loafsiamesebarge>:</a><b>loaf siamese barge</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO.
.O..O
O.O.O
.O.O.
..O..
</a></pre></td></tr></table></center>
<p><a name=lobster>:</a><b>lobster</b> (<i>c</i>/7 diagonally, p7) A spaceship discovered by Matthias
Merzenich in August 2011, the first diagonally travelling
<a href="lex_c.htm#c7spaceship">c/7 spaceship</a> to be found. It consists of two <a href="lex_g.htm#glider">gliders</a> pulling a
<a href="lex_t.htm#tagalong">tagalong</a> that then rephases them.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
............OOO...........
............O.............
.............O..OO........
................OO........
............OO............
.............OO...........
............O..O..........
..........................
..............O..O........
..............O...O.......
...............OOO.O......
....................O.....
OO..O.O.............O.....
O.O.OO.............O......
O....O..OO.............OO.
......O...O......OO..OO..O
..OO......O......O..O.....
..OO....O.O....OO.........
.........O.....O...O...O..
..........O..O....OO......
...........OO...O.....O.O.
...............O........OO
...............O....O.....
..............O...O.......
..............O.....OO....
...............O.....O....
</a></pre></td></tr></table></center>
<p><a name=logarithmicgrowth>:</a><b>logarithmic growth</b> A pattern whose <a href="lex_p.htm#population">population</a> or <a href="lex_b.htm#boundingbox">bounding box</a>
grows no faster than logarithmically, asymptotic to <i>n</i>.log(<i>t</i>) for some
constant <i>n</i>. The first such pattern constructed was the
<a href="lex_c.htm#cabertosser">caber tosser</a> whose population is logarithmic, but whose bounding
box still grows linearly. The first pattern whose bounding box and
population both grow logarithmically was constructed by Jason Summers
with Gabriel Nivasch in 2003. For a pattern with a slower growth
rate than this, see <a href="lex_o.htm#osqrtlogt">Osqrtlogt</a>.
<p><a name=lom>:</a><b>LoM</b> = <a href="#lumpsofmuck">lumps of muck</a>
<p><a name=lonedotagar>:</a><b>lone dot agar</b> An <a href="lex_a.htm#agar">agar</a> in which every live cell is isolated in every
generation. There are many different lone dot agars. All of them
are <a href="lex_p.htm#phoenix">phoenixes</a>. In 1995 Dean Hickerson and Alan W. Hensel found
stabilizations for finite patches of ten lone dot agars to create
period 2 oscillators. One of these is shown below:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO..OO..OO..OO..OO..OO..OO..OO....
....O..O.O..O..O.O..O..O.O..O..O.O....
.....O.......O.......O.......O........
........O.......O.......O.......O.....
OO..O.O.....O.O.....O.O.....O.O.....OO
O.O.....O.O.....O.O.....O.O.....O.O..O
....O.......O.......O.......O.......O.
.O.......O.......O.......O.......O....
O..O.O.....O.O.....O.O.....O.O.....O.O
OO.....O.O.....O.O.....O.O.....O.O..OO
.....O.......O.......O.......O........
........O.......O.......O.......O.....
OO..O.O.....O.O.....O.O.....O.O.....OO
O.O.....O.O.....O.O.....O.O.....O.O..O
....O.......O.......O.......O.......O.
.O.......O.......O.......O.......O....
O..O.O.....O.O.....O.O.....O.O.....O.O
OO.....O.O.....O.O.....O.O.....O.O..OO
.....O.......O.......O.......O........
........O.......O.......O.......O.....
OO..O.O.....O.O.....O.O.....O.O.....OO
O.O.....O.O.....O.O.....O.O.....O.O..O
....O.......O.......O.......O.......O.
.O.......O.......O.......O.......O....
O..O.O.....O.O.....O.O.....O.O.....O.O
OO.....O.O.....O.O.....O.O.....O.O..OO
.....O.......O.......O.......O........
........O.......O.......O.......O.....
OO..O.O.....O.O.....O.O.....O.O.....OO
O.O.....O.O.....O.O.....O.O.....O.O..O
....O.......O.......O.......O.......O.
.O.......O.......O.......O.......O....
O..O.O.....O.O.....O.O.....O.O.....O.O
OO.....O.O.....O.O.....O.O.....O.O..OO
.....O.......O.......O.......O........
........O.......O.......O.......O.....
....O.O..O..O.O..O..O.O..O..O.O..O....
....OO..OO..OO..OO..OO..OO..OO..OO....
</a></pre></td></tr></table></center>
<p><a name=lonelybee>:</a><b>lonely bee</b> = <a href="lex_w.htm#workerbee">worker bee</a>
<p><a name=long>:</a><b>long</b> A term applied to an object that is of the same basic form as
some standard object, but longer. For examples see <a href="#longbarge">long barge</a>,
<a href="#longboat">long boat</a>, <a href="#longbookend">long bookend</a>, <a href="#longcanoe">long canoe</a>, <a href="#longshillelagh">long shillelagh</a>,
<a href="#longship">long ship</a> and <a href="#longsnake">long snake</a>.
<p><a name=long3>:</a><b>long^3</b> The next degree of longness after <a href="#longlong">long long</a>. Some people
prefer "extra long".
<p><a name=long4>:</a><b>long^4</b> The next degree of longness after <a href="#long3">long^3</a>. Some people
prefer "extra extra long".
<p><a name=longbarge>:</a><b>long barge</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O...
O.O..
.O.O.
..O.O
...O.
</a></pre></td></tr></table></center>
<p><a name=longboat>:</a><b>long boat</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O..
O.O.
.O.O
..OO
</a></pre></td></tr></table></center>
A long boat can be used as a 90-degree or 180-degree <a href="lex_o.htm#onetime">one-time</a>
<a href="lex_t.htm#turner">turner</a>.
<p><a name=longbookend>:</a><b>long bookend</b> The following <a href="lex_i.htm#inductioncoil">induction coil</a>, longer than a <a href="lex_b.htm#bookend">bookend</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
...OO
O...O
OOOO.
</a></pre></td></tr></table></center>
<p><a name=longcanoe>:</a><b>long canoe</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
....OO
.....O
....O.
...O..
O.O...
OO....
</a></pre></td></tr></table></center>
<p><a name=longhat>:</a><b>long hat</b> = <a href="#loop">loop</a>
<p><a name=longhook>:</a><b>long hook</b> = <a href="#longbookend">long bookend</a>
<p><a name=longhouse>:</a><b>long house</b> = <a href="lex_d.htm#dock">dock</a>
<p><a name=longintegral>:</a><b>long integral</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO
.O.O
.O..
..O.
O.O.
OO..
</a></pre></td></tr></table></center>
<p><a name=longlong>:</a><b>long long</b> The next degree of longness after <a href="#long">long</a>. Some people
prefer "very long".
<p><a name=longlongbarge>:</a><b>long long barge</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O....
O.O...
.O.O..
..O.O.
...O.O
....O.
</a></pre></td></tr></table></center>
<p><a name=longlongboat>:</a><b>long long boat</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O...
O.O..
.O.O.
..O.O
...OO
</a></pre></td></tr></table></center>
<p><a name=longlongcanoe>:</a><b>long long canoe</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....OO
......O
.....O.
....O..
...O...
O.O....
OO.....
</a></pre></td></tr></table></center>
<p><a name=longlongship>:</a><b>long long ship</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO...
O.O..
.O.O.
..O.O
...OO
</a></pre></td></tr></table></center>
<p><a name=longlongsnake>:</a><b>long long snake</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO....
O.O...
...O.O
....OO
</a></pre></td></tr></table></center>
<p><a name=longshillelagh>:</a><b>long shillelagh</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO..OO
O..O.O
.OO...
</a></pre></td></tr></table></center>
<p><a name=longship>:</a><b>long ship</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO..
O.O.
.O.O
..OO
</a></pre></td></tr></table></center>
<p><a name=longsinkingship>:</a><b>long sinking ship</b> = <a href="#longcanoe">long canoe</a>
<p><a name=longsnake>:</a><b>long snake</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
OO...
O.O.O
...OO
</a></pre></td></tr></table></center>
<p><a name=loop>:</a><b>loop</b> (p1)
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OO..
O..O.
.O.O.
OO.OO
</a></pre></td></tr></table></center>
<p><a name=loopingspaceship>:</a><b>looping spaceship</b> = <a href="lex_r.htm#reflectorlessrotatingoscillator">reflectorless rotating oscillator</a>
<p><a name=losslesselbow>:</a><b>lossless elbow</b> A stationary <a href="lex_e.htm#elbow">elbow</a> in a <a href="lex_c.htm#constructionarm">construction arm</a> <a href="lex_t.htm#toolkit">toolkit</a>
that allows a <a href="lex_r.htm#recipe">recipe</a> to turn a corner with no exponential increase
in construction cost. Compare <a href="lex_s.htm#slowelbow">slow elbow</a>. It is theoretically
possible to construct lossless elbows for early construction arms
such as the one in the <a href="lex_1.htm#a-10hddemonoid">10hd Demonoid</a>, but these would currently
have to be very large.
<p>The lossless elbow that has been used the most in practice is the
<a href="lex_s.htm#snark">Snark</a>, which can be constructed directly on a <a href="lex_s.htm#singlechannel">single-channel</a>
<a href="lex_c.htm#constructionlane">construction lane</a> using a <a href="lex_s.htm#snarkmaker">Snarkmaker</a> <a href="lex_r.htm#recipe">recipe</a>. Controlled
demolition of a Snark is also possible, to remove a temporary elbow
that is no longer needed, and leave a <a href="lex_h.htm#hand">hand</a> target in its place if
necessary for further construction.
<p>A <a href="lex_s.htm#silverreflector">Silver reflector</a> was used as a lossless elbow in the first
<a href="lex_s.htm#spiralgrowth">spiral growth</a> pattern, attached to a separate
<a href="lex_u.htm#universalconstructor">universal constructor</a> component.
<p><a name=lowdensitylife>:</a><b>low-density Life</b> = <a href="lex_s.htm#sparselife">sparse Life</a>
<p><a name=lumpsofmuck>:</a><b>lumps of muck</b> The common evolutionary sequence that ends in the
<a href="lex_b.htm#blockade">blockade</a>. The name is sometimes used of the blockade itself, and
can in general be used of any stage of the evolution of the
<a href="lex_s.htm#stairstephexomino">stairstep hexomino</a>.
<p><a name=lwemulator>:</a><b>LW emulator</b> (p4) The smallest (and least useful) <a href="lex_e.htm#emulator">emulator</a>, found by
Robert Wainwright in June 1980.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
..OO.O..O.OO..
..O........O..
...OO....OO...
OOO..OOOO..OOO
O..O......O..O
.OO........OO.
</a></pre></td></tr></table></center>
<p><a name=lwss>:</a><b>LWSS</b> (<i>c</i>/2 orthogonally, p4) A lightweight spaceship, the smallest
known orthogonally moving <a href="lex_s.htm#spaceship">spaceship</a>, and the second most common
(after the <a href="lex_g.htm#glider">glider</a>). Found by Conway when one formed from a random
soup in 1970. See also <a href="lex_m.htm#mwss">MWSS</a> and <a href="lex_h.htm#hwss">HWSS</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O..O
O....
O...O
OOOO.
</a></pre></td></tr></table></center>
<p>The LWSS possesses a <a href="lex_t.htm#tailspark">tail spark</a> which can easily <a href="lex_p.htm#perturb">perturb</a> other
objects which grow into its path. The spaceship can also perturb
some objects in additional ways. For examples, see <a href="lex_b.htm#blinkership">blinker ship</a>,
<a href="lex_h.htm#hivenudger">hivenudger</a>, and <a href="lex_p.htm#puffertrain">puffer train</a>.
<p>Dave Buckingham found that the LWSS can be synthesized in several
different ways using three gliders, and can be constructed from two
gliders and another small object in several more ways. Here is the
fastest <a href="lex_s.htm#synthesis">synthesis</a>:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.O.....
O......
OOO....
.....OO
....OO.
......O
.......
..OO...
...OO..
..O....
</a></pre></td></tr></table></center>
<p><a name=lwssemulator>:</a><b>LWSS emulator</b> = <a href="#lwemulator">LW emulator</a>
<p><a name=lwssgliderbounce>:</a><b>LWSS-glider bounce</b> The following reaction in which a <a href="#lwss">LWSS</a> and a
<a href="lex_g.htm#glider">glider</a> collide to form a glider heading back between the two input
paths:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.OOOO........
O...O........
....O.....OOO
O..O......O..
...........O.
</a></pre></td></tr></table></center>
This is one way to <a href="lex_i.htm#inject">inject</a> a glider into a existing glider stream.
The <a href="lex_i.htm#infinitegliderhotel">infinite glider hotel</a> uses this reaction.
<p><a name=lwsslwssbounce>:</a><b>LWSS-LWSS bounce</b> The following <a href="lex_s.htm#symmetric">symmetric</a> reaction in which two
<a href="#lwss">LWSSs</a> collide head-on to form two <a href="lex_g.htm#glider">gliders</a> heading apart at 90
degrees from each other. Compare <a href="#lwsslwssdeflection">LWSS-LWSS deflection</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
O..O.......O..O
....O.....O....
O...O.....O...O
.OOOO.....OOOO.
</a></pre></td></tr></table></center>
This provides one way to <a href="lex_i.htm#inject">inject</a> a <a href="lex_g.htm#glider">glider</a> into a existing glider
stream. Another use is described in <a href="lex_m.htm#metamorphosis">metamorphosis</a>.
<p><a name=lwsslwssdeflection>:</a><b>LWSS-LWSS deflection</b> The following symmetric reaction in which two
LWSSs collide nearly head-on to form two gliders heading apart at 180
degrees from each other. Compare <a href="#lwsslwssbounce">LWSS-LWSS bounce</a>.
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.........O..O
........O....
........O...O
........OOOO.
.............
.OOOO........
O...O........
....O........
O..O.........
</a></pre></td></tr></table></center>
<p><a name=lwsstog>:</a><b>LWSS-to-G</b> See <a href="lex_1.htm#a-135degreemwsstog">135-degree MWSS-to-G</a>.
<p><a name=lwtds>:</a><b>LWTDS</b> Life Worker Time Deficiency Syndrome. Term coined by Dieter
Leithner to describe the problem of having to divide scarce time
between Life and real life.
<p><a name=lwvolcano>:</a><b>LW volcano</b> = <a href="lex_t.htm#toaster">toaster</a>
<p><a name=lx200>:</a><b>Lx200</b> A <a href="lex_c.htm#compositeconduit">composite conduit</a>, one of the original sixteen
<a href="lex_h.htm#herschelconduit">Herschel conduits</a>, discovered by Paul Callahan in June 1997. It is
made up of two <a href="lex_e.htm#elementaryconduit">elementary conduits</a>, HL141B + <a href="lex_b.htm#bfx59h">BFx59H</a>. The Lx200
and <a href="lex_f.htm#f166">F166</a> conduits are the two original <a href="lex_d.htm#dependentconduit">dependent conduits</a>
(several more have since been discovered.) After 200 ticks, it
produces an inverted <a href="lex_h.htm#herschel">Herschel</a> turned 90 degrees counterclockwise at
(17, -40) relative to the input. Its <a href="lex_r.htm#recoverytime">recovery time</a> is 90 ticks.
It can be made <a href="lex_s.htm#spartan">Spartan</a> by replacing the <a href="lex_s.htm#snake">snakes</a> with <a href="lex_e.htm#eater1">eater1s</a> in
one of two orientations. A <a href="lex_g.htm#ghostherschel">ghost Herschel</a> in the pattern below
marks the output location:
<center><table cellspacing=0 cellpadding=0><tr><td><pre><a href="lexpatt:">
.....................OO.............
......................O.............
......................OOO...........
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
.......................OO...........
.......................OO...........
....................................
..............................O.OO..
..............................OO.O..
....................................
....................................
..............O.OO..................
..............OO.O..................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
................................OO..
................................O.O.
.OO...............................O.
OOO.OO............................OO
.OO.OOO.OO..........................
OOO.OO..OO..........................
OO..................................
....................................
....................................
....................................
................................OO..
................................OO..
....................................
......OO............................
.......O............................
....OOO.........................OO..
....O...........................OO..
..................OO................
.................O.O................
.................O..................
................OO........OO........
..........................O.........
...........................OOO......
.............................O......
</a></pre></td></tr></table></center>
The input shown here is a <a href="lex_h.htm#herschelgreatgrandparent">Herschel great-grandparent</a>, since the
input reaction is catalysed by the <a href="lex_t.htm#transparent">transparent</a> block before the
Herschel's standard form can appear.
<hr>
<center>
<font size=-1><b>
<a href="lex_1.htm">1-9</a> |
<a href="lex_a.htm">A</a> |
<a href="lex_b.htm">B</a> |
<a href="lex_c.htm">C</a> |
<a href="lex_d.htm">D</a> |
<a href="lex_e.htm">E</a> |
<a href="lex_f.htm">F</a> |
<a href="lex_g.htm">G</a> |
<a href="lex_h.htm">H</a> |
<a href="lex_i.htm">I</a> |
<a href="lex_j.htm">J</a> |
<a href="lex_k.htm">K</a> |
<a href="lex_l.htm">L</a> |
<a href="lex_m.htm">M</a> |
<a href="lex_n.htm">N</a> |
<a href="lex_o.htm">O</a> |
<a href="lex_p.htm">P</a> |
<a href="lex_q.htm">Q</a> |
<a href="lex_r.htm">R</a> |
<a href="lex_s.htm">S</a> |
<a href="lex_t.htm">T</a> |
<a href="lex_u.htm">U</a> |
<a href="lex_v.htm">V</a> |
<a href="lex_w.htm">W</a> |
<a href="lex_x.htm">X</a> |
<a href="lex_y.htm">Y</a> |
<A href="lex_z.htm">Z</A></b></font>

</center>
<hr>
</body>

For post-alpha version (1.5 or 2.0?):
-------------------------------------

Andrew's list:

- Fix glitches in the way the algo button works:
  - On Mac we want button to look selected before menu appears.
  - On Win we want to be able to press-select-release.

- Implement scripting changes:
  - numalgos() returns # of algorithms.
  - setalgo(name) sets algo to given name.
  - getalgo(index=current) returns name of algo at given index in
    menu (0..numalgos-1) or current algo if index is not supplied.
  - Provide commands to get/set colors if # states > 2.
  - Decide how to handle cell lists if # states > 2.
    Maybe such lists contain 3 ints per cell:
    [ x1, y1, s1, x2, y2, s2, . . . xn, yn, sn ]

- Improve edit bar:
  - Allow bar to scroll left-right (via arrows or shift-click-and-drag?).
  - Let user change colors by ctrl/right-click.
  - Move all cursor mode buttons into edit bar (at bottom?).
  - Add new buttons: eraser, eye-dropper, fill, etc?

- Allow users to override default icons by looking for and loading
  special files like JvN7.xpm (look in golly dir then user data dir?).

- Resolve how to handle swapcolors flag if # states > 2.
  Remove flag completely?  Or just ignore it when # states > 2.
  What about colors used when layers are stacked?

- Rename Hashing-Examples to HashLife-Examples (or just HashLife?)
  and convert all files to .mc format (with explicit rules).

- Avoid any remaining algo assumptions (search *_ALGO):
  - Need IsParityShifted() method to avoid QLIFE_ALGO assumption?

- Fix Set Rule dialog so the text is different depending on the
  current algo -- probably need a new getRuleHelpText() method.

- Need some way to display info about the current algorithm,
  perhaps via a new Algorithm Info item in Control menu that
  displays text (from algo's static data) in a Note dialog
  or in Info window.

- May need check boxes in Prefs > Control (initially ticked):
  * Warn me about rule/pattern changes when switching algorithms
  * Warn me about pattern changes when switching rules

- Remove SlowLife (simply comment out 1 line in wxalgos.cpp).

- Check all !!!/FIXME comments in code and try to remove.

- Update docs (Help files, BUILD notes, README, etc).

- At this point release a beta version of Golly 2.0.  Probably enough
  significant changes to justify a major version increment.

Tom's list:

File I/O

- Describe RLE/MC formats in Help/formats.html (Andrew will add new
  Help > File Formats item).
- Have hlifealgo .mc compatible with ghashbase .mc
- Generalized RLE in MC?

Algos

- Replace WireWorld with generalized Rules Tables (lift rule length
  limit everywhere needed)
- EJVN
- Make ghashbase() check for high cell states on rule change
- Unzoom color merging
- Better status reports (% of hashtable full)

Scripting

- Tape construction script for replicator

Samples

- Small JVN examples

Fun

- htreebase
- hgridbase (finite universe; torus, etc.)
- allow (base) x (slow) algorithm "multiplication"
- pluggability of externally-defined algos
- perl/python slowcalc callbacks
- cache of slowcalc
- generational gc
- 32-bit indexed hashlife on 64-bit platforms

For future versions:
--------------------

- Improve batchmode.

- Fix qlifealgo::lowerRightPixel to prevent off-by-one error when
  selecting large pattern like caterpillar.

- Change all Python commands to g_* for consistency with Perl commands.
  Unfortutely, we can't really keep the old commands in same module
  because doing "from golly import *" exposes old and new commands and
  so a script like goto.py that calls a non-Golly open command will fail.
  We could put old commands in a separate module called "oldgolly".
  Maybe best to leave this change for when the scripting API needs
  significant changes due to multi-rect selections or 256-state cells.

- Allow dragging zoom-in cursor to zoom into rect.

- Support toroidal universes (see LifeLab).  Or provide this as part
  of an MCell-compatible lifealgo.

- Stop generating if pattern becomes empty, constant or p2 (qlife only)
  and display suitable message in status bar.  Or maybe just add
  Gabriel's oscillation detection as an option (see oscar.py).

- Optimize Mac version to use CopyBits rather than wx's DrawBitmap.
  NB. Means creating non-XBM bitmaps (ie. no bit reversal).

- Allow non-rectangular (and disjoint) selections.

- Implement a history bar for hlife.

- Add simple methuselah/spaceship/osc/still-life searches as in LifeLab???

User suggestions:
-----------------

[Nick Gotts]
- Need a way to copy exact gen/pop counts to clipboard.
  [No longer necessary now that a script can get this info?]

[Jason Summers]
- For better viewing of patterns that move, have a way to automatically
  move the view X cells horizontally and Y cells vertically every Z gens.
  [Could be done quite easily via a script that prompts for X,Y,Z.]
- Allow diagonal selection rectangles.

[Dave Greene]
- Provide a way to click-and-drag a selection to move it around.
- Make page and arrow scrolling amounts configurable (in Prefs > View).
- Add a getvisrect() script command that returns current viewport rect
  and a setvisrect(rect) command to change viewport size and location.
- Nicer if getrule always returned a standard form; eg. "B3/S23".
  Could then remove horrible CanonicalRule code in wxrule.cpp.
- Make info window a floating window and keep it open (but update
  its contents) when user loads another pattern.

[H Koenig]
- Multiple windows.  [No real need now that we allow multiple layers.]

[Gabriel Nivasch]
- Make paste pattern semi-transparent.  [Tried it -- somewhat confusing.]
- Add a Default button to each Preferences pane (at bottom left?).

[Bill Gosper]
- Modify info window so it can be used to edit and save comments.
  [Not needed if we can open current pattern file in text editor?]
- For scales > 1:1 make the pixel color depend on lg(# of ones in it).

[Brice Due]
- Provide MCell-like editing capabilities.
- Provide a thumbnail option as an alternative to tiled layers;
  ie. the current layer would be displayed in a large "focal" viewport.
  All layers would be displayed as small, active thumbnails (at left
  or top edge of focal viewport, depending on aspect ratio?).
- Allow mc files to set step base and/or exponent via comment line like
  #X stepbase=8 stepexp=3

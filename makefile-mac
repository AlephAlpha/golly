# Makefile for Mac OS X version of Golly using wxWidgets.
# This is a modified version of the automatically generated
# Makefile used to build the wxWidgets minimal sample.

wxdir = /HD/wxWidgets/wxAll-2.6.2
builddir = $(wxdir)/build-osx
APP_NAME = Golly
APP_VERSION = 0.92
COPYRIGHT = 2005 The Golly Gang
BUNDLE_ID = net.sourceforge.golly
ICON_FILE = app.icns

# for building source and binary distributions:
RELEASENAME = golly-$(APP_VERSION)
SHAREDFILES = Help README LICENSE
SRCFILES = INSTALL TODO CHANGES makefile-x11 makefile-mac makefile-win bitmaps golly.rc \
   *.ico appicon.xpm Info.plist.in app.icns *.h *.cpp

CXX = g++
CXXFLAGS = -DVERSION=$(APP_VERSION) -DZLIB -O5 -Wall -Wno-ctor-dtor-privacy -fno-common
CPPFLAGS = -DWX_PRECOMP -DNO_GCC_PRAGMA -I${builddir}/lib/wx/include/mac-ansi-release-static-2.6 -I${wxdir}/include -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -fpascal-strings -I${wxdir}/src/mac/carbon/morefilex -I/Developer/Headers/FlatCarbon
LDFLAGS = -framework QuickTime -framework IOKit -framework Carbon -framework Cocoa -framework System 
WX_LIB_FLAVOUR = 
TOOLKIT = MAC
TOOLKIT_LOWERCASE = mac
TOOLKIT_VERSION = 
EXTRALIBS = -framework QuickTime -framework IOKit -framework Carbon -framework Cocoa -framework System  -lz -lpthread -liconv 
EXTRALIBS_GUI = -lpng -lz -ljpeg -ltiff -framework WebKit

### Variables: ###

WX_RELEASE = 2.6
LIBDIRNAME = $(builddir)/lib
MY_CXXFLAGS = -D__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) \
	$(__EXCEPTIONS_DEFINE_p) $(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) \
	$(__DLLFLAG_p) $(CPPFLAGS) $(CXXFLAGS)

### use .mo extension to avoid conflict with .o files created by X11 build
MY_OBJECTS = bigint.mo lifealgo.mo hlifealgo.mo hlifedraw.mo qlifealgo.mo qlifedraw.mo \
   liferender.mo viewport.mo readpattern.mo writepattern.mo liferules.mo util.mo \
   lifepoll.mo wxgolly.mo

SRCC = bigint.cpp lifealgo.cpp hlifealgo.cpp hlifedraw.cpp qlifealgo.cpp qlifedraw.cpp \
   liferender.cpp viewport.cpp readpattern.cpp writepattern.cpp liferules.cpp util.cpp \
   lifepoll.cpp wxgolly.cpp
SRCH = bigint.h lifealgo.h hlifealgo.h qlifealgo.h liferender.h viewport.h \
   readpattern.h writepattern.h liferules.h util.h lifepoll.h
SRC = $(SRCC) $(SRCH)

### Conditionally set variables: ###

CXXC = $(builddir)/bk-deps $(CXX)
PORTNAME = $(TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
WXBASEPORT = _carbon
EXTRALIBS_FOR_BASE = $(EXTRALIBS)
EXTRALIBS_FOR_GUI = $(EXTRALIBS_GUI)
__WXLIB_HTML_p = -lwx_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_html-$(WX_RELEASE)
__WXLIB_ADV_p = -lwx_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv-$(WX_RELEASE)
__WXLIB_CORE_p = -lwx_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core-$(WX_RELEASE)
__WXLIB_BASE_p = -lwx_base$(WXBASEPORT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)
__LIB_EXPAT_p = -lwxexpat$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)

### Targets: ###

all: golly.bin golly_bundle

install: all

clean: 
	rm -f $(MY_OBJECTS)
	rm -rf $(APP_NAME).app

golly.bin: $(MY_OBJECTS)
	$(CXX) -o $@ $(MY_OBJECTS) $(LDFLAGS) -L$(LIBDIRNAME) $(__WXLIB_HTML_p) $(__WXLIB_ADV_p) $(__WXLIB_CORE_p) $(__WXLIB_BASE_p) $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(__LIB_ZLIB_p) $(__LIB_ODBC_p) $(__LIB_REGEX_p) $(__LIB_EXPAT_p) $(EXTRALIBS_FOR_BASE) $(EXTRALIBS_FOR_GUI)

$(APP_NAME).app/Contents/PkgInfo: golly.bin Info.plist.in $(ICON_FILE)
	mkdir -p $(APP_NAME).app/Contents
	mkdir -p $(APP_NAME).app/Contents/MacOS
	mkdir -p $(APP_NAME).app/Contents/Resources
	
	sed -e "s/IDENTIFIER/$(BUNDLE_ID)/" \
	-e "s/ICONFILE/$(ICON_FILE)/" \
	-e "s/EXECUTABLE/$(APP_NAME)/" \
	-e "s/VERSION/$(APP_VERSION)/" \
	-e "s/COPYRIGHT/$(COPYRIGHT)/" \
	Info.plist.in >$(APP_NAME).app/Contents/Info.plist
	
	echo -n "APPL????" >$(APP_NAME).app/Contents/PkgInfo
	
	mv -f golly.bin $(APP_NAME).app/Contents/MacOS/$(APP_NAME)
	
	cp -f $(ICON_FILE) $(APP_NAME).app/Contents/Resources/$(ICON_FILE)

golly_bundle: $(APP_NAME).app/Contents/PkgInfo

lifealgo.mo: lifealgo.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) lifealgo.cpp

hlifealgo.mo: hlifealgo.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) hlifealgo.cpp

hlifedraw.mo: hlifedraw.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) hlifedraw.cpp

qlifealgo.mo: qlifealgo.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) qlifealgo.cpp

qlifedraw.mo: qlifedraw.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) qlifedraw.cpp

liferules.mo: liferules.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) liferules.cpp

liferender.mo: liferender.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) liferender.cpp

bigint.mo: bigint.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) bigint.cpp

readpattern.mo: readpattern.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) readpattern.cpp

writepattern.mo: writepattern.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) writepattern.cpp

util.mo: util.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) util.cpp

viewport.mo: viewport.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) viewport.cpp

lifepoll.mo: lifepoll.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) lifepoll.cpp

wxgolly.mo: wxgolly.cpp
	$(CXXC) -c -o $@ $(MY_CXXFLAGS) wxgolly.cpp

srcdist:
	-rm -rf $(RELEASENAME)-src
	mkdir $(RELEASENAME)-src
	mkdir $(RELEASENAME)-src/src
	mkdir $(RELEASENAME)-src/patterns
	mkdir $(RELEASENAME)-src/patterns/Patterns
	cp -rp $(SRCFILES) $(SHAREDFILES) $(RELEASENAME)-src/src
	cp -rp ../patterns/Patterns $(RELEASENAME)-src/patterns
	find $(RELEASENAME)-src -name CVS | xargs rm -rf
	tar -cf - ./$(RELEASENAME)-src | gzip > $(RELEASENAME)-src.tar.gz

bindist: all
	-rm -rf $(RELEASENAME)-mac
	mkdir $(RELEASENAME)-mac
	cp -rp $(APP_NAME).app $(SHAREDFILES) $(RELEASENAME)-mac
	cp -rp ../patterns/Patterns $(RELEASENAME)-mac
	find $(RELEASENAME)-mac -name CVS | xargs rm -rf
	tar -cf - ./$(RELEASENAME)-mac | gzip > $(RELEASENAME)-mac.tar.gz

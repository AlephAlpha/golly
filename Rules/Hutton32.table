# Hutton32 -  a modified version of von Neumann's cellular automaton.
# Tim Hutton <tim.hutton@gmail.com>
#
# Motivation: In the original von Neumann transition rules, lines of 
# transmission states can extend themselves by writing out binary 
# signal trains, e.g. 10000 for extend with a right-directed ordinary 
# transmission state (OTS). But for construction, a dual-stranded 
# construction arm (c-arm) is needed, simply because the arm must be 
# retracted after each write. I noticed that there was room to add the
# needed write-and-retract operation by modifying the transition rules 
# slightly. This allows the machine to be greatly reduced in size and 
# speed of replication.
#
# Another modification was made when it was noticed that the 
# construction could be made rotationally invariant simply by basing 
# the orientation of the written cell on the orientation of the one 
# writing it. Instead of "write an up arrow" we have "turn left". This 
# allows us to spawn offspring in different directions and to fill up 
# the space with more and more copies in a manner inspired by
# Langton's Loops. 
#
# Having modified the von Neumann CA transition rules, a new form of
# self-replicator becomes possible, one that replicates much faster
# and exhibits exponential growth in the initial stages.
#
# A single OTS line can now act as a c-arm in any direction. Below are 
# the signal trains:
#
# 100000 : move forward (write an OTS arrow in the same direction)
# 100010 : turn left
# 10100  : turn right
# 100001 : write a forward-directed OTS and retract
# 100011 : write a left-directed OTS and retract
# 10011  : write a reverse-directed OTS and retract
# 10101  : write a right-directed OTS and retract
# 101101 : write a forward-directed STS and retract
# 110001 : write a left-directed STS and retract
# 110101 : write a reverse-directed STS and retract
# 111001 : write a right-directed STS and retract
# 1111   : write a confluent state and retract
# 101111 : retract
#
# Achieving these features without adding new states required making 
# some slight changes elsewhere, though hopefully these don't affect 
# the computation- or construction-universality of the CA. The most 
# important effects are listed here:
#
# 1) OTS's cannot destroy special transmission states (STS's). This 
#    functionality was used in von Neumann's construction and read-
#    write arms but isn't needed for the logic organs, as far as I 
#    know. The opposite operation is still enabled.
# 2) STS lines can only construct one cell type: an OTS in the forward 
#    direction. Some logic organs will need to be redesigned.
#
# Under this modified JvN rule, a self-replicator can be much smaller, 
# consisting only of a tape contained within a repeater-emitter loop. 
# One early example consisted of 5521 cells in total, and replicates 
# in 44,201 timesteps, compared with 8 billion timesteps for the 
# smallest known Nobili32 replicator. This became possible because the 
# construction process runs at the same speed as a moving signal, 
# allowing the tape to be simply stored in a repeater-emitter loop. 
# The machine simply creates a loop of the right size (by counting 
# tape circuits) before allowing the tape contents to fill up their 
# new home.
#
# The rotational invariance allows the machine to make multiple copies 
# oriented in different directions. The population growth starts off 
# as exponential but soons slows down as the long tapes obstruct the 
# new copies.
#
# Some context for these modifications to von Neumann's rule table:
# Codd simplified vN's CA to a rotationally-invariant 8 states. 
# Langton modified this to make a self-replicating repeater-emitter, 
# his 'loops'. Other loops were made by Sayama, Perrier, Tempesti, 
# Byl, Chou-Reggia, and others. So there are other CA derived from 
# vN's that support faster replication than that achieveable here, and 
# some of them retain the computation- and construction-universality
# that von Neumann was considering. Our modifications are mostly a 
# historical exploration of the possibility space around vN's CA, to 
# explore the questions of why he made the design decisions he did.
# In particular, why didn't von Neumann design for a tape loop stored 
# within a repeater-emitter? It would have made his machine much 
# simpler from the beginning. Why didn't he consider write-and-
# retraction instead of designing a complicated c-arm procedure? Of 
# course this is far from criticism of vN - his untimely death 
# interrupted his work in this area. 
#
# Some details of the modifications are given below:
#
# The transition rules are as in Nobili32 (or JvN29), except the 
# following:
# 1) The end of an OTS wire, when writing a new cell, adopts one of 
#    two states: excited OTS and excited STS, standing for bits 1 and 
#    0 respectively. After writing the cell reverts to being an OTS.
# 2) A sensitized cell that is about to revert to an arrow bases its 
#     direction upon that of the excited arrow that is pointing to it. 
# 3) A TS 'c', with a sensitized state 's' on its output that will 
#    become an OTS next (based on the state of 'c'), reverts to the 
#    ground state if any of 'c's input is 1, else it quiesces. 
# 4) A TS 'c', with a sensitized state 's' on its output that will 
#    become a confluent state next (based on the state of 'c'), 
#    reverts to the first sensitized state S is any of 'c's input is 
#    one, else it reverts to the ground state.
# 5) A TS 'c', with an STS on its output, reverts to the ground state 
#    if any of 'c's input is 1.
#
# The body of the machine looks fiddly but it only does these things:
# 1) detect a unique mark on the tape as it goes round
# 2) starts and stops a 6-period pulser
# 3) codes for: extend, turn left, turn left, extend some more
# 4) counts when 3 tape marks have gone past, and switches coder
# 5) when finished writing an empty tape of the right length,
#    divert the tape to copy itself into the new holder
# 6) after the tape is copied across, it separates itself from its
#    old tape to prevent infection spreading from multiple copies.
#
# Automatically produced file from a previous implementation, produced using
# bottom-up merging of the transition rules.
#
# Where a variable appears more than once in a rule, it is not constrained
# to have the same value each time. 
# e.g. for var a={1,2}: 1,a,a,0,2,0 is 4 rules, not 2.
#
# rules: 379
# variables: 150
# format: C,N,E,S,W,C'
# remaining cases default: there shouldn't be any
# symmetries: none (no rotation/reflection)
#
n_states:32
neighborhood_size:5
symmetries:none
var a={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31}
var b={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31}
var c={0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31}
var d={0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31}
var e={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var f={0,8}
var g={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var h={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var i={0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var j={0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var k={13,21}
var l={14,22}
var m={5,7}
var n={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31}
var o={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31}
var p={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31}
var q={15,23}
var r={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,29}
var s={0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,29}
var t={0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,30}
var u={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31}
var v={0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,21,22,24,25,26,27,28,29,30,31}
var w={13,27,28,29,31}
var x={9,10,11,12,13,14,15,16,25,26,27,28,29,30,31}
var y={14,27,28,30,31}
var z={5,8,17,18,19,20,23}
var A={13,21,27,28,29,31}
var B={14,22,27,28,30,31}
var C={16,27,28,30,31}
var D={16,24,27,28,30,31}
var E={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,30}
var F={0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,21,22,23,25,26,27,28,29,30,31}
var G={15,27,28,29,31}
var H={5,8,17,18,19,20,24}
var I={15,23,27,28,29,31}
var J={0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,22,23,24,25,26,27,28,29,30,31}
var K={5,8,17,18,19,20,21}
var L={0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,21,23,24,25,26,27,28,29,30,31}
var M={5,8,17,18,19,20,22}
var N={0,1,2,3}
var O={0,1,2,3,5,6,9,10,11,12,13,14,15,16,21,22,24,25,26,27,28,29,30,31}
var P={4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31}
var Q={4,8,17,18,19,20,23}
var R={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,29}
var S={7,23}
var T={0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,29}
var U={0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,30}
var V={0,1,2,3,5,6,9,10,11,12,13,14,15,16,21,22,23,25,26,27,28,29,30,31}
var W={4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31}
var X={4,8,17,18,19,20,24}
var Y={7,24}
var Z={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,30}
var aa={4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31}
var ab={7,21}
var ac={0,1,2,3,5,6,9,10,11,12,13,14,15,16,22,23,24,25,26,27,28,29,30,31}
var ad={4,8,17,18,19,20,21}
var ae={0,1,2,3,5,6,9,10,11,12,13,14,15,16,21,23,24,25,26,27,28,29,30,31}
var af={4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31}
var ag={4,8,17,18,19,20,22}
var ah={7,22}
var ai={17,18,19,20,23}
var aj={21,27,28,29,31}
var ak={17,18,19,20,24}
var al={22,27,28,30,31}
var am={17,18,19,20,21}
var an={17,18,19,20,22}
var ao={24,27,28,30,31}
var ap={23,27,28,29,31}
var aq={0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,20,21,22,23,25,26,29}
var ar={0,1,2,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,23,24,25,26,29}
var as={0,1,2,3,4,5,6,7,8,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,30}
var at={1,2,3,4}
var au={9,21,27,28,29,31}
var av={10,22,27,28,30,31}
var aw={5,6,7,8}
var ax={21,23}
var ay={5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var az={0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aA={1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aB={0,1,2,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aC={21,24}
var aD={0,1,2,3,4,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aE={0,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aF={1,2,3,4,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aG={12,24,27,28,30,31}
var aH={21,22}
var aI={24,27}
var aJ={0,1,2,3,4,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aK={28,30,31}
var aL={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aM={0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,24,25,26,30}
var aN={11,23,27,28,29,31}
var aO={22,23}
var aP={5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aQ={0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aR={22,24}
var aS={9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aT={0,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aU={23,24}
var aV={1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aW={0,1,2,3,4,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aX={1,2,3,4,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var aY={27,28,30,31}
var aZ={1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var ba={0,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var bb={0,1,2,3,4,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var bc={1,2,3,4,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}
var bd={0,24}
var be={23,27}
var bf={25,27,29,30,31}
var bg={25,27}
var bh={0,1,2,3,4,5,6,7,8,25,26,27,28,29,30,31}
var bi={0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31}
var bj={0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31}
var bk={0,1,2,3,4,5,6,7,8,12,20,25,26,27,28,29,30,31}
var bl={0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31}
var bm={0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31}
var bn={0,1,2,3,4,5,6,7,8,11,19,25,26,27,28,29,30,31}
var bo={0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,17,18,19,21,22,23,25,26,27,28,29,30,31}
var bp={0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,20,21,22,24,25,26,27,28,29,30,31}
var bq={0,1,2,3,4,5,6,7,8,9,11,12,13,15,16,17,19,20,21,23,24,25,26,27,28,29,30,31}
var br={25,29,30,31}
var bs={9,10,11,13,14,15,17,18,19,21,22,23}
var bt={9,10,12,13,14,16,17,18,20,21,22,24}
var bu={10,18}
var bv={0,1,2,3,4,5,6,7,8,10,11,12,14,15,16,18,19,20,22,23,24,25,26,27,28,29,30,31}
var bw={9,17}
var bx={0,1,2,3,4,5,6,7,8,10,18,25,26,27,28,29,30,31}
var by={11,15,19}
var bz={9,11,12,13,15,16,17,19,20,21,23,24}
var bA={0,1,2,3,4,5,6,7,8,10,14,18,25,26,27,28,29,30,31}
var bB={0,1,2,3,4,5,6,7,8,9,13,17,25,26,27,28,29,30,31}
var bC={11,19}
var bD={10,11,12,14,15,16,18,19,20,22,23,24}
var bE={0,1,2,3,4,5,6,7,8,11,15,19,25,26,27,28,29,30,31}
var bF={9,13,17}
var bG={0,1,2,3,4,5,6,7,8,14,18,25,26,27,28,29,30,31}
var bH={0,1,2,3,4,5,6,7,8,13,17,25,26,27,28,29,30,31}
var bI={0,1,2,3,4,5,6,7,8,15,19,25,26,27,28,29,30,31}
var bJ={12,20}
var bK={12,16,20}
var bL={0,1,2,3,4,5,6,7,8,12,16,20,25,26,27,28,29,30,31}
var bM={10,14,18}
var bN={0,1,2,3,4,5,6,7,8,16,20,25,26,27,28,29,30,31}
var bO={26,28}
var bP={9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31}
var bQ={9,10,11,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31}
var bR={9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31}
var bS={9,10,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31}
var bT={29,30,31}
0,a,b,c,d,0
0,e,e,e,13,1
f,g,h,i,21,9
0,e,e,14,e,1
f,g,h,22,d,10
0,e,15,e,e,1
f,g,23,c,d,11
0,16,e,e,e,1
f,24,b,c,d,12
1,g,h,i,j,2
1,e,e,e,13,3
1,e,e,14,e,3
1,e,15,e,e,3
1,16,e,e,e,3
2,g,h,i,j,4
2,e,e,e,13,5
2,e,e,14,e,5
2,e,15,e,e,5
2,16,e,e,e,5
3,g,h,i,j,6
3,e,e,e,13,7
3,e,e,14,e,7
3,e,15,e,e,7
3,16,e,e,e,7
4,g,h,i,j,8
4,e,e,e,13,11
4,e,e,14,d,12
4,e,e,14,k,11
4,e,15,c,d,9
4,e,15,e,k,11
4,e,15,l,d,12
4,16,b,c,d,10
4,16,e,e,k,11
4,16,e,l,d,12
4,16,23,c,d,9
5,a,b,c,d,7
5,e,e,e,13,17
5,g,h,i,21,12
5,e,e,14,d,18
m,e,e,14,21,25
5,g,h,22,d,9
5,e,15,c,d,19
m,e,15,e,21,25
5,e,15,22,d,26
5,g,23,c,d,10
5,16,b,c,d,20
m,16,e,e,21,25
5,16,e,22,d,26
5,16,23,c,d,27
5,24,b,c,d,11
6,g,n,c,d,17
6,e,e,e,13,19
6,g,h,i,21,18
6,e,e,14,d,20
6,e,e,14,k,19
6,g,h,22,o,19
6,e,15,e,k,19
6,e,15,l,d,20
6,g,23,p,d,20
6,16,b,c,d,18
6,16,e,e,k,19
6,16,e,l,d,20
6,16,q,c,d,17
7,a,b,c,d,15
7,e,e,e,13,25
7,g,h,i,21,20
7,e,e,14,e,25
7,g,h,22,d,17
7,e,15,e,e,25
7,g,23,c,d,18
7,16,e,e,e,25
7,24,b,c,d,19
8,a,b,c,d,8
8,e,e,e,13,10
8,e,e,14,d,11
8,e,e,14,k,10
8,e,15,c,d,12
8,e,15,e,k,10
8,e,15,l,d,11
8,16,b,c,d,9
8,16,e,e,k,10
8,16,e,l,d,11
8,16,23,c,d,12
9,r,n,s,t,9
9,u,v,p,w,13
x,e,e,e,21,0
9,u,v,y,o,13
x,e,e,22,e,0
9,e,z,e,A,0
9,e,z,B,e,0
x,e,23,e,e,0
9,C,v,p,o,13
9,D,z,e,e,0
x,24,e,e,e,0
10,u,E,s,t,10
10,F,n,p,w,14
10,F,n,y,o,14
10,F,G,p,o,14
10,H,e,e,A,0
10,H,e,B,e,0
10,H,I,e,e,0
11,r,E,s,o,11
11,u,n,y,J,15
11,e,e,B,K,0
11,u,G,p,J,15
11,e,I,e,K,0
11,C,n,p,J,15
11,D,e,e,K,0
12,r,E,p,t,12
12,u,n,L,w,16
12,e,e,M,A,0
12,u,G,L,o,16
12,e,I,M,e,0
12,C,n,L,o,16
12,D,e,M,e,0
13,r,N,s,t,21
13,u,O,p,w,13
13,u,O,y,o,13
13,r,P,s,t,9
13,e,Q,e,A,0
13,e,Q,B,e,0
13,R,S,T,U,0
13,u,7,p,w,1
13,u,7,y,o,1
13,C,O,p,o,13
13,D,Q,e,e,0
13,C,7,p,o,1
14,N,E,s,t,22
14,V,n,p,w,14
14,V,n,y,o,14
14,V,G,p,o,14
14,W,E,s,t,10
14,X,e,e,A,0
14,X,e,B,e,0
14,X,I,e,e,0
14,Y,Z,T,U,0
14,7,n,p,w,1
14,7,n,y,o,1
14,7,G,p,o,1
15,r,E,s,N,23
15,r,E,s,aa,11
15,R,Z,T,ab,0
15,u,n,y,ac,15
15,e,e,B,ad,0
15,u,n,y,7,1
15,u,G,p,ac,15
15,e,I,e,ad,0
15,u,G,p,7,1
15,C,n,p,ac,15
15,D,e,e,ad,0
15,C,n,p,7,1
16,r,E,N,t,24
16,u,n,ae,w,16
16,r,E,af,t,12
16,e,e,ag,A,0
16,R,Z,ah,U,0
16,u,n,7,w,1
16,u,G,ae,o,16
16,e,I,ag,e,0
16,u,G,7,o,1
16,C,n,ae,o,16
16,D,e,ag,e,0
16,C,n,7,o,1
17,r,h,s,t,17
ai,e,e,e,13,0
17,g,h,i,aj,21
ak,e,e,14,e,0
17,g,h,al,j,21
am,e,15,e,e,0
an,16,e,e,e,0
17,ao,h,i,j,21
18,g,E,s,t,18
18,g,h,i,aj,22
18,g,h,al,j,22
18,g,ap,i,j,22
19,r,E,s,j,19
19,g,h,al,j,23
19,g,ap,i,j,23
19,ao,h,i,j,23
20,r,E,i,t,20
20,g,h,i,aj,24
20,g,ap,i,j,24
20,ao,h,i,j,24
21,u,0,p,o,17
21,e,0,e,21,21
21,e,0,22,e,21
21,aq,h,ar,as,17
21,g,at,i,au,21
21,e,at,e,13,13
21,g,at,av,j,21
21,e,at,14,e,13
21,g,aw,i,9,9
ax,e,ay,e,13,0
21,az,aA,aB,aj,21
21,g,aw,10,j,9
aC,e,ay,14,e,0
21,az,aA,al,aD,21
21,r,aE,s,t,17
21,g,aF,i,aj,21
21,g,aF,al,j,21
21,aG,at,i,j,21
21,12,aw,i,j,9
21,16,at,e,e,13
aH,16,ay,e,e,0
21,24,0,e,e,21
21,aI,h,aB,aD,21
21,aI,aJ,i,j,21
21,aK,aA,aB,aD,21
21,aK,aF,i,j,21
22,0,n,p,o,18
22,0,e,e,21,22
22,0,e,22,e,22
22,0,23,e,e,22
22,aL,aM,ar,as,18
22,at,h,i,au,22
22,at,e,e,13,14
22,at,h,av,j,22
22,at,e,14,e,14
22,at,aN,i,j,22
22,at,15,e,e,14
22,aw,h,i,9,10
aO,ay,e,e,13,0
22,aP,aQ,aB,aj,22
22,aw,h,10,j,10
aR,ay,e,14,e,0
22,aP,aQ,al,aD,22
22,aw,11,i,j,10
22,ay,15,e,e,0
22,aP,ap,aB,aD,22
22,aS,E,s,t,18
22,aS,h,i,aj,22
22,aS,h,al,j,22
22,aS,ap,i,j,22
23,aq,aM,ar,j,19
23,r,E,s,aT,19
23,g,h,av,at,23
23,g,h,10,aw,11
23,u,n,p,0,19
23,e,e,14,at,15
aU,e,e,14,ay,0
23,az,aQ,22,j,23
23,az,aQ,al,aV,23
23,g,aN,i,at,23
23,g,11,i,aw,11
23,g,h,22,aW,23
23,g,h,al,aX,23
23,e,15,e,at,15
23,e,15,e,ay,0
23,e,e,22,0,23
23,az,23,aB,j,23
23,g,23,i,aW,23
23,e,23,e,0,23
23,az,ap,aB,aV,23
23,g,ap,i,aX,23
23,aG,h,i,at,23
23,12,h,i,aw,11
23,16,e,e,at,15
23,16,e,e,ay,0
23,24,aQ,aB,j,23
23,24,h,i,aW,23
23,24,e,e,0,23
23,aY,aQ,aB,aV,23
23,aY,h,i,aX,23
24,u,n,0,o,20
24,az,aQ,i,21,24
24,aq,aM,i,as,20
24,g,h,at,au,24
24,e,e,at,13,16
24,g,h,aw,9,12
24,e,e,ay,13,0
24,az,aQ,aZ,aj,24
24,r,E,ba,t,20
24,g,h,bb,21,24
24,g,aN,at,j,24
24,g,11,aw,j,12
24,g,h,bc,aj,24
24,e,e,0,21,24
24,e,15,at,e,16
24,e,15,ay,e,0
24,e,23,0,e,24
24,bd,be,i,aD,24
24,bd,be,bb,j,24
24,az,ap,aZ,aD,24
24,g,ap,bc,j,24
24,aG,h,at,j,24
24,12,h,aw,j,12
24,16,e,at,e,16
24,16,e,ay,e,0
24,24,e,0,e,24
24,24,aQ,i,aD,24
24,24,h,bb,j,24
24,aY,aQ,aZ,aD,24
24,aY,h,bc,j,24
bf,a,b,c,d,25
bg,bh,bi,bj,13,26
bg,bk,n,10,o,25
bg,bh,bi,14,bl,26
bg,bk,n,p,9,25
bg,bk,11,p,o,25
bg,bh,15,bj,bl,26
bg,bm,bh,bj,13,26
bg,u,bn,10,o,25
bg,bm,bh,14,bl,26
bg,u,bn,p,9,25
bg,bo,bp,bq,13,26
br,bs,bt,bu,13,29
bg,bo,bp,14,bv,26
br,bs,bt,14,bw,30
br,bs,bt,14,13,31
bg,u,11,bx,o,25
br,bs,by,bz,13,29
bg,u,11,bA,bB,25
br,bs,bC,14,bD,30
bg,bm,15,bh,bl,26
bg,u,bE,bA,9,25
bg,bo,15,bq,bv,26
br,bs,15,bz,bF,29
bg,u,bE,10,bB,25
br,bs,15,bu,bD,29
bg,bm,15,bG,bH,26
br,bs,15,14,bD,31
bg,bm,bI,bG,13,26
bg,bm,bI,14,bH,26
bg,12,bn,p,o,25
bg,12,n,bx,o,25
br,bJ,bt,bz,13,29
bg,12,n,bA,bB,25
br,bK,bt,14,bD,30
bg,12,bE,p,bB,25
br,bJ,15,bz,bD,29
bg,12,bE,bA,o,25
bg,16,bh,bj,bl,26
bg,16,bi,bh,bl,26
bg,bL,n,bA,9,25
bg,16,bp,bq,bv,26
br,16,bt,bz,bw,30
br,16,bt,bz,13,31
bg,bL,n,10,bB,25
br,16,bt,bM,bD,30
bg,16,bi,bG,bH,26
bg,bL,11,p,bB,25
br,16,bC,bz,bD,30
bg,bL,11,bA,o,25
bg,16,bI,bj,bH,26
bg,bL,bE,p,9,25
br,16,15,bz,bD,31
bg,bL,bE,10,o,25
bg,16,bI,bG,bl,26
bg,bN,bi,bG,13,26
bg,bN,bi,14,bH,26
bg,bN,15,bj,bH,26
bg,bN,15,bG,bl,26
bg,bN,bI,bj,13,26
bg,bN,bI,14,bl,26
bO,a,b,c,d,27
bO,bm,bi,bj,13,28
bO,u,n,10,o,27
bO,bm,bi,14,bl,28
bO,u,n,p,9,27
bO,u,11,p,o,27
bO,bm,15,bj,bl,28
bO,12,n,p,o,27
bO,16,bi,bj,bl,28
27,bP,n,10,o,25
27,bP,n,p,9,25
27,bQ,bi,14,bl,26
27,bQ,bi,bj,13,26
27,bP,11,p,o,25
27,bQ,15,bj,bl,26
27,12,bR,p,o,25
27,16,bS,bj,bl,26
bT,a,n,c,13,29
bT,u,b,14,d,30
bT,u,n,14,13,31
bT,a,15,c,o,29
bT,u,15,14,o,31
bT,16,b,p,d,30
bT,16,n,p,13,31
bT,16,15,p,o,31

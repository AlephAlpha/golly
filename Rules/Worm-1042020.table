# Paterson's worms# (by Dean Hickerson, 11/25/2008)#     Pattern #062a#     Sven Kahrkling's notation 1042020#     Gardner's notation 1a2c3aaca4a#     Finishes after 57,493,855,205,939 steps.# Points and lines of hexagonal grid are mapped to points of square grid as# below.  "*" is a point of the hex grid, "-", "/", and # "\" are lines# of the hex grid.## +--+--+--+--+# |- |* |- |* |# +--+--+--+--+# | /| \| /| \|# +--+--+--+--+# |* |- |* |- |# +--+--+--+--+## Each step of the worm is simulated by 2 gens in the rule.  In even gens,# there's an arrow at one point of the hex grid showing which way the worm# will move next.  In odd gens, there's an arrow on one line of the hex# grid.  The transitions from even to odd gens are the same for all worms.# Those from odd to even depend on the specific type of worm: If a point# (state 0 or 1) has a line with an arrow pointing at it, it becomes a# 'point with arrow'; the direction depends on the 6 neighboring lines,# which are the NW, N, E, S, SW, and W neighbors in the square grid.## Gen 0 consists of a single point in state 11, a 'point with arrow'# pointing east.  (Starting with a point in state 12, 13, ..., or 16# would also work, rotating the whole pattern.)## States are:## 0            empty (unvisited point or line)# 1            point that's been visited# 2,3,4        edge -  (2=line; 3=E arrow; 4=W arrow)# 5,6,7        edge /  (5=line; 6=NE arrow; 7=SW arrow)# 8,9,10       edge \  (8=line; 9=SE arrow; 10=NW arrow)# 11-16        'point with arrow', showing direction of next movement#              (11=E; 12=SE; 13=SW; 14=W; 15=NW; 16=NE)n_states:17neighborhood:Mooresymmetries:nonevar point={11,12,13,14,15,16}var a0={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}var a1={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}var a2={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}var a3={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}var a4={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}var a5={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}var a6={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}var a7={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}var n={2,5,8}var o={2,5,8}var p={2,5,8}var q={2,5,8}var b={0,1}# point with arrow becomes point that's been visitedpoint,a0,a1,a2,a3,a4,a5,a6,a7,1# line with arrow becomes line without arrow3,a0,a1,a2,a3,a4,a5,a6,a7,24,a0,a1,a2,a3,a4,a5,a6,a7,26,a0,a1,a2,a3,a4,a5,a6,a7,57,a0,a1,a2,a3,a4,a5,a6,a7,59,a0,a1,a2,a3,a4,a5,a6,a7,810,a0,a1,a2,a3,a4,a5,a6,a7,8# point with arrow creates line with arrow next to it0,a0,a1,a2,a3,a4,a5,11,a6,30,12,a0,a1,a2,a3,a4,a5,a6,90,a0,13,a1,a2,a3,a4,a5,a6,70,a0,a1,14,a2,a3,a4,a5,a6,40,a0,a1,a2,15,a3,a4,a5,a6,100,a0,a1,a2,a3,16,a4,a5,a6,6# 4 eaten: use only remaining direction# 0 (straight):b,0,a0,n,a1,o,6,p,q,16b,n,a0,0,a1,o,p,3,q,11b,n,a0,o,a1,0,p,q,9,12b,7,a0,n,a1,o,0,p,q,13b,n,a0,4,a1,o,p,0,q,14b,n,a0,o,a1,10,p,q,0,15# 1 (gentle right):b,n,a0,0,a1,o,6,p,q,11b,n,a0,o,a1,0,p,3,q,12b,n,a0,o,a1,p,0,q,9,13b,7,a0,n,a1,o,p,0,q,14b,n,a0,4,a1,o,p,q,0,15b,0,a0,n,a1,10,o,p,q,16# 2 (sharp right):b,n,a0,o,a1,0,6,p,q,12b,n,a0,o,a1,p,0,3,q,13b,n,a0,o,a1,p,q,0,9,14b,7,a0,n,a1,o,p,q,0,15b,0,a0,4,a1,n,o,p,q,16b,n,a0,0,a1,10,o,p,q,11# 4 (sharp left):b,n,a0,o,a1,p,6,0,q,14b,n,a0,o,a1,p,q,3,0,15b,0,a0,n,a1,o,p,q,9,16b,7,a0,0,a1,n,o,p,q,11b,n,a0,4,a1,0,o,p,q,12b,n,a0,o,a1,10,0,p,q,13# 5 (gentle left):b,n,a0,o,a1,p,6,q,0,15b,0,a0,n,a1,o,p,3,q,16b,n,a0,0,a1,o,p,q,9,11b,7,a0,n,a1,0,o,p,q,12b,n,a0,4,a1,o,0,p,q,13b,n,a0,o,a1,10,p,0,q,14# rule-specific transitions at point with arrow coming in# rule 1042020# none eaten:  1 = gentle rightb,0,a0,0,a1,0,6,0,0,11b,0,a0,0,a1,0,0,3,0,12b,0,a0,0,a1,0,0,0,9,13b,7,a0,0,a1,0,0,0,0,14b,0,a0,4,a1,0,0,0,0,15b,0,a0,0,a1,10,0,0,0,16# 1 eaten(1):  0 = straightb,0,a0,n,a1,0,6,0,0,16b,0,a0,0,a1,n,0,3,0,11b,0,a0,0,a1,0,n,0,9,12b,7,a0,0,a1,0,0,n,0,13b,0,a0,4,a1,0,0,0,n,14b,n,a0,0,a1,10,0,0,0,15# 2 eaten(02):  4 = sharp leftb,n,a0,0,a1,o,6,0,0,14b,0,a0,n,a1,0,o,3,0,15b,0,a0,0,a1,n,0,o,9,16b,7,a0,0,a1,0,n,0,o,11b,o,a0,4,a1,0,0,n,0,12b,0,a0,o,a1,10,0,0,n,13# 2 eaten(15):  2 = sharp rightb,0,a0,o,a1,0,6,0,n,12b,n,a0,0,a1,o,0,3,0,13b,0,a0,n,a1,0,o,0,9,14b,7,a0,0,a1,n,0,o,0,15b,0,a0,4,a1,0,n,0,o,16b,o,a0,0,a1,10,0,n,0,11# 2 eaten(24):  0 = straightb,0,a0,0,a1,n,6,o,0,16b,0,a0,0,a1,0,n,3,o,11b,o,a0,0,a1,0,0,n,9,12b,7,a0,o,a1,0,0,0,n,13b,n,a0,4,a1,o,0,0,0,14b,0,a0,n,a1,10,o,0,0,15# 2 eaten(04):  2 = sharp rightb,n,a0,0,a1,0,6,o,0,12b,0,a0,n,a1,0,0,3,o,13b,o,a0,0,a1,n,0,0,9,14b,7,a0,o,a1,0,n,0,0,15b,0,a0,4,a1,o,0,n,0,16b,0,a0,0,a1,10,o,0,n,11# 3 eaten(145):  0 = straightb,0,a0,n,a1,0,6,o,p,16b,p,a0,0,a1,n,0,3,o,11b,o,a0,p,a1,0,n,0,9,12b,7,a0,o,a1,p,0,n,0,13b,0,a0,4,a1,o,p,0,n,14b,n,a0,0,a1,10,o,p,0,15